{
	"id": "7aa8916e9423258fb7d283e5d87cc328",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/test.sol": {
				"content": "pragma solidity ^0.8.16;\r\n\r\nimport \"./stake.sol\";\r\n\r\ncontract test {\r\n    function test1() private {\r\n        StakingRewards(0x05c8dC15515300725Fb02899678E3AC95D264184).setStartTime(1);\r\n    }\r\n\r\n    function test2() public  {\r\n        test1();\r\n    }\r\n}"
			},
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 168000 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 10 minutes;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n\r\n    uint256 private _totalPowers;\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time <= startTime) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setStartTime(uint256 time) external onlyAdmin {\r\n        startTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function curTime() external  view  returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function getRewardPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return totalRewards;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        // TODO 精度问题\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function _getRemainPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getRemainPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval;\r\n        uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        if(leftTime + leftInterval > rightTime) {\r\n            return _getRewardRate(leftTime);\r\n        }\r\n\r\n        uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval;\r\n        uint256 startReward = getRemainPool(leftTime); \r\n        uint256 midTotalReward = 0;\r\n        uint256 nextReward = 0;\r\n        uint256 value = startReward;\r\n        uint256 times = midInterval / rateInterval;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            nextReward = value * rateIntervalNumerator / rateIntervalDenominator;\r\n            value = value - nextReward;\r\n            midTotalReward += nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() external nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function setRewardToken(address token) external onlyOwner {\r\n        rewardsToken = IERC20(token);\r\n    }\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    function emergencyWithdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "curTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRemainPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":371:7266  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":581:598  168000 * 10 ** 18 */\n  0x23934c5a09da19000000\n    /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":666:676  10 minutes */\n  0x0258\n    /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":722:723  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":771:775  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":371:7266  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  tag_6\n    /* \"inviter_presell/adminable.sol\":622:632  _msgSender */\n  shl(0x20, tag_7)\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/stake.sol\":371:7266  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"inviter_presell/adminable.sol\":116:123  address */\n  0x00\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n  0x01\n  0x00\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":371:7266  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":371:7266  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8107368b\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xadc9772e\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_35\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0xadc9772e\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xb79ec812\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9a5b17b0\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa4c3b091\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x8107368b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x4dbdc4eb\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x4dbdc4eb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5cfa91f4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x24d7806c\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e0a322d\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":4407:4703  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_5:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_6:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_7:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_8:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6445:6750  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      stop\n        /* \"inviter_presell/stake.sol\":1682:1772  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_10:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"inviter_presell/stake.sol\":3157:3573  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_11:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2224:2723  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_12:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_13:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1780:1873  function totalPowers() external view returns (uint256) {... */\n    tag_14:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      stop\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_16:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_17:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":3936:4043  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_18:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":926:979  mapping(address => uint256) public userLastUpdateTime */\n    tag_19:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4051:4399  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_20:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_104:\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6758:6863  function setRewardToken(address token) external onlyOwner {... */\n    tag_21:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      stop\n        /* \"inviter_presell/stake.sol\":862:919  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_22:\n      tag_110\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2102:2216  function getCurRewardPool() public view returns (uint256) {... */\n    tag_24:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1881:1975  function curTime() external  view  returns (uint256) {... */\n    tag_25:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7120:7263  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_26:\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      stop\n        /* \"inviter_presell/stake.sol\":6139:6433  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_27:\n      tag_128\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_129\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n    tag_128:\n      stop\n        /* \"inviter_presell/stake.sol\":1983:2094  function powersOf(address account) external view returns (uint256) {... */\n    tag_28:\n      tag_131\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_134\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_29:\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      tag_137\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":3581:3696  function getCurRewardRate() public view returns (uint256) {... */\n    tag_30:\n      tag_138\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_31:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4746:6129  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_32:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      tag_148\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6997:7112  function emergencyWithdraw() external onlyOwner {... */\n    tag_33:\n      tag_150\n      tag_151\n      jump\t// in\n    tag_150:\n      stop\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_34:\n      tag_152\n      tag_153\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_35:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_156:\n      tag_157\n      jump\t// in\n    tag_155:\n      stop\n        /* \"inviter_presell/stake.sol\":4407:4703  function earned(address account) public view returns (uint256) {... */\n    tag_46:\n        /* \"inviter_presell/stake.sol\":4461:4468  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4481:4493  uint256 rate */\n      dup1\n        /* \"inviter_presell/stake.sol\":4496:4564  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_159\n        /* \"inviter_presell/stake.sol\":4519:4537  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":4519:4546  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4538:4545  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":4519:4546  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4548:4563  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4496:4518  getTimeWeightedAveRate */\n      tag_148\n        /* \"inviter_presell/stake.sol\":4496:4564  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_159:\n        /* \"inviter_presell/stake.sol\":4481:4564  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4582:4695  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_160\n        /* \"inviter_presell/stake.sol\":4678:4685  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":4678:4694  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4686:4693  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":4678:4694  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4582:4673  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_161\n        /* \"inviter_presell/stake.sol\":4668:4672  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4582:4663  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_162\n        /* \"inviter_presell/stake.sol\":4605:4662  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_163\n        /* \"inviter_presell/stake.sol\":4630:4652  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":4630:4661  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4653:4660  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4630:4661  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4605:4625  rewardPerToken(rate) */\n      tag_164\n        /* \"inviter_presell/stake.sol\":4620:4624  rate */\n      dup9\n        /* \"inviter_presell/stake.sol\":4605:4619  rewardPerToken */\n      tag_105\n        /* \"inviter_presell/stake.sol\":4605:4625  rewardPerToken(rate) */\n      jump\t// in\n    tag_164:\n        /* \"inviter_presell/stake.sol\":4605:4629  rewardPerToken(rate).sub */\n      tag_165\n      swap1\n        /* \"inviter_presell/stake.sol\":4605:4662  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"inviter_presell/stake.sol\":4582:4591  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":4582:4600  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4592:4599  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4582:4600  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4582:4604  _balances[account].mul */\n      tag_166\n      swap1\n        /* \"inviter_presell/stake.sol\":4582:4663  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"inviter_presell/stake.sol\":4582:4667  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      tag_167\n      swap1\n        /* \"inviter_presell/stake.sol\":4582:4673  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"inviter_presell/stake.sol\":4582:4677  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_168\n      swap1\n        /* \"inviter_presell/stake.sol\":4582:4695  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_160:\n        /* \"inviter_presell/stake.sol\":4575:4695  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4407:4703  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_51:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_54:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_59:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_170\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_172\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_172:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"inviter_presell/adminable.sol\":1755:1760  admin */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1771:1776  admin */\n      dup6\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1779:1784  state */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      tag_177\n      swap3\n      swap2\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/adminable.sol\":1813:1818  state */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1804:1809  admin */\n      dup5\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_62:\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1098  _admins */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1099:1106  account */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1084:1107  return _admins[account] */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_66:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6445:6750  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_69:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_181\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_181:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6501:6511  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1131:1143  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1146:1164  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1165:1172  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1131:1173  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1195:1204  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1187:1191  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1187:1204  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n      tag_185\n      jumpi\n        /* \"inviter_presell/stake.sol\":1228:1237  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1221:1237  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n    tag_185:\n        /* \"inviter_presell/stake.sol\":1259:1271  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_186\n        /* \"inviter_presell/stake.sol\":1297:1301  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1303:1318  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1274:1296  getTimeWeightedAveRate */\n      tag_148\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_186:\n        /* \"inviter_presell/stake.sol\":1259:1319  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      tag_187\n        /* \"inviter_presell/stake.sol\":1368:1372  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1353:1367  rewardPerToken */\n      tag_105\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      jump\t// in\n    tag_187:\n        /* \"inviter_presell/stake.sol\":1330:1350  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1330:1373  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      tag_188\n        /* \"inviter_presell/stake.sol\":1401:1425  lastTimeRewardApplicable */\n      tag_97\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_188:\n        /* \"inviter_presell/stake.sol\":1384:1398  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1384:1427  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1461:1462  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1442:1449  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n      tag_189\n      jumpi\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      tag_190\n        /* \"inviter_presell/stake.sol\":1506:1513  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1505  earned */\n      tag_46\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      jump\t// in\n    tag_190:\n        /* \"inviter_presell/stake.sol\":1480:1487  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1488:1495  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1480:1514  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1563:1583  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1529:1551  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1552:1559  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1529:1583  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1628:1643  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1598:1616  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1617:1624  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1598:1643  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n    tag_189:\n        /* \"inviter_presell/stake.sol\":6524:6538  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6541:6548  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6541:6560  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6549:6559  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6541:6560  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6524:6560  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6584:6585  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6575:6581  reward */\n      dup2\n        /* \"inviter_presell/stake.sol\":6575:6585  reward > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6571:6743  if (reward > 0) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"inviter_presell/stake.sol\":6624:6625  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6602:6609  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6602:6621  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6610:6620  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6602:6621  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6602:6625  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6640:6652  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":6640:6661  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":6662:6672  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6674:6680  reward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6640:6681  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_196:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      pop\n        /* \"inviter_presell/stake.sol\":6712:6722  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6701:6731  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"inviter_presell/stake.sol\":6724:6730  reward */\n      dup3\n        /* \"inviter_presell/stake.sol\":6701:6731  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_199\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":6571:6743  if (reward > 0) {... */\n    tag_192:\n        /* \"inviter_presell/stake.sol\":6513:6750  {... */\n      pop\n        /* \"inviter_presell/stake.sol\":1120:1674  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2484:2485  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6445:6750  function getReward() external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1682:1772  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_73:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_201\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_202\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_202:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_62\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_201:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"inviter_presell/stake.sol\":1760:1764  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":1748:1757  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":1748:1764  startTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1682:1772  function setStartTime(uint256 time) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3157:3573  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_76:\n        /* \"inviter_presell/stake.sol\":3215:3222  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3251:3252  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3238:3247  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3238:3252  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3235:3297  if(startTime == 0) {... */\n      tag_208\n      jumpi\n        /* \"inviter_presell/stake.sol\":3276:3285  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3269:3285  return startTime */\n      swap1\n      pop\n      jump(tag_207)\n        /* \"inviter_presell/stake.sol\":3235:3297  if(startTime == 0) {... */\n    tag_208:\n        /* \"inviter_presell/stake.sol\":3307:3320  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":3359:3360  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":3344:3356  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3331:3340  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3324:3328  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":3324:3340  time - startTime */\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n        /* \"inviter_presell/stake.sol\":3323:3356  (time - startTime) / rateInterval */\n      tag_211\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n        /* \"inviter_presell/stake.sol\":3323:3360  (time - startTime) / rateInterval + 1 */\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"inviter_presell/stake.sol\":3307:3360  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3371:3384  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":3387:3399  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3371:3399  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3414:3423  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":3410:3543  for(uint256 i = 0; i < times; ++i) {... */\n    tag_215:\n        /* \"inviter_presell/stake.sol\":3433:3438  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":3429:3430  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":3429:3438  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":3410:3543  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_216\n      jumpi\n        /* \"inviter_presell/stake.sol\":3508:3531  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3484:3505  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3476:3481  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":3476:3505  value * rateIntervalNumerator */\n      tag_218\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"inviter_presell/stake.sol\":3476:3531  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_220\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_220:\n        /* \"inviter_presell/stake.sol\":3468:3473  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":3468:3531  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_221\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_221:\n        /* \"inviter_presell/stake.sol\":3460:3531  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":3440:3443  ++i */\n      dup1\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3410:3543  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_215)\n    tag_216:\n      pop\n        /* \"inviter_presell/stake.sol\":3560:3565  value */\n      dup1\n        /* \"inviter_presell/stake.sol\":3553:3565  return value */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3157:3573  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_207:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2224:2723  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_80:\n        /* \"inviter_presell/stake.sol\":2282:2289  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2318:2319  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2305:2314  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2305:2319  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2302:2367  if(startTime == 0) {... */\n      tag_225\n      jumpi\n        /* \"inviter_presell/stake.sol\":2343:2355  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2336:2355  return totalRewards */\n      swap1\n      pop\n      jump(tag_224)\n        /* \"inviter_presell/stake.sol\":2302:2367  if(startTime == 0) {... */\n    tag_225:\n        /* \"inviter_presell/stake.sol\":2377:2390  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2429:2430  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2414:2426  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2401:2410  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2394:2398  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":2394:2410  time - startTime */\n      tag_226\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_226:\n        /* \"inviter_presell/stake.sol\":2393:2426  (time - startTime) / rateInterval */\n      tag_227\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_227:\n        /* \"inviter_presell/stake.sol\":2393:2430  (time - startTime) / rateInterval + 1 */\n      tag_228\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_228:\n        /* \"inviter_presell/stake.sol\":2377:2430  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2441:2454  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2457:2469  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2441:2469  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2484:2493  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":2480:2613  for(uint256 i = 0; i < times; ++i) {... */\n    tag_229:\n        /* \"inviter_presell/stake.sol\":2503:2508  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2499:2500  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2499:2508  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2480:2613  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_230\n      jumpi\n        /* \"inviter_presell/stake.sol\":2578:2601  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2554:2575  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2546:2551  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2546:2575  value * rateIntervalNumerator */\n      tag_232\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_232:\n        /* \"inviter_presell/stake.sol\":2546:2601  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_233\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_233:\n        /* \"inviter_presell/stake.sol\":2538:2543  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2538:2601  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_234\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_234:\n        /* \"inviter_presell/stake.sol\":2530:2601  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2510:2513  ++i */\n      dup1\n      tag_235\n      swap1\n      tag_223\n      jump\t// in\n    tag_235:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2480:2613  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_229)\n    tag_230:\n      pop\n        /* \"inviter_presell/stake.sol\":2692:2715  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2668:2689  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2660:2665  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2660:2689  value * rateIntervalNumerator */\n      tag_236\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_236:\n        /* \"inviter_presell/stake.sol\":2660:2715  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_237\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_237:\n        /* \"inviter_presell/stake.sol\":2653:2715  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2224:2723  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_224:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_83:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1780:1873  function totalPowers() external view returns (uint256) {... */\n    tag_86:\n        /* \"inviter_presell/stake.sol\":1826:1833  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1853:1865  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":1846:1865  return _totalPowers */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1780:1873  function totalPowers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_89:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_240\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_240:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_241\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_241:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_175\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_245\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_246\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_91:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_94:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3936:4043  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_97:\n        /* \"inviter_presell/stake.sol\":3993:4000  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4020:4035  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4013:4035  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3936:4043  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":926:979  mapping(address => uint256) public userLastUpdateTime */\n    tag_101:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4051:4399  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_105:\n        /* \"inviter_presell/stake.sol\":4116:4123  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4156:4157  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4140:4152  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":4140:4157  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":4136:4213  if (_totalPowers == 0) {... */\n      tag_249\n      jumpi\n        /* \"inviter_presell/stake.sol\":4181:4201  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4174:4201  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_248)\n        /* \"inviter_presell/stake.sol\":4136:4213  if (_totalPowers == 0) {... */\n    tag_249:\n        /* \"inviter_presell/stake.sol\":4243:4391  rewardPerTokenStored.add(... */\n      tag_250\n        /* \"inviter_presell/stake.sol\":4286:4376  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_251\n        /* \"inviter_presell/stake.sol\":4363:4375  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":4286:4358  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_252\n        /* \"inviter_presell/stake.sol\":4353:4357  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4286:4348  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_253\n        /* \"inviter_presell/stake.sol\":4337:4347  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":4286:4332  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_254\n        /* \"inviter_presell/stake.sol\":4317:4331  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":4286:4312  lastTimeRewardApplicable() */\n      tag_255\n        /* \"inviter_presell/stake.sol\":4286:4310  lastTimeRewardApplicable */\n      tag_97\n        /* \"inviter_presell/stake.sol\":4286:4312  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_255:\n        /* \"inviter_presell/stake.sol\":4286:4316  lastTimeRewardApplicable().sub */\n      tag_165\n      swap1\n        /* \"inviter_presell/stake.sol\":4286:4332  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"inviter_presell/stake.sol\":4286:4336  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_166\n      swap1\n        /* \"inviter_presell/stake.sol\":4286:4348  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"inviter_presell/stake.sol\":4286:4352  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_166\n      swap1\n        /* \"inviter_presell/stake.sol\":4286:4358  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"inviter_presell/stake.sol\":4286:4362  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_167\n      swap1\n        /* \"inviter_presell/stake.sol\":4286:4376  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_251:\n        /* \"inviter_presell/stake.sol\":4243:4263  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4243:4267  rewardPerTokenStored.add */\n      tag_168\n      swap1\n        /* \"inviter_presell/stake.sol\":4243:4391  rewardPerTokenStored.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_250:\n        /* \"inviter_presell/stake.sol\":4223:4391  return... */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4051:4399  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_248:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6758:6863  function setRewardToken(address token) external onlyOwner {... */\n    tag_109:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_257\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_257:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_258\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_258:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_175\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"inviter_presell/stake.sol\":6849:6854  token */\n      dup1\n        /* \"inviter_presell/stake.sol\":6827:6839  rewardsToken */\n      0x03\n      0x00\n        /* \"inviter_presell/stake.sol\":6827:6855  rewardsToken = IERC20(token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6758:6863  function setRewardToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":862:919  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_112:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_115:\n        /* \"inviter_presell/adminable.sol\":955:962  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":975:988  return _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2102:2216  function getCurRewardPool() public view returns (uint256) {... */\n    tag_119:\n        /* \"inviter_presell/stake.sol\":2151:2158  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2178:2208  getRewardPool(block.timestamp) */\n      tag_264\n        /* \"inviter_presell/stake.sol\":2192:2207  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2178:2191  getRewardPool */\n      tag_80\n        /* \"inviter_presell/stake.sol\":2178:2208  getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_264:\n        /* \"inviter_presell/stake.sol\":2171:2208  return getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2102:2216  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1881:1975  function curTime() external  view  returns (uint256) {... */\n    tag_122:\n        /* \"inviter_presell/stake.sol\":1925:1932  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1952:1967  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1945:1967  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1881:1975  function curTime() external  view  returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7120:7263  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_127:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_267\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_267:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_268\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_268:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_270\n      swap1\n      tag_175\n      jump\t// in\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"inviter_presell/stake.sol\":7220:7225  token */\n      dup2\n        /* \"inviter_presell/stake.sol\":7213:7235  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7236:7246  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7248:7254  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":7213:7255  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_272:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_275:\n      pop\n        /* \"inviter_presell/stake.sol\":7120:7263  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6139:6433  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_130:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_183\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_280\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_281\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_62\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_280:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_205\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"inviter_presell/stake.sol\":6229:6233  user */\n      dup2\n        /* \"inviter_presell/stake.sol\":1131:1143  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1146:1164  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1165:1172  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1131:1173  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1195:1204  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1187:1191  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1187:1204  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n      tag_285\n      jumpi\n        /* \"inviter_presell/stake.sol\":1228:1237  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1221:1237  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n    tag_285:\n        /* \"inviter_presell/stake.sol\":1259:1271  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_286\n        /* \"inviter_presell/stake.sol\":1297:1301  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1303:1318  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1274:1296  getTimeWeightedAveRate */\n      tag_148\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_286:\n        /* \"inviter_presell/stake.sol\":1259:1319  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      tag_287\n        /* \"inviter_presell/stake.sol\":1368:1372  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1353:1367  rewardPerToken */\n      tag_105\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      jump\t// in\n    tag_287:\n        /* \"inviter_presell/stake.sol\":1330:1350  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1330:1373  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      tag_288\n        /* \"inviter_presell/stake.sol\":1401:1425  lastTimeRewardApplicable */\n      tag_97\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_288:\n        /* \"inviter_presell/stake.sol\":1384:1398  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1384:1427  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1461:1462  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1442:1449  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n      tag_289\n      jumpi\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      tag_290\n        /* \"inviter_presell/stake.sol\":1506:1513  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1505  earned */\n      tag_46\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      jump\t// in\n    tag_290:\n        /* \"inviter_presell/stake.sol\":1480:1487  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1488:1495  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1480:1514  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1563:1583  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1529:1551  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1552:1559  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1529:1583  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1628:1643  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1598:1616  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1617:1624  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1598:1643  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n    tag_289:\n        /* \"inviter_presell/stake.sol\":6263:6264  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6254:6260  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6254:6264  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6246:6283  require(amount > 0, \"Cannot stake 0\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"inviter_presell/stake.sol\":6309:6333  _totalPowers.add(amount) */\n      tag_295\n        /* \"inviter_presell/stake.sol\":6326:6332  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6309:6321  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":6309:6325  _totalPowers.add */\n      tag_168\n      swap1\n        /* \"inviter_presell/stake.sol\":6309:6333  _totalPowers.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_295:\n        /* \"inviter_presell/stake.sol\":6294:6306  _totalPowers */\n      0x0e\n        /* \"inviter_presell/stake.sol\":6294:6333  _totalPowers = _totalPowers.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6362:6389  _balances[user].add(amount) */\n      tag_296\n        /* \"inviter_presell/stake.sol\":6382:6388  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6362:6371  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6362:6377  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6372:6376  user */\n      dup9\n        /* \"inviter_presell/stake.sol\":6362:6377  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6362:6381  _balances[user].add */\n      tag_168\n      swap1\n        /* \"inviter_presell/stake.sol\":6362:6389  _balances[user].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_296:\n        /* \"inviter_presell/stake.sol\":6344:6353  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6344:6359  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6354:6358  user */\n      dup8\n        /* \"inviter_presell/stake.sol\":6344:6359  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6344:6389  _balances[user] = _balances[user].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6412:6416  user */\n      dup5\n        /* \"inviter_presell/stake.sol\":6405:6425  Staked(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"inviter_presell/stake.sol\":6418:6424  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":6405:6425  Staked(user, amount) */\n      mload(0x40)\n      tag_297\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":1120:1674  {... */\n      pop\n      pop\n        /* \"inviter_presell/adminable.sol\":892:893  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6139:6433  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1983:2094  function powersOf(address account) external view returns (uint256) {... */\n    tag_133:\n        /* \"inviter_presell/stake.sol\":2041:2048  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2068:2077  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":2068:2086  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":2078:2085  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":2068:2086  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":2061:2086  return _balances[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1983:2094  function powersOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_136:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3581:3696  function getCurRewardRate() public view returns (uint256) {... */\n    tag_139:\n        /* \"inviter_presell/stake.sol\":3630:3637  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3657:3688  _getRewardRate(block.timestamp) */\n      tag_300\n        /* \"inviter_presell/stake.sol\":3672:3687  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3657:3671  _getRewardRate */\n      tag_301\n        /* \"inviter_presell/stake.sol\":3657:3688  _getRewardRate(block.timestamp) */\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":3650:3688  return _getRewardRate(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3581:3696  function getCurRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_142:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4746:6129  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_148:\n        /* \"inviter_presell/stake.sol\":4836:4843  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4881:4882  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4868:4877  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4868:4882  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":4868:4907  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_303\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4898:4907  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":4886:4894  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4886:4907  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":4868:4907  startTime == 0 || leftTime >= rightTime */\n    tag_303:\n        /* \"inviter_presell/stake.sol\":4868:4924  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n      dup1\n      tag_304\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4923:4924  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4911:4919  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4911:4924  leftTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":4868:4924  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n    tag_304:\n        /* \"inviter_presell/stake.sol\":4865:4961  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n      iszero\n      tag_305\n      jumpi\n        /* \"inviter_presell/stake.sol\":4948:4949  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4941:4949  return 0 */\n      swap1\n      pop\n      jump(tag_302)\n        /* \"inviter_presell/stake.sol\":4865:4961  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n    tag_305:\n        /* \"inviter_presell/stake.sol\":4987:4996  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4976:4984  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4976:4996  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":4973:5045  if(leftTime < startTime) {... */\n      iszero\n      tag_306\n      jumpi\n        /* \"inviter_presell/stake.sol\":5024:5033  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5013:5033  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":4973:5045  if(leftTime < startTime) {... */\n    tag_306:\n        /* \"inviter_presell/stake.sol\":5057:5077  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5137:5149  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5121:5133  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5108:5117  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5097:5105  leftTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5097:5117  leftTime - startTime */\n      tag_307\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_307:\n        /* \"inviter_presell/stake.sol\":5096:5133  (leftTime - startTime) % rateInterval */\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n        /* \"inviter_presell/stake.sol\":5081:5093  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5081:5133  rateInterval - (leftTime - startTime) % rateInterval */\n      tag_310\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_310:\n        /* \"inviter_presell/stake.sol\":5080:5149  (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      tag_311\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_311:\n        /* \"inviter_presell/stake.sol\":5057:5149  uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5160:5178  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5222:5234  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5207:5219  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5181:5204  getRewardPool(leftTime) */\n      tag_312\n        /* \"inviter_presell/stake.sol\":5195:5203  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5181:5194  getRewardPool */\n      tag_80\n        /* \"inviter_presell/stake.sol\":5181:5204  getRewardPool(leftTime) */\n      jump\t// in\n    tag_312:\n        /* \"inviter_presell/stake.sol\":5181:5219  getRewardPool(leftTime) * leftInterval */\n      tag_313\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_313:\n        /* \"inviter_presell/stake.sol\":5181:5234  getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_314\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_314:\n        /* \"inviter_presell/stake.sol\":5160:5234  uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5247:5268  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5297:5309  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5284:5293  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5272:5281  rightTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5272:5293  rightTime - startTime */\n      tag_315\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_315:\n        /* \"inviter_presell/stake.sol\":5271:5309  (rightTime - startTime) % rateInterval */\n      tag_316\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_316:\n        /* \"inviter_presell/stake.sol\":5247:5309  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5320:5339  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5385:5397  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5369:5382  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5342:5366  getRewardPool(rightTime) */\n      tag_317\n        /* \"inviter_presell/stake.sol\":5356:5365  rightTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5342:5355  getRewardPool */\n      tag_80\n        /* \"inviter_presell/stake.sol\":5342:5366  getRewardPool(rightTime) */\n      jump\t// in\n    tag_317:\n        /* \"inviter_presell/stake.sol\":5342:5382  getRewardPool(rightTime) * rightInterval */\n      tag_318\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_318:\n        /* \"inviter_presell/stake.sol\":5342:5397  getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_319\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_319:\n        /* \"inviter_presell/stake.sol\":5320:5397  uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5439:5448  rightTime */\n      dup6\n        /* \"inviter_presell/stake.sol\":5424:5436  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5413:5421  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5413:5436  leftTime + leftInterval */\n      tag_320\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_320:\n        /* \"inviter_presell/stake.sol\":5413:5448  leftTime + leftInterval > rightTime */\n      gt\n        /* \"inviter_presell/stake.sol\":5410:5508  if(leftTime + leftInterval > rightTime) {... */\n      iszero\n      tag_321\n      jumpi\n        /* \"inviter_presell/stake.sol\":5472:5496  _getRewardRate(leftTime) */\n      tag_322\n        /* \"inviter_presell/stake.sol\":5487:5495  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5472:5486  _getRewardRate */\n      tag_301\n        /* \"inviter_presell/stake.sol\":5472:5496  _getRewardRate(leftTime) */\n      jump\t// in\n    tag_322:\n        /* \"inviter_presell/stake.sol\":5465:5496  return _getRewardRate(leftTime) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_302)\n        /* \"inviter_presell/stake.sol\":5410:5508  if(leftTime + leftInterval > rightTime) {... */\n    tag_321:\n        /* \"inviter_presell/stake.sol\":5520:5539  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5581:5593  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5570:5578  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5554:5567  rightInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5542:5551  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5542:5567  rightTime - rightInterval */\n      tag_323\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_323:\n        /* \"inviter_presell/stake.sol\":5542:5578  rightTime - rightInterval - leftTime */\n      tag_324\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_324:\n        /* \"inviter_presell/stake.sol\":5542:5593  rightTime - rightInterval - leftTime - leftInterval */\n      tag_325\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_325:\n        /* \"inviter_presell/stake.sol\":5520:5593  uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5604:5623  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5626:5649  getRemainPool(leftTime) */\n      tag_326\n        /* \"inviter_presell/stake.sol\":5640:5648  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5626:5639  getRemainPool */\n      tag_76\n        /* \"inviter_presell/stake.sol\":5626:5649  getRemainPool(leftTime) */\n      jump\t// in\n    tag_326:\n        /* \"inviter_presell/stake.sol\":5604:5649  uint256 startReward = getRemainPool(leftTime) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5661:5683  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5698:5716  uint256 nextReward */\n      dup1\n        /* \"inviter_presell/stake.sol\":5731:5744  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":5747:5758  startReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5731:5758  uint256 value = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5769:5782  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":5799:5811  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5785:5796  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":5785:5811  midInterval / rateInterval */\n      tag_327\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_327:\n        /* \"inviter_presell/stake.sol\":5769:5811  uint256 times = midInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5826:5835  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":5822:6036  for(uint256 i = 0; i < times; ++i) {... */\n    tag_328:\n        /* \"inviter_presell/stake.sol\":5845:5850  times */\n      dup2\n        /* \"inviter_presell/stake.sol\":5841:5842  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":5841:5850  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":5822:6036  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_329\n      jumpi\n        /* \"inviter_presell/stake.sol\":5917:5940  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":5893:5914  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":5885:5890  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":5885:5914  value * rateIntervalNumerator */\n      tag_331\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_331:\n        /* \"inviter_presell/stake.sol\":5885:5940  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_332\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_332:\n        /* \"inviter_presell/stake.sol\":5872:5940  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":5971:5981  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5963:5968  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":5963:5981  value - nextReward */\n      tag_333\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_333:\n        /* \"inviter_presell/stake.sol\":5955:5981  value = value - nextReward */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":6014:6024  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5996:6024  midTotalReward += nextReward */\n      dup6\n      tag_334\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_334:\n      swap5\n      pop\n        /* \"inviter_presell/stake.sol\":5852:5855  ++i */\n      dup1\n      tag_335\n      swap1\n      tag_223\n      jump\t// in\n    tag_335:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5822:6036  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_328)\n    tag_329:\n      pop\n        /* \"inviter_presell/stake.sol\":6112:6120  leftTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6100:6109  rightTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6100:6120  rightTime - leftTime */\n      tag_336\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_336:\n        /* \"inviter_presell/stake.sol\":6084:6095  rightReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":6071:6081  leftReward */\n      dup11\n        /* \"inviter_presell/stake.sol\":6054:6068  midTotalReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":6054:6081  midTotalReward + leftReward */\n      tag_337\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_337:\n        /* \"inviter_presell/stake.sol\":6054:6095  midTotalReward + leftReward + rightReward */\n      tag_338\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_338:\n        /* \"inviter_presell/stake.sol\":6053:6121  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_339\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_339:\n        /* \"inviter_presell/stake.sol\":6046:6121  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4746:6129  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_302:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6997:7112  function emergencyWithdraw() external onlyOwner {... */\n    tag_151:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_341\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_341:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_342\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_342:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_175\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"inviter_presell/stake.sol\":7064:7071  owner() */\n      tag_346\n        /* \"inviter_presell/stake.sol\":7064:7069  owner */\n      tag_115\n        /* \"inviter_presell/stake.sol\":7064:7071  owner() */\n      jump\t// in\n    tag_346:\n        /* \"inviter_presell/stake.sol\":7056:7081  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7056:7104  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"inviter_presell/stake.sol\":7082:7103  address(this).balance */\n      selfbalance\n        /* \"inviter_presell/stake.sol\":7056:7104  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n        /* \"inviter_presell/stake.sol\":6997:7112  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_153:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_157:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_350\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_171\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_350:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_351\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_115\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_351:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_353\n      swap1\n      tag_175\n      jump\t// in\n    tag_353:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_352:\n        /* \"inviter_presell/adminable.sol\":1343:1344  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1323:1331  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap1\n      tag_357\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_355:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_358\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_246\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_358:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_360\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_360:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_166:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_362\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_362:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_364\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_364:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_366\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_366:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n    tag_171:\n        /* \"inviter_presell/adminable.sol\":116:123  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_246:\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n      0x01\n      0x00\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3704:3926  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_301:\n        /* \"inviter_presell/stake.sol\":3764:3771  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3784:3805  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":3808:3827  getRewardPool(time) */\n      tag_370\n        /* \"inviter_presell/stake.sol\":3822:3826  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":3808:3821  getRewardPool */\n      tag_80\n        /* \"inviter_presell/stake.sol\":3808:3827  getRewardPool(time) */\n      jump\t// in\n    tag_370:\n        /* \"inviter_presell/stake.sol\":3784:3827  uint256 curPoolAmount = getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3838:3856  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":3859:3890  curPoolAmount.div(rateInterval) */\n      tag_371\n        /* \"inviter_presell/stake.sol\":3877:3889  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3859:3872  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":3859:3876  curPoolAmount.div */\n      tag_167\n      swap1\n        /* \"inviter_presell/stake.sol\":3859:3890  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_371:\n        /* \"inviter_presell/stake.sol\":3838:3890  uint256 rewardRate = curPoolAmount.div(rateInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3908:3918  rewardRate */\n      dup1\n        /* \"inviter_presell/stake.sol\":3901:3918  return rewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3704:3926  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_373:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_375:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_376:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_413\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_375\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_377:\n        /* \"#utility.yul\":641:665   */\n      tag_415\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_376\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_416:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_378:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_418\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_377\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_45:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_421\n      tag_373\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":917:1036   */\n    tag_420:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_422\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_378\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_379:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_380:\n        /* \"#utility.yul\":1346:1370   */\n      tag_425\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_379\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_48:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_427\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_380\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_381:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1823   */\n    tag_382:\n        /* \"#utility.yul\":1777:1798   */\n      tag_430\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1777:1798   */\n      tag_381\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1799   */\n      eq\n        /* \"#utility.yul\":1757:1817   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1757:1817   */\n    tag_431:\n        /* \"#utility.yul\":1707:1823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:1962   */\n    tag_383:\n        /* \"#utility.yul\":1872:1877   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1888:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1956   */\n      tag_433\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1926:1956   */\n      tag_382\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":1829:1962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2436   */\n    tag_58:\n        /* \"#utility.yul\":2033:2039   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_436\n      tag_373\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":2058:2177   */\n    tag_435:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2294   */\n      tag_437\n        /* \"#utility.yul\":2286:2293   */\n      dup6\n        /* \"#utility.yul\":2277:2283   */\n      dup3\n        /* \"#utility.yul\":2266:2275   */\n      dup7\n        /* \"#utility.yul\":2262:2284   */\n      add\n        /* \"#utility.yul\":2241:2294   */\n      tag_378\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":2231:2294   */\n      swap3\n      pop\n        /* \"#utility.yul\":2187:2304   */\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x20\n        /* \"#utility.yul\":2369:2419   */\n      tag_438\n        /* \"#utility.yul\":2411:2418   */\n      dup6\n        /* \"#utility.yul\":2402:2408   */\n      dup3\n        /* \"#utility.yul\":2391:2400   */\n      dup7\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2369:2419   */\n      tag_383\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":2359:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2429   */\n      pop\n        /* \"#utility.yul\":1968:2436   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2551   */\n    tag_384:\n        /* \"#utility.yul\":2523:2544   */\n      tag_440\n        /* \"#utility.yul\":2538:2543   */\n      dup2\n        /* \"#utility.yul\":2523:2544   */\n      tag_381\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":2518:2521   */\n      dup3\n        /* \"#utility.yul\":2511:2545   */\n      mstore\n        /* \"#utility.yul\":2442:2551   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2767   */\n    tag_64:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2671:2680   */\n      dup3\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2659:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2760   */\n      tag_442\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2746:2755   */\n      dup4\n        /* \"#utility.yul\":2742:2759   */\n      add\n        /* \"#utility.yul\":2733:2739   */\n      dup5\n        /* \"#utility.yul\":2695:2760   */\n      tag_384\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":2557:2767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2773:2895   */\n    tag_385:\n        /* \"#utility.yul\":2846:2870   */\n      tag_444\n        /* \"#utility.yul\":2864:2869   */\n      dup2\n        /* \"#utility.yul\":2846:2870   */\n      tag_379\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":2839:2844   */\n      dup2\n        /* \"#utility.yul\":2836:2871   */\n      eq\n        /* \"#utility.yul\":2826:2889   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":2885:2886   */\n      0x00\n        /* \"#utility.yul\":2882:2883   */\n      dup1\n        /* \"#utility.yul\":2875:2887   */\n      revert\n        /* \"#utility.yul\":2826:2889   */\n    tag_445:\n        /* \"#utility.yul\":2773:2895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2901:3040   */\n    tag_386:\n        /* \"#utility.yul\":2947:2952   */\n      0x00\n        /* \"#utility.yul\":2985:2991   */\n      dup2\n        /* \"#utility.yul\":2972:2992   */\n      calldataload\n        /* \"#utility.yul\":2963:2992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3001:3034   */\n      tag_447\n        /* \"#utility.yul\":3028:3033   */\n      dup2\n        /* \"#utility.yul\":3001:3034   */\n      tag_385\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":2901:3040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3375   */\n    tag_72:\n        /* \"#utility.yul\":3105:3111   */\n      0x00\n        /* \"#utility.yul\":3154:3156   */\n      0x20\n        /* \"#utility.yul\":3142:3151   */\n      dup3\n        /* \"#utility.yul\":3133:3140   */\n      dup5\n        /* \"#utility.yul\":3129:3152   */\n      sub\n        /* \"#utility.yul\":3125:3157   */\n      slt\n        /* \"#utility.yul\":3122:3241   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":3160:3239   */\n      tag_450\n      tag_373\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":3122:3241   */\n    tag_449:\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3305:3358   */\n      tag_451\n        /* \"#utility.yul\":3350:3357   */\n      dup5\n        /* \"#utility.yul\":3341:3347   */\n      dup3\n        /* \"#utility.yul\":3330:3339   */\n      dup6\n        /* \"#utility.yul\":3326:3348   */\n      add\n        /* \"#utility.yul\":3305:3358   */\n      tag_386\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":3295:3358   */\n      swap2\n      pop\n        /* \"#utility.yul\":3251:3368   */\n      pop\n        /* \"#utility.yul\":3046:3375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3381:3499   */\n    tag_387:\n        /* \"#utility.yul\":3468:3492   */\n      tag_453\n        /* \"#utility.yul\":3486:3491   */\n      dup2\n        /* \"#utility.yul\":3468:3492   */\n      tag_376\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":3463:3466   */\n      dup3\n        /* \"#utility.yul\":3456:3493   */\n      mstore\n        /* \"#utility.yul\":3381:3499   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3727   */\n    tag_117:\n        /* \"#utility.yul\":3598:3602   */\n      0x00\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3625:3634   */\n      dup3\n        /* \"#utility.yul\":3621:3639   */\n      add\n        /* \"#utility.yul\":3613:3639   */\n      swap1\n      pop\n        /* \"#utility.yul\":3649:3720   */\n      tag_455\n        /* \"#utility.yul\":3717:3718   */\n      0x00\n        /* \"#utility.yul\":3706:3715   */\n      dup4\n        /* \"#utility.yul\":3702:3719   */\n      add\n        /* \"#utility.yul\":3693:3699   */\n      dup5\n        /* \"#utility.yul\":3649:3720   */\n      tag_387\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":3505:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4207   */\n    tag_126:\n        /* \"#utility.yul\":3801:3807   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup1\n        /* \"#utility.yul\":3858:3860   */\n      0x40\n        /* \"#utility.yul\":3846:3855   */\n      dup4\n        /* \"#utility.yul\":3837:3844   */\n      dup6\n        /* \"#utility.yul\":3833:3856   */\n      sub\n        /* \"#utility.yul\":3829:3861   */\n      slt\n        /* \"#utility.yul\":3826:3945   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":3864:3943   */\n      tag_458\n      tag_373\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":3826:3945   */\n    tag_457:\n        /* \"#utility.yul\":3984:3985   */\n      0x00\n        /* \"#utility.yul\":4009:4062   */\n      tag_459\n        /* \"#utility.yul\":4054:4061   */\n      dup6\n        /* \"#utility.yul\":4045:4051   */\n      dup3\n        /* \"#utility.yul\":4034:4043   */\n      dup7\n        /* \"#utility.yul\":4030:4052   */\n      add\n        /* \"#utility.yul\":4009:4062   */\n      tag_378\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":3999:4062   */\n      swap3\n      pop\n        /* \"#utility.yul\":3955:4072   */\n      pop\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"#utility.yul\":4137:4190   */\n      tag_460\n        /* \"#utility.yul\":4182:4189   */\n      dup6\n        /* \"#utility.yul\":4173:4179   */\n      dup3\n        /* \"#utility.yul\":4162:4171   */\n      dup7\n        /* \"#utility.yul\":4158:4180   */\n      add\n        /* \"#utility.yul\":4137:4190   */\n      tag_386\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":4127:4190   */\n      swap2\n      pop\n        /* \"#utility.yul\":4082:4200   */\n      pop\n        /* \"#utility.yul\":3733:4207   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4213:4273   */\n    tag_388:\n        /* \"#utility.yul\":4241:4244   */\n      0x00\n        /* \"#utility.yul\":4262:4267   */\n      dup2\n        /* \"#utility.yul\":4255:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4213:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4421   */\n    tag_389:\n        /* \"#utility.yul\":4329:4338   */\n      0x00\n        /* \"#utility.yul\":4362:4415   */\n      tag_463\n        /* \"#utility.yul\":4380:4414   */\n      tag_464\n        /* \"#utility.yul\":4389:4413   */\n      tag_465\n        /* \"#utility.yul\":4407:4412   */\n      dup5\n        /* \"#utility.yul\":4389:4413   */\n      tag_375\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":4380:4414   */\n      tag_388\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":4362:4415   */\n      tag_375\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":4349:4415   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4427:4553   */\n    tag_390:\n        /* \"#utility.yul\":4477:4486   */\n      0x00\n        /* \"#utility.yul\":4510:4547   */\n      tag_467\n        /* \"#utility.yul\":4541:4546   */\n      dup3\n        /* \"#utility.yul\":4510:4547   */\n      tag_389\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":4497:4547   */\n      swap1\n      pop\n        /* \"#utility.yul\":4427:4553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4559:4700   */\n    tag_391:\n        /* \"#utility.yul\":4624:4633   */\n      0x00\n        /* \"#utility.yul\":4657:4694   */\n      tag_469\n        /* \"#utility.yul\":4688:4693   */\n      dup3\n        /* \"#utility.yul\":4657:4694   */\n      tag_390\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":4644:4694   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4700   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4706:4867   */\n    tag_392:\n        /* \"#utility.yul\":4808:4860   */\n      tag_471\n        /* \"#utility.yul\":4854:4859   */\n      dup2\n        /* \"#utility.yul\":4808:4860   */\n      tag_391\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4803:4806   */\n      dup3\n        /* \"#utility.yul\":4796:4861   */\n      mstore\n        /* \"#utility.yul\":4706:4867   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4873:5125   */\n    tag_144:\n        /* \"#utility.yul\":4981:4985   */\n      0x00\n        /* \"#utility.yul\":5019:5021   */\n      0x20\n        /* \"#utility.yul\":5008:5017   */\n      dup3\n        /* \"#utility.yul\":5004:5022   */\n      add\n        /* \"#utility.yul\":4996:5022   */\n      swap1\n      pop\n        /* \"#utility.yul\":5032:5118   */\n      tag_473\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5104:5113   */\n      dup4\n        /* \"#utility.yul\":5100:5117   */\n      add\n        /* \"#utility.yul\":5091:5097   */\n      dup5\n        /* \"#utility.yul\":5032:5118   */\n      tag_392\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4873:5125   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5131:5605   */\n    tag_147:\n        /* \"#utility.yul\":5199:5205   */\n      0x00\n        /* \"#utility.yul\":5207:5213   */\n      dup1\n        /* \"#utility.yul\":5256:5258   */\n      0x40\n        /* \"#utility.yul\":5244:5253   */\n      dup4\n        /* \"#utility.yul\":5235:5242   */\n      dup6\n        /* \"#utility.yul\":5231:5254   */\n      sub\n        /* \"#utility.yul\":5227:5259   */\n      slt\n        /* \"#utility.yul\":5224:5343   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":5262:5341   */\n      tag_476\n      tag_373\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":5224:5343   */\n    tag_475:\n        /* \"#utility.yul\":5382:5383   */\n      0x00\n        /* \"#utility.yul\":5407:5460   */\n      tag_477\n        /* \"#utility.yul\":5452:5459   */\n      dup6\n        /* \"#utility.yul\":5443:5449   */\n      dup3\n        /* \"#utility.yul\":5432:5441   */\n      dup7\n        /* \"#utility.yul\":5428:5450   */\n      add\n        /* \"#utility.yul\":5407:5460   */\n      tag_386\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":5397:5460   */\n      swap3\n      pop\n        /* \"#utility.yul\":5353:5470   */\n      pop\n        /* \"#utility.yul\":5509:5511   */\n      0x20\n        /* \"#utility.yul\":5535:5588   */\n      tag_478\n        /* \"#utility.yul\":5580:5587   */\n      dup6\n        /* \"#utility.yul\":5571:5577   */\n      dup3\n        /* \"#utility.yul\":5560:5569   */\n      dup7\n        /* \"#utility.yul\":5556:5578   */\n      add\n        /* \"#utility.yul\":5535:5588   */\n      tag_386\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":5525:5588   */\n      swap2\n      pop\n        /* \"#utility.yul\":5480:5598   */\n      pop\n        /* \"#utility.yul\":5131:5605   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5611:5780   */\n    tag_393:\n        /* \"#utility.yul\":5695:5706   */\n      0x00\n        /* \"#utility.yul\":5729:5735   */\n      dup3\n        /* \"#utility.yul\":5724:5727   */\n      dup3\n        /* \"#utility.yul\":5717:5736   */\n      mstore\n        /* \"#utility.yul\":5769:5773   */\n      0x20\n        /* \"#utility.yul\":5764:5767   */\n      dup3\n        /* \"#utility.yul\":5760:5774   */\n      add\n        /* \"#utility.yul\":5745:5774   */\n      swap1\n      pop\n        /* \"#utility.yul\":5611:5780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5786:6007   */\n    tag_394:\n        /* \"#utility.yul\":5926:5960   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":5922:5923   */\n      0x00\n        /* \"#utility.yul\":5914:5920   */\n      dup3\n        /* \"#utility.yul\":5910:5924   */\n      add\n        /* \"#utility.yul\":5903:5961   */\n      mstore\n        /* \"#utility.yul\":5995:5999   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5990:5992   */\n      0x20\n        /* \"#utility.yul\":5982:5988   */\n      dup3\n        /* \"#utility.yul\":5978:5993   */\n      add\n        /* \"#utility.yul\":5971:6000   */\n      mstore\n        /* \"#utility.yul\":5786:6007   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6013:6379   */\n    tag_395:\n        /* \"#utility.yul\":6155:6158   */\n      0x00\n        /* \"#utility.yul\":6176:6243   */\n      tag_482\n        /* \"#utility.yul\":6240:6242   */\n      0x22\n        /* \"#utility.yul\":6235:6238   */\n      dup4\n        /* \"#utility.yul\":6176:6243   */\n      tag_393\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":6169:6243   */\n      swap2\n      pop\n        /* \"#utility.yul\":6252:6345   */\n      tag_483\n        /* \"#utility.yul\":6341:6344   */\n      dup3\n        /* \"#utility.yul\":6252:6345   */\n      tag_394\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":6370:6372   */\n      0x40\n        /* \"#utility.yul\":6365:6368   */\n      dup3\n        /* \"#utility.yul\":6361:6373   */\n      add\n        /* \"#utility.yul\":6354:6373   */\n      swap1\n      pop\n        /* \"#utility.yul\":6013:6379   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6385:6804   */\n    tag_175:\n        /* \"#utility.yul\":6551:6555   */\n      0x00\n        /* \"#utility.yul\":6589:6591   */\n      0x20\n        /* \"#utility.yul\":6578:6587   */\n      dup3\n        /* \"#utility.yul\":6574:6592   */\n      add\n        /* \"#utility.yul\":6566:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6638:6647   */\n      dup2\n        /* \"#utility.yul\":6632:6636   */\n      dup2\n        /* \"#utility.yul\":6628:6648   */\n      sub\n        /* \"#utility.yul\":6624:6625   */\n      0x00\n        /* \"#utility.yul\":6613:6622   */\n      dup4\n        /* \"#utility.yul\":6609:6626   */\n      add\n        /* \"#utility.yul\":6602:6649   */\n      mstore\n        /* \"#utility.yul\":6666:6797   */\n      tag_485\n        /* \"#utility.yul\":6792:6796   */\n      dup2\n        /* \"#utility.yul\":6666:6797   */\n      tag_395\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":6658:6797   */\n      swap1\n      pop\n        /* \"#utility.yul\":6385:6804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6810:7118   */\n    tag_178:\n        /* \"#utility.yul\":6919:6923   */\n      0x00\n        /* \"#utility.yul\":6957:6959   */\n      0x40\n        /* \"#utility.yul\":6946:6955   */\n      dup3\n        /* \"#utility.yul\":6942:6960   */\n      add\n        /* \"#utility.yul\":6934:6960   */\n      swap1\n      pop\n        /* \"#utility.yul\":6970:7035   */\n      tag_487\n        /* \"#utility.yul\":7032:7033   */\n      0x00\n        /* \"#utility.yul\":7021:7030   */\n      dup4\n        /* \"#utility.yul\":7017:7034   */\n      add\n        /* \"#utility.yul\":7008:7014   */\n      dup6\n        /* \"#utility.yul\":6970:7035   */\n      tag_384\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7045:7111   */\n      tag_488\n        /* \"#utility.yul\":7107:7109   */\n      0x20\n        /* \"#utility.yul\":7096:7105   */\n      dup4\n        /* \"#utility.yul\":7092:7110   */\n      add\n        /* \"#utility.yul\":7083:7089   */\n      dup5\n        /* \"#utility.yul\":7045:7111   */\n      tag_384\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":6810:7118   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7124:7305   */\n    tag_396:\n        /* \"#utility.yul\":7264:7297   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7260:7261   */\n      0x00\n        /* \"#utility.yul\":7252:7258   */\n      dup3\n        /* \"#utility.yul\":7248:7262   */\n      add\n        /* \"#utility.yul\":7241:7298   */\n      mstore\n        /* \"#utility.yul\":7124:7305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7311:7677   */\n    tag_397:\n        /* \"#utility.yul\":7453:7456   */\n      0x00\n        /* \"#utility.yul\":7474:7541   */\n      tag_491\n        /* \"#utility.yul\":7538:7540   */\n      0x1f\n        /* \"#utility.yul\":7533:7536   */\n      dup4\n        /* \"#utility.yul\":7474:7541   */\n      tag_393\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7467:7541   */\n      swap2\n      pop\n        /* \"#utility.yul\":7550:7643   */\n      tag_492\n        /* \"#utility.yul\":7639:7642   */\n      dup3\n        /* \"#utility.yul\":7550:7643   */\n      tag_396\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":7668:7670   */\n      0x20\n        /* \"#utility.yul\":7663:7666   */\n      dup3\n        /* \"#utility.yul\":7659:7671   */\n      add\n        /* \"#utility.yul\":7652:7671   */\n      swap1\n      pop\n        /* \"#utility.yul\":7311:7677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7683:8102   */\n    tag_183:\n        /* \"#utility.yul\":7849:7853   */\n      0x00\n        /* \"#utility.yul\":7887:7889   */\n      0x20\n        /* \"#utility.yul\":7876:7885   */\n      dup3\n        /* \"#utility.yul\":7872:7890   */\n      add\n        /* \"#utility.yul\":7864:7890   */\n      swap1\n      pop\n        /* \"#utility.yul\":7936:7945   */\n      dup2\n        /* \"#utility.yul\":7930:7934   */\n      dup2\n        /* \"#utility.yul\":7926:7946   */\n      sub\n        /* \"#utility.yul\":7922:7923   */\n      0x00\n        /* \"#utility.yul\":7911:7920   */\n      dup4\n        /* \"#utility.yul\":7907:7924   */\n      add\n        /* \"#utility.yul\":7900:7947   */\n      mstore\n        /* \"#utility.yul\":7964:8095   */\n      tag_494\n        /* \"#utility.yul\":8090:8094   */\n      dup2\n        /* \"#utility.yul\":7964:8095   */\n      tag_397\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":7956:8095   */\n      swap1\n      pop\n        /* \"#utility.yul\":7683:8102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8108:8440   */\n    tag_194:\n        /* \"#utility.yul\":8229:8233   */\n      0x00\n        /* \"#utility.yul\":8267:8269   */\n      0x40\n        /* \"#utility.yul\":8256:8265   */\n      dup3\n        /* \"#utility.yul\":8252:8270   */\n      add\n        /* \"#utility.yul\":8244:8270   */\n      swap1\n      pop\n        /* \"#utility.yul\":8280:8351   */\n      tag_496\n        /* \"#utility.yul\":8348:8349   */\n      0x00\n        /* \"#utility.yul\":8337:8346   */\n      dup4\n        /* \"#utility.yul\":8333:8350   */\n      add\n        /* \"#utility.yul\":8324:8330   */\n      dup6\n        /* \"#utility.yul\":8280:8351   */\n      tag_387\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8361:8433   */\n      tag_497\n        /* \"#utility.yul\":8429:8431   */\n      0x20\n        /* \"#utility.yul\":8418:8427   */\n      dup4\n        /* \"#utility.yul\":8414:8432   */\n      add\n        /* \"#utility.yul\":8405:8411   */\n      dup5\n        /* \"#utility.yul\":8361:8433   */\n      tag_380\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8108:8440   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8446:8583   */\n    tag_398:\n        /* \"#utility.yul\":8500:8505   */\n      0x00\n        /* \"#utility.yul\":8531:8537   */\n      dup2\n        /* \"#utility.yul\":8525:8538   */\n      mload\n        /* \"#utility.yul\":8516:8538   */\n      swap1\n      pop\n        /* \"#utility.yul\":8547:8577   */\n      tag_499\n        /* \"#utility.yul\":8571:8576   */\n      dup2\n        /* \"#utility.yul\":8547:8577   */\n      tag_382\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8446:8583   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8589:8934   */\n    tag_198:\n        /* \"#utility.yul\":8656:8662   */\n      0x00\n        /* \"#utility.yul\":8705:8707   */\n      0x20\n        /* \"#utility.yul\":8693:8702   */\n      dup3\n        /* \"#utility.yul\":8684:8691   */\n      dup5\n        /* \"#utility.yul\":8680:8703   */\n      sub\n        /* \"#utility.yul\":8676:8708   */\n      slt\n        /* \"#utility.yul\":8673:8792   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":8711:8790   */\n      tag_502\n      tag_373\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":8673:8792   */\n    tag_501:\n        /* \"#utility.yul\":8831:8832   */\n      0x00\n        /* \"#utility.yul\":8856:8917   */\n      tag_503\n        /* \"#utility.yul\":8909:8916   */\n      dup5\n        /* \"#utility.yul\":8900:8906   */\n      dup3\n        /* \"#utility.yul\":8889:8898   */\n      dup6\n        /* \"#utility.yul\":8885:8907   */\n      add\n        /* \"#utility.yul\":8856:8917   */\n      tag_398\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":8846:8917   */\n      swap2\n      pop\n        /* \"#utility.yul\":8802:8927   */\n      pop\n        /* \"#utility.yul\":8589:8934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8940:9161   */\n    tag_399:\n        /* \"#utility.yul\":9080:9114   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":9076:9077   */\n      0x00\n        /* \"#utility.yul\":9068:9074   */\n      dup3\n        /* \"#utility.yul\":9064:9078   */\n      add\n        /* \"#utility.yul\":9057:9115   */\n      mstore\n        /* \"#utility.yul\":9149:9153   */\n      0x696e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9144:9146   */\n      0x20\n        /* \"#utility.yul\":9136:9142   */\n      dup3\n        /* \"#utility.yul\":9132:9147   */\n      add\n        /* \"#utility.yul\":9125:9154   */\n      mstore\n        /* \"#utility.yul\":8940:9161   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9167:9533   */\n    tag_400:\n        /* \"#utility.yul\":9309:9312   */\n      0x00\n        /* \"#utility.yul\":9330:9397   */\n      tag_506\n        /* \"#utility.yul\":9394:9396   */\n      0x22\n        /* \"#utility.yul\":9389:9392   */\n      dup4\n        /* \"#utility.yul\":9330:9397   */\n      tag_393\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":9323:9397   */\n      swap2\n      pop\n        /* \"#utility.yul\":9406:9499   */\n      tag_507\n        /* \"#utility.yul\":9495:9498   */\n      dup3\n        /* \"#utility.yul\":9406:9499   */\n      tag_399\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":9524:9526   */\n      0x40\n        /* \"#utility.yul\":9519:9522   */\n      dup3\n        /* \"#utility.yul\":9515:9527   */\n      add\n        /* \"#utility.yul\":9508:9527   */\n      swap1\n      pop\n        /* \"#utility.yul\":9167:9533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9539:9958   */\n    tag_205:\n        /* \"#utility.yul\":9705:9709   */\n      0x00\n        /* \"#utility.yul\":9743:9745   */\n      0x20\n        /* \"#utility.yul\":9732:9741   */\n      dup3\n        /* \"#utility.yul\":9728:9746   */\n      add\n        /* \"#utility.yul\":9720:9746   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:9801   */\n      dup2\n        /* \"#utility.yul\":9786:9790   */\n      dup2\n        /* \"#utility.yul\":9782:9802   */\n      sub\n        /* \"#utility.yul\":9778:9779   */\n      0x00\n        /* \"#utility.yul\":9767:9776   */\n      dup4\n        /* \"#utility.yul\":9763:9780   */\n      add\n        /* \"#utility.yul\":9756:9803   */\n      mstore\n        /* \"#utility.yul\":9820:9951   */\n      tag_509\n        /* \"#utility.yul\":9946:9950   */\n      dup2\n        /* \"#utility.yul\":9820:9951   */\n      tag_400\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":9812:9951   */\n      swap1\n      pop\n        /* \"#utility.yul\":9539:9958   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9964:10144   */\n    tag_401:\n        /* \"#utility.yul\":10012:10089   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":10002:10090   */\n      mstore\n        /* \"#utility.yul\":10109:10113   */\n      0x11\n        /* \"#utility.yul\":10106:10107   */\n      0x04\n        /* \"#utility.yul\":10099:10114   */\n      mstore\n        /* \"#utility.yul\":10133:10137   */\n      0x24\n        /* \"#utility.yul\":10130:10131   */\n      0x00\n        /* \"#utility.yul\":10123:10138   */\n      revert\n        /* \"#utility.yul\":10150:10344   */\n    tag_210:\n        /* \"#utility.yul\":10190:10194   */\n      0x00\n        /* \"#utility.yul\":10210:10230   */\n      tag_512\n        /* \"#utility.yul\":10228:10229   */\n      dup3\n        /* \"#utility.yul\":10210:10230   */\n      tag_379\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10205:10230   */\n      swap2\n      pop\n        /* \"#utility.yul\":10244:10264   */\n      tag_513\n        /* \"#utility.yul\":10262:10263   */\n      dup4\n        /* \"#utility.yul\":10244:10264   */\n      tag_379\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10239:10264   */\n      swap3\n      pop\n        /* \"#utility.yul\":10288:10289   */\n      dup3\n        /* \"#utility.yul\":10285:10286   */\n      dup3\n        /* \"#utility.yul\":10281:10290   */\n      sub\n        /* \"#utility.yul\":10273:10290   */\n      swap1\n      pop\n        /* \"#utility.yul\":10312:10313   */\n      dup2\n        /* \"#utility.yul\":10306:10310   */\n      dup2\n        /* \"#utility.yul\":10303:10314   */\n      gt\n        /* \"#utility.yul\":10300:10337   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":10317:10335   */\n      tag_515\n      tag_401\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10300:10337   */\n    tag_514:\n        /* \"#utility.yul\":10150:10344   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10350:10530   */\n    tag_402:\n        /* \"#utility.yul\":10398:10475   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10395:10396   */\n      0x00\n        /* \"#utility.yul\":10388:10476   */\n      mstore\n        /* \"#utility.yul\":10495:10499   */\n      0x12\n        /* \"#utility.yul\":10492:10493   */\n      0x04\n        /* \"#utility.yul\":10485:10500   */\n      mstore\n        /* \"#utility.yul\":10519:10523   */\n      0x24\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10524   */\n      revert\n        /* \"#utility.yul\":10536:10721   */\n    tag_212:\n        /* \"#utility.yul\":10576:10577   */\n      0x00\n        /* \"#utility.yul\":10593:10613   */\n      tag_518\n        /* \"#utility.yul\":10611:10612   */\n      dup3\n        /* \"#utility.yul\":10593:10613   */\n      tag_379\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10588:10613   */\n      swap2\n      pop\n        /* \"#utility.yul\":10627:10647   */\n      tag_519\n        /* \"#utility.yul\":10645:10646   */\n      dup4\n        /* \"#utility.yul\":10627:10647   */\n      tag_379\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10622:10647   */\n      swap3\n      pop\n        /* \"#utility.yul\":10666:10667   */\n      dup3\n        /* \"#utility.yul\":10656:10691   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":10671:10689   */\n      tag_521\n      tag_402\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10656:10691   */\n    tag_520:\n        /* \"#utility.yul\":10713:10714   */\n      dup3\n        /* \"#utility.yul\":10710:10711   */\n      dup3\n        /* \"#utility.yul\":10706:10715   */\n      div\n        /* \"#utility.yul\":10701:10715   */\n      swap1\n      pop\n        /* \"#utility.yul\":10536:10721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10727:10918   */\n    tag_214:\n        /* \"#utility.yul\":10767:10770   */\n      0x00\n        /* \"#utility.yul\":10786:10806   */\n      tag_523\n        /* \"#utility.yul\":10804:10805   */\n      dup3\n        /* \"#utility.yul\":10786:10806   */\n      tag_379\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10781:10806   */\n      swap2\n      pop\n        /* \"#utility.yul\":10820:10840   */\n      tag_524\n        /* \"#utility.yul\":10838:10839   */\n      dup4\n        /* \"#utility.yul\":10820:10840   */\n      tag_379\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":10815:10840   */\n      swap3\n      pop\n        /* \"#utility.yul\":10863:10864   */\n      dup3\n        /* \"#utility.yul\":10860:10861   */\n      dup3\n        /* \"#utility.yul\":10856:10865   */\n      add\n        /* \"#utility.yul\":10849:10865   */\n      swap1\n      pop\n        /* \"#utility.yul\":10884:10887   */\n      dup1\n        /* \"#utility.yul\":10881:10882   */\n      dup3\n        /* \"#utility.yul\":10878:10888   */\n      gt\n        /* \"#utility.yul\":10875:10911   */\n      iszero\n      tag_525\n      jumpi\n        /* \"#utility.yul\":10891:10909   */\n      tag_526\n      tag_401\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":10875:10911   */\n    tag_525:\n        /* \"#utility.yul\":10727:10918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10924:11334   */\n    tag_219:\n        /* \"#utility.yul\":10964:10971   */\n      0x00\n        /* \"#utility.yul\":10987:11007   */\n      tag_528\n        /* \"#utility.yul\":11005:11006   */\n      dup3\n        /* \"#utility.yul\":10987:11007   */\n      tag_379\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":10982:11007   */\n      swap2\n      pop\n        /* \"#utility.yul\":11021:11041   */\n      tag_529\n        /* \"#utility.yul\":11039:11040   */\n      dup4\n        /* \"#utility.yul\":11021:11041   */\n      tag_379\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11016:11041   */\n      swap3\n      pop\n        /* \"#utility.yul\":11076:11077   */\n      dup3\n        /* \"#utility.yul\":11073:11074   */\n      dup3\n        /* \"#utility.yul\":11069:11078   */\n      mul\n        /* \"#utility.yul\":11098:11128   */\n      tag_530\n        /* \"#utility.yul\":11116:11127   */\n      dup2\n        /* \"#utility.yul\":11098:11128   */\n      tag_379\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":11087:11128   */\n      swap2\n      pop\n        /* \"#utility.yul\":11277:11278   */\n      dup3\n        /* \"#utility.yul\":11268:11275   */\n      dup3\n        /* \"#utility.yul\":11264:11279   */\n      div\n        /* \"#utility.yul\":11261:11262   */\n      dup5\n        /* \"#utility.yul\":11258:11280   */\n      eq\n        /* \"#utility.yul\":11238:11239   */\n      dup4\n        /* \"#utility.yul\":11231:11240   */\n      iszero\n        /* \"#utility.yul\":11211:11294   */\n      or\n        /* \"#utility.yul\":11188:11327   */\n      tag_531\n      jumpi\n        /* \"#utility.yul\":11307:11325   */\n      tag_532\n      tag_401\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":11188:11327   */\n    tag_531:\n        /* \"#utility.yul\":10972:11334   */\n      pop\n        /* \"#utility.yul\":10924:11334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11340:11573   */\n    tag_223:\n        /* \"#utility.yul\":11379:11382   */\n      0x00\n        /* \"#utility.yul\":11402:11426   */\n      tag_534\n        /* \"#utility.yul\":11420:11425   */\n      dup3\n        /* \"#utility.yul\":11402:11426   */\n      tag_379\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11393:11426   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11514   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11441:11446   */\n      dup3\n        /* \"#utility.yul\":11438:11515   */\n      sub\n        /* \"#utility.yul\":11435:11538   */\n      tag_535\n      jumpi\n        /* \"#utility.yul\":11518:11536   */\n      tag_536\n      tag_401\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11435:11538   */\n    tag_535:\n        /* \"#utility.yul\":11565:11566   */\n      0x01\n        /* \"#utility.yul\":11558:11563   */\n      dup3\n        /* \"#utility.yul\":11554:11567   */\n      add\n        /* \"#utility.yul\":11547:11567   */\n      swap1\n      pop\n        /* \"#utility.yul\":11340:11573   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11579:11743   */\n    tag_403:\n        /* \"#utility.yul\":11719:11735   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":11715:11716   */\n      0x00\n        /* \"#utility.yul\":11707:11713   */\n      dup3\n        /* \"#utility.yul\":11703:11717   */\n      add\n        /* \"#utility.yul\":11696:11736   */\n      mstore\n        /* \"#utility.yul\":11579:11743   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11749:12115   */\n    tag_404:\n        /* \"#utility.yul\":11891:11894   */\n      0x00\n        /* \"#utility.yul\":11912:11979   */\n      tag_539\n        /* \"#utility.yul\":11976:11978   */\n      0x0e\n        /* \"#utility.yul\":11971:11974   */\n      dup4\n        /* \"#utility.yul\":11912:11979   */\n      tag_393\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11905:11979   */\n      swap2\n      pop\n        /* \"#utility.yul\":11988:12081   */\n      tag_540\n        /* \"#utility.yul\":12077:12080   */\n      dup3\n        /* \"#utility.yul\":11988:12081   */\n      tag_403\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12106:12108   */\n      0x20\n        /* \"#utility.yul\":12101:12104   */\n      dup3\n        /* \"#utility.yul\":12097:12109   */\n      add\n        /* \"#utility.yul\":12090:12109   */\n      swap1\n      pop\n        /* \"#utility.yul\":11749:12115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12121:12540   */\n    tag_294:\n        /* \"#utility.yul\":12287:12291   */\n      0x00\n        /* \"#utility.yul\":12325:12327   */\n      0x20\n        /* \"#utility.yul\":12314:12323   */\n      dup3\n        /* \"#utility.yul\":12310:12328   */\n      add\n        /* \"#utility.yul\":12302:12328   */\n      swap1\n      pop\n        /* \"#utility.yul\":12374:12383   */\n      dup2\n        /* \"#utility.yul\":12368:12372   */\n      dup2\n        /* \"#utility.yul\":12364:12384   */\n      sub\n        /* \"#utility.yul\":12360:12361   */\n      0x00\n        /* \"#utility.yul\":12349:12358   */\n      dup4\n        /* \"#utility.yul\":12345:12362   */\n      add\n        /* \"#utility.yul\":12338:12385   */\n      mstore\n        /* \"#utility.yul\":12402:12533   */\n      tag_542\n        /* \"#utility.yul\":12528:12532   */\n      dup2\n        /* \"#utility.yul\":12402:12533   */\n      tag_404\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":12394:12533   */\n      swap1\n      pop\n        /* \"#utility.yul\":12121:12540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12546:12722   */\n    tag_309:\n        /* \"#utility.yul\":12578:12579   */\n      0x00\n        /* \"#utility.yul\":12595:12615   */\n      tag_544\n        /* \"#utility.yul\":12613:12614   */\n      dup3\n        /* \"#utility.yul\":12595:12615   */\n      tag_379\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":12590:12615   */\n      swap2\n      pop\n        /* \"#utility.yul\":12629:12649   */\n      tag_545\n        /* \"#utility.yul\":12647:12648   */\n      dup4\n        /* \"#utility.yul\":12629:12649   */\n      tag_379\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":12624:12649   */\n      swap3\n      pop\n        /* \"#utility.yul\":12668:12669   */\n      dup3\n        /* \"#utility.yul\":12658:12693   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":12673:12691   */\n      tag_547\n      tag_402\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":12658:12693   */\n    tag_546:\n        /* \"#utility.yul\":12714:12715   */\n      dup3\n        /* \"#utility.yul\":12711:12712   */\n      dup3\n        /* \"#utility.yul\":12707:12716   */\n      mod\n        /* \"#utility.yul\":12702:12716   */\n      swap1\n      pop\n        /* \"#utility.yul\":12546:12722   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12728:12953   */\n    tag_405:\n        /* \"#utility.yul\":12868:12902   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12864:12865   */\n      0x00\n        /* \"#utility.yul\":12856:12862   */\n      dup3\n        /* \"#utility.yul\":12852:12866   */\n      add\n        /* \"#utility.yul\":12845:12903   */\n      mstore\n        /* \"#utility.yul\":12937:12945   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12932:12934   */\n      0x20\n        /* \"#utility.yul\":12924:12930   */\n      dup3\n        /* \"#utility.yul\":12920:12935   */\n      add\n        /* \"#utility.yul\":12913:12946   */\n      mstore\n        /* \"#utility.yul\":12728:12953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12959:13325   */\n    tag_406:\n        /* \"#utility.yul\":13101:13104   */\n      0x00\n        /* \"#utility.yul\":13122:13189   */\n      tag_550\n        /* \"#utility.yul\":13186:13188   */\n      0x26\n        /* \"#utility.yul\":13181:13184   */\n      dup4\n        /* \"#utility.yul\":13122:13189   */\n      tag_393\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":13115:13189   */\n      swap2\n      pop\n        /* \"#utility.yul\":13198:13291   */\n      tag_551\n        /* \"#utility.yul\":13287:13290   */\n      dup3\n        /* \"#utility.yul\":13198:13291   */\n      tag_405\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13316:13318   */\n      0x40\n        /* \"#utility.yul\":13311:13314   */\n      dup3\n        /* \"#utility.yul\":13307:13319   */\n      add\n        /* \"#utility.yul\":13300:13319   */\n      swap1\n      pop\n        /* \"#utility.yul\":12959:13325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13331:13750   */\n    tag_357:\n        /* \"#utility.yul\":13497:13501   */\n      0x00\n        /* \"#utility.yul\":13535:13537   */\n      0x20\n        /* \"#utility.yul\":13524:13533   */\n      dup3\n        /* \"#utility.yul\":13520:13538   */\n      add\n        /* \"#utility.yul\":13512:13538   */\n      swap1\n      pop\n        /* \"#utility.yul\":13584:13593   */\n      dup2\n        /* \"#utility.yul\":13578:13582   */\n      dup2\n        /* \"#utility.yul\":13574:13594   */\n      sub\n        /* \"#utility.yul\":13570:13571   */\n      0x00\n        /* \"#utility.yul\":13559:13568   */\n      dup4\n        /* \"#utility.yul\":13555:13572   */\n      add\n        /* \"#utility.yul\":13548:13595   */\n      mstore\n        /* \"#utility.yul\":13612:13743   */\n      tag_553\n        /* \"#utility.yul\":13738:13742   */\n      dup2\n        /* \"#utility.yul\":13612:13743   */\n      tag_406\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":13604:13743   */\n      swap1\n      pop\n        /* \"#utility.yul\":13331:13750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f1e30a9344357949a61ad4dbb9b5455e72ac79e8d72208c3a55b8214e2fd706464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_993": {
									"entryPoint": null,
									"id": 993,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 89,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 97,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526923934c5a09da1900000060055561025860075560056008556103e860095534801561002f57600080fd5b5061004c61004161005960201b60201c565b61006160201b60201c565b6001600281905550610127565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61230d80620001376000396000f3fe608060405234801561001057600080fd5b50600436106101fa5760003560e01c80638107368b1161011a578063adc9772e116100ad578063d1af0c7d1161007c578063d1af0c7d146105b7578063da4f8431146105d5578063db2e21bc14610605578063df136d651461060f578063f2fde38b1461062d576101fa565b8063adc9772e1461052f578063b79ec8121461054b578063c8f33c911461057b578063cdda56e014610599576101fa565b80638da5cb5b116100e95780638da5cb5b146104b95780639499c549146104d75780639a5b17b0146104f5578063a4c3b09114610513576101fa565b80638107368b1461040d578063874c120b1461043d5780638aee81271461046d5780638b87634714610489576101fa565b80634dbdc4eb11610192578063715018a611610161578063715018a6146103a957806378e97925146103b35780637a6fcee7146103d157806380faa57d146103ef576101fa565b80634dbdc4eb1461030d5780635cfa91f41461033d5780636139d4b41461036d5780636917c5011461038b576101fa565b806324d7806c116101ce57806324d7806c146102995780633c4045cf146102c95780633d18b912146102e75780633e0a322d146102f1576101fa565b80628cc262146101ff5780630700037d1461022f5780630e15561a1461025f57806318e20ecf1461027d575b600080fd5b61021960048036038101906102149190611b72565b610649565b6040516102269190611bb8565b60405180910390f35b61024960048036038101906102449190611b72565b6107b5565b6040516102569190611bb8565b60405180910390f35b6102676107cd565b6040516102749190611bb8565b60405180910390f35b61029760048036038101906102929190611c0b565b6107d3565b005b6102b360048036038101906102ae9190611b72565b610944565b6040516102c09190611c5a565b60405180910390f35b6102d1610999565b6040516102de9190611bb8565b60405180910390f35b6102ef61099f565b005b61030b60048036038101906103069190611ca1565b610d04565b005b61032760048036038101906103229190611ca1565b610d5d565b6040516103349190611bb8565b60405180910390f35b61035760048036038101906103529190611ca1565b610df4565b6040516103649190611bb8565b60405180910390f35b610375610ea5565b6040516103829190611bb8565b60405180910390f35b610393610eab565b6040516103a09190611bb8565b60405180910390f35b6103b1610eb5565b005b6103bb610f3d565b6040516103c89190611bb8565b60405180910390f35b6103d9610f43565b6040516103e69190611bb8565b60405180910390f35b6103f7610f49565b6040516104049190611bb8565b60405180910390f35b61042760048036038101906104229190611b72565b610f51565b6040516104349190611bb8565b60405180910390f35b61045760048036038101906104529190611ca1565b610f69565b6040516104649190611bb8565b60405180910390f35b61048760048036038101906104829190611b72565b610ff6565b005b6104a3600480360381019061049e9190611b72565b6110b6565b6040516104b09190611bb8565b60405180910390f35b6104c16110ce565b6040516104ce9190611cdd565b60405180910390f35b6104df6110f8565b6040516104ec9190611bb8565b60405180910390f35b6104fd611108565b60405161050a9190611bb8565b60405180910390f35b61052d60048036038101906105289190611cf8565b611110565b005b61054960048036038101906105449190611cf8565b61120f565b005b61056560048036038101906105609190611b72565b611583565b6040516105729190611bb8565b60405180910390f35b6105836115cc565b6040516105909190611bb8565b60405180910390f35b6105a16115d2565b6040516105ae9190611bb8565b60405180910390f35b6105bf6115e2565b6040516105cc9190611d97565b60405180910390f35b6105ef60048036038101906105ea9190611db2565b611608565b6040516105fc9190611bb8565b60405180910390f35b61060d6117ef565b005b6106176118bb565b6040516106249190611bb8565b60405180910390f35b61064760048036038101906106429190611b72565b6118c1565b005b600080610695600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442611608565b90506107ad600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461079f670de0b6b3a7640000610791610743600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073588610f69565b6119b890919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119ce90919063ffffffff16565b6119e490919063ffffffff16565b6119fa90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b6107db611a10565b73ffffffffffffffffffffffffffffffffffffffff166107f96110ce565b73ffffffffffffffffffffffffffffffffffffffff161461084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084690611e75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516108e2929190611e95565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b60028054036109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90611f0a565b60405180910390fd5b60028081905550336000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610a3e5760065490505b6000610a4a8242611608565b9050610a5581610f69565b600b81905550610a63610f49565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b7457610aa683610649565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610cf6576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c63929190611f2a565b6020604051808303816000875af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190611f68565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610ced9190611bb8565b60405180910390a25b505050506001600281905550565b610d14610d0f611a10565b610944565b610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a90612007565b60405180910390fd5b8060068190555050565b60008060065403610d72576006549050610def565b6000600160075460065485610d879190612056565b610d9191906120b9565b610d9b91906120ea565b90506000600554905060005b82811015610de85760095460085483610dc0919061211e565b610dca91906120b9565b82610dd59190612056565b915080610de190612160565b9050610da7565b5080925050505b919050565b60008060065403610e09576005549050610ea0565b6000600160075460065485610e1e9190612056565b610e2891906120b9565b610e3291906120ea565b90506000600554905060005b82811015610e7f5760095460085483610e57919061211e565b610e6191906120b9565b82610e6c9190612056565b915080610e7890612160565b9050610e3e565b5060095460085482610e91919061211e565b610e9b91906120b9565b925050505b919050565b60075481565b6000600e54905090565b610ebd611a10565b73ffffffffffffffffffffffffffffffffffffffff16610edb6110ce565b73ffffffffffffffffffffffffffffffffffffffff1614610f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2890611e75565b60405180910390fd5b610f3b6000611a18565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e5403610f7e57600b549050610ff1565b610fee610fdd600e54610fcf670de0b6b3a7640000610fc187610fb3600a54610fa5610f49565b6119b890919063ffffffff16565b6119ce90919063ffffffff16565b6119ce90919063ffffffff16565b6119e490919063ffffffff16565b600b546119fa90919063ffffffff16565b90505b919050565b610ffe611a10565b73ffffffffffffffffffffffffffffffffffffffff1661101c6110ce565b73ffffffffffffffffffffffffffffffffffffffff1614611072576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106990611e75565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061110342610df4565b905090565b600042905090565b611118611a10565b73ffffffffffffffffffffffffffffffffffffffff166111366110ce565b73ffffffffffffffffffffffffffffffffffffffff161461118c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118390611e75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111c7929190611f2a565b6020604051808303816000875af11580156111e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120a9190611f68565b505050565b6002805403611253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124a90611f0a565b60405180910390fd5b6002808190555061126a611265611a10565b610944565b6112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a090612007565b60405180910390fd5b816000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116112fd5760065490505b60006113098242611608565b905061131481610f69565b600b81905550611322610f49565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146114335761136583610649565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411611476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146d906121f4565b60405180910390fd5b61148b84600e546119fa90919063ffffffff16565b600e819055506114e384600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119fa90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161156c9190611bb8565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b60006115dd42611ade565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654148061161a5750818310155b806116255750600083145b1561163357600090506117e9565b6006548310156116435760065492505b6000600754600754600654866116599190612056565b6116639190612214565b6007546116709190612056565b61167a9190612214565b905060006007548261168b87610df4565b611695919061211e565b61169f91906120b9565b90506000600754600654866116b49190612056565b6116be9190612214565b90506000600754826116cf88610df4565b6116d9919061211e565b6116e391906120b9565b90508584886116f291906120ea565b111561170c5761170187611ade565b9450505050506117e9565b60008488848961171c9190612056565b6117269190612056565b6117309190612056565b9050600061173d89610d5d565b9050600080600083905060006007548661175791906120b9565b905060005b818110156117ae5760095460085484611775919061211e565b61177f91906120b9565b9350838361178d9190612056565b9250838561179b91906120ea565b9450806117a790612160565b905061175c565b508c8c6117bb9190612056565b878a866117c891906120ea565b6117d291906120ea565b6117dc91906120b9565b9a50505050505050505050505b92915050565b6117f7611a10565b73ffffffffffffffffffffffffffffffffffffffff166118156110ce565b73ffffffffffffffffffffffffffffffffffffffff161461186b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186290611e75565b60405180910390fd5b6118736110ce565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156118b8573d6000803e3d6000fd5b50565b600b5481565b6118c9611a10565b73ffffffffffffffffffffffffffffffffffffffff166118e76110ce565b73ffffffffffffffffffffffffffffffffffffffff161461193d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193490611e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a3906122b7565b60405180910390fd5b6119b581611a18565b50565b600081836119c69190612056565b905092915050565b600081836119dc919061211e565b905092915050565b600081836119f291906120b9565b905092915050565b60008183611a0891906120ea565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611aea83610df4565b90506000611b03600754836119e490919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b3f82611b14565b9050919050565b611b4f81611b34565b8114611b5a57600080fd5b50565b600081359050611b6c81611b46565b92915050565b600060208284031215611b8857611b87611b0f565b5b6000611b9684828501611b5d565b91505092915050565b6000819050919050565b611bb281611b9f565b82525050565b6000602082019050611bcd6000830184611ba9565b92915050565b60008115159050919050565b611be881611bd3565b8114611bf357600080fd5b50565b600081359050611c0581611bdf565b92915050565b60008060408385031215611c2257611c21611b0f565b5b6000611c3085828601611b5d565b9250506020611c4185828601611bf6565b9150509250929050565b611c5481611bd3565b82525050565b6000602082019050611c6f6000830184611c4b565b92915050565b611c7e81611b9f565b8114611c8957600080fd5b50565b600081359050611c9b81611c75565b92915050565b600060208284031215611cb757611cb6611b0f565b5b6000611cc584828501611c8c565b91505092915050565b611cd781611b34565b82525050565b6000602082019050611cf26000830184611cce565b92915050565b60008060408385031215611d0f57611d0e611b0f565b5b6000611d1d85828601611b5d565b9250506020611d2e85828601611c8c565b9150509250929050565b6000819050919050565b6000611d5d611d58611d5384611b14565b611d38565b611b14565b9050919050565b6000611d6f82611d42565b9050919050565b6000611d8182611d64565b9050919050565b611d9181611d76565b82525050565b6000602082019050611dac6000830184611d88565b92915050565b60008060408385031215611dc957611dc8611b0f565b5b6000611dd785828601611c8c565b9250506020611de885828601611c8c565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e5f602283611df2565b9150611e6a82611e03565b604082019050919050565b60006020820190508181036000830152611e8e81611e52565b9050919050565b6000604082019050611eaa6000830185611c4b565b611eb76020830184611c4b565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611ef4601f83611df2565b9150611eff82611ebe565b602082019050919050565b60006020820190508181036000830152611f2381611ee7565b9050919050565b6000604082019050611f3f6000830185611cce565b611f4c6020830184611ba9565b9392505050565b600081519050611f6281611bdf565b92915050565b600060208284031215611f7e57611f7d611b0f565b5b6000611f8c84828501611f53565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ff1602283611df2565b9150611ffc82611f95565b604082019050919050565b6000602082019050818103600083015261202081611fe4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206182611b9f565b915061206c83611b9f565b925082820390508181111561208457612083612027565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120c482611b9f565b91506120cf83611b9f565b9250826120df576120de61208a565b5b828204905092915050565b60006120f582611b9f565b915061210083611b9f565b925082820190508082111561211857612117612027565b5b92915050565b600061212982611b9f565b915061213483611b9f565b925082820261214281611b9f565b9150828204841483151761215957612158612027565b5b5092915050565b600061216b82611b9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361219d5761219c612027565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b60006121de600e83611df2565b91506121e9826121a8565b602082019050919050565b6000602082019050818103600083015261220d816121d1565b9050919050565b600061221f82611b9f565b915061222a83611b9f565b92508261223a5761223961208a565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122a1602683611df2565b91506122ac82612245565b604082019050919050565b600060208201905081810360008301526122d081612294565b905091905056fea2646970667358221220f1e30a9344357949a61ad4dbb9b5455e72ac79e8d72208c3a55b8214e2fd706464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x23934C5A09DA19000000 PUSH1 0x5 SSTORE PUSH2 0x258 PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C PUSH2 0x41 PUSH2 0x59 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x61 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x230D DUP1 PUSH3 0x137 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62D JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x599 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x513 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x489 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3EF JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x38B JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x2F1 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x99F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BB PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0xFF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DF PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x1110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x549 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH2 0x17EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x617 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x18C1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x695 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x79F PUSH8 0xDE0B6B3A7640000 PUSH2 0x791 PUSH2 0x743 PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x735 DUP9 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x19B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F9 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x9E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DA SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xA3E JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xA4A DUP3 TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0xA55 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xA63 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB74 JUMPI PUSH2 0xAA6 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x1F68 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD14 PUSH2 0xD0F PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xD72 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xD87 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xD9B SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST DUP3 PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xDE1 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE09 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE1E SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE7F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xE61 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST DUP3 PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE78 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEDB PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3B PUSH1 0x0 PUSH2 0x1A18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0xF7E JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0xFEE PUSH2 0xFDD PUSH1 0xE SLOAD PUSH2 0xFCF PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC1 DUP8 PUSH2 0xFB3 PUSH1 0xA SLOAD PUSH2 0xFA5 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x19B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFE PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101C PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1103 TIMESTAMP PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1118 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1136 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1183 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x126A PUSH2 0x1265 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x12FD JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1309 DUP3 TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0x1314 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1322 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1433 JUMPI PUSH2 0x1365 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148B DUP5 PUSH1 0xE SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x14E3 DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DD TIMESTAMP PUSH2 0x1ADE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x161A JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x1625 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x1643 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1659 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x167A SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x168B DUP8 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x1695 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x16B4 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x16CF DUP9 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x16E3 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x16F2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x1701 DUP8 PUSH2 0x1ADE JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x171C SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x173D DUP10 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1757 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x17A7 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0x175C JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x17BB SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x17C8 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1815 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1873 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x18B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E7 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1934 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x1A18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19DC SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A08 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AEA DUP4 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B03 PUSH1 0x7 SLOAD DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6C DUP2 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP5 DUP3 DUP6 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C05 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C54 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7E DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9B DUP2 PUSH2 0x1C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD7 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2E DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5D PUSH2 0x1D58 PUSH2 0x1D53 DUP5 PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D81 DUP3 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D91 DUP2 PUSH2 0x1D76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC9 JUMPI PUSH2 0x1DC8 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5F PUSH1 0x22 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6A DUP3 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8E DUP2 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x1EB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 PUSH1 0x1F DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFF DUP3 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F23 DUP2 PUSH2 0x1EE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x1F4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F62 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8C DUP5 DUP3 DUP6 ADD PUSH2 0x1F53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF1 PUSH1 0x22 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC DUP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2061 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2084 JUMPI PUSH2 0x2083 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20C4 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x20CF DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20DF JUMPI PUSH2 0x20DE PUSH2 0x208A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F5 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2100 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2118 JUMPI PUSH2 0x2117 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2129 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2134 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2142 DUP2 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x2027 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DE PUSH1 0xE DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E9 DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220D DUP2 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221F DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x222A DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x223A JUMPI PUSH2 0x2239 PUSH2 0x208A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A1 PUSH1 0x26 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AC DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D0 DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE3 EXP SWAP4 DIFFICULTY CALLDATALOAD PUSH26 0x49A61AD4DBB9B5455E72AC79E8D72208C3A55B8214E2FD706464 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "371:6895:1:-:0;;;581:17;551:47;;666:10;636:40;;722:1;683:40;;771:4;730:45;;371:6895;;;;;;;;;;603:32:0;622:12;:10;;;:12;;:::i;:::-;603:18;;;:32;;:::i;:::-;1701:1:3;1806:7;:22;;;;371:6895:1;;63:98:0;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;371:6895:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardRate_553": {
									"entryPoint": 6878,
									"id": 553,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": 6672,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 6680,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1789": {
									"entryPoint": 6650,
									"id": 1789,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@curTime_330": {
									"entryPoint": 4360,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1834": {
									"entryPoint": 6628,
									"id": 1834,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_635": {
									"entryPoint": 1609,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@emergencyWithdrawToken_951": {
									"entryPoint": 4368,
									"id": 951,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_932": {
									"entryPoint": 6127,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurRewardPool_353": {
									"entryPoint": 4344,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_530": {
									"entryPoint": 5586,
									"id": 530,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainPool_519": {
									"entryPoint": 3421,
									"id": 519,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPool_411": {
									"entryPoint": 3572,
									"id": 411,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_887": {
									"entryPoint": 2463,
									"id": 887,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_799": {
									"entryPoint": 5640,
									"id": 799,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": 2372,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_562": {
									"entryPoint": 3913,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_216": {
									"entryPoint": 5580,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 2003,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1819": {
									"entryPoint": 6606,
									"id": 1819,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": 4302,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_342": {
									"entryPoint": 5507,
									"id": 342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_214": {
									"entryPoint": 3907,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_211": {
									"entryPoint": 2457,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_208": {
									"entryPoint": 3749,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 3765,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_218": {
									"entryPoint": 6331,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_595": {
									"entryPoint": 3945,
									"id": 595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_192": {
									"entryPoint": 5602,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_196": {
									"entryPoint": 1973,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setRewardToken_901": {
									"entryPoint": 4086,
									"id": 901,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStartTime_313": {
									"entryPoint": 3332,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_844": {
									"entryPoint": 4623,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_205": {
									"entryPoint": 3901,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1804": {
									"entryPoint": 6584,
									"id": 1804,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_321": {
									"entryPoint": 3755,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_203": {
									"entryPoint": 1997,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 6337,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_226": {
									"entryPoint": 3921,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_222": {
									"entryPoint": 4278,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1092_to_t_address_fromStack": {
									"entryPoint": 7560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7762,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7978,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7258,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 7829,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1092__to_t_address__fromStack_reversed": {
									"entryPoint": 7575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7096,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6964,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7071,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1092_to_t_address": {
									"entryPoint": 7542,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8231,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 8773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045": {
									"entryPoint": 8085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13753:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:8",
														"type": ""
													}
												],
												"src": "466:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:8"
															},
															"nodeType": "YulIf",
															"src": "621:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:8",
														"type": ""
													}
												],
												"src": "568:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:8",
														"type": ""
													}
												],
												"src": "696:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:8"
															},
															"nodeType": "YulIf",
															"src": "917:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:8",
														"type": ""
													}
												],
												"src": "841:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:8",
														"type": ""
													}
												],
												"src": "1176:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:8",
														"type": ""
													}
												],
												"src": "1259:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:8",
														"type": ""
													}
												],
												"src": "1383:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:8",
														"type": ""
													}
												],
												"src": "1611:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1801:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1777:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1777:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:40:8"
															},
															"nodeType": "YulIf",
															"src": "1757:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:8",
														"type": ""
													}
												],
												"src": "1707:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:84:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1888:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1926:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1856:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1864:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1872:5:8",
														"type": ""
													}
												],
												"src": "1829:133:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:388:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:8"
															},
															"nodeType": "YulIf",
															"src": "2058:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2266:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2277:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2262:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2262:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2286:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2241:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2314:115:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:60:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2369:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:50:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2010:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2021:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2033:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2041:6:8",
														"type": ""
													}
												],
												"src": "1968:468:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2518:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2538:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2523:14:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:34:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2489:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2496:3:8",
														"type": ""
													}
												],
												"src": "2442:109:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:118:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2659:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2757:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2695:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2621:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:8",
														"type": ""
													}
												],
												"src": "2557:210:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2885:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2839:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2864:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2846:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2846:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2836:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:43:8"
															},
															"nodeType": "YulIf",
															"src": "2826:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2809:5:8",
														"type": ""
													}
												],
												"src": "2773:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2985:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2972:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2963:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3028:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3001:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3001:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2931:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2939:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2947:5:8",
														"type": ""
													}
												],
												"src": "2901:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3158:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3160:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3133:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3125:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:32:8"
															},
															"nodeType": "YulIf",
															"src": "3122:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3251:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3266:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3270:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3295:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3330:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3341:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3326:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3350:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3082:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3093:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3105:6:8",
														"type": ""
													}
												],
												"src": "3046:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3446:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3463:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3486:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3468:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3456:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3434:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3441:3:8",
														"type": ""
													}
												],
												"src": "3381:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3613:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3613:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3706:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3717:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3702:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3649:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3649:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3587:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3598:4:8",
														"type": ""
													}
												],
												"src": "3505:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3862:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3864:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3864:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3864:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3837:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3846:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3858:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:32:8"
															},
															"nodeType": "YulIf",
															"src": "3826:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "3955:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3970:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3984:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3974:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3999:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4034:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4030:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4030:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4009:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4082:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4097:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4101:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4127:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4162:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4173:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4158:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4182:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4137:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4127:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3778:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3789:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3801:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3809:6:8",
														"type": ""
													}
												],
												"src": "3733:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4255:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4262:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4231:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4241:3:8",
														"type": ""
													}
												],
												"src": "4213:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4349:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4407:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4389:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4389:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4380:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4362:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4349:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4319:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4329:9:8",
														"type": ""
													}
												],
												"src": "4279:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4497:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4541:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4510:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4497:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4467:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4477:9:8",
														"type": ""
													}
												],
												"src": "4427:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4634:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4644:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4688:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4657:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4657:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4644:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1092_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4614:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4624:9:8",
														"type": ""
													}
												],
												"src": "4559:141:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4786:81:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4803:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4854:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1092_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4808:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:52:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4796:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4796:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4796:65:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1092_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4774:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4781:3:8",
														"type": ""
													}
												],
												"src": "4706:161:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4986:139:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4996:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5008:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5019:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5004:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5004:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4996:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5091:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5104:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5115:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5100:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5100:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1092_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5032:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:86:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5032:86:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1092__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4958:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4970:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4981:4:8",
														"type": ""
													}
												],
												"src": "4873:252:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5214:391:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5260:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5262:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5262:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5262:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5235:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5244:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5256:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5227:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5227:32:8"
															},
															"nodeType": "YulIf",
															"src": "5224:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "5353:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5368:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5372:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5397:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5432:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5443:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5428:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5428:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5452:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5407:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5407:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5397:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5480:118:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5495:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5509:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5499:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5525:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5560:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5571:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5580:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5535:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5535:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5525:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5176:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5187:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5199:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5207:6:8",
														"type": ""
													}
												],
												"src": "5131:474:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5707:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5724:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5729:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5717:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5717:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5745:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5764:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5769:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5760:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5760:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5745:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5679:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5684:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5695:11:8",
														"type": ""
													}
												],
												"src": "5611:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5892:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5914:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5922:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5910:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5910:14:8"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5926:34:8",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5903:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5903:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5982:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5990:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5978:15:8"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5995:4:8",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5971:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5971:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5971:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5884:6:8",
														"type": ""
													}
												],
												"src": "5786:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6159:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6169:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6235:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6176:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6176:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6169:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6341:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																	"nodeType": "YulIdentifier",
																	"src": "6252:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6252:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6252:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6354:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6365:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6370:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6361:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6354:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6147:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6155:3:8",
														"type": ""
													}
												],
												"src": "6013:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6566:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6578:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6589:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6574:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6574:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6566:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6613:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6624:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6609:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6609:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6632:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6628:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6628:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6602:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6602:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6602:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6658:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6792:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6666:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6658:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6536:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6551:4:8",
														"type": ""
													}
												],
												"src": "6385:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6924:194:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6934:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6946:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6957:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6942:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6934:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7008:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7021:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7032:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7017:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7017:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6970:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6970:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6970:65:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7083:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7096:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7107:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7092:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7092:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7045:37:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:66:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7045:66:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6888:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6900:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6908:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6919:4:8",
														"type": ""
													}
												],
												"src": "6810:308:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7230:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7252:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7260:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7248:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7248:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7264:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7241:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7241:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7241:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7222:6:8",
														"type": ""
													}
												],
												"src": "7124:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7457:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7467:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7533:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7538:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7474:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7474:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7467:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7639:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7550:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7550:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7550:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7652:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7663:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7668:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7659:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7659:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7652:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7445:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7453:3:8",
														"type": ""
													}
												],
												"src": "7311:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7854:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7864:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7876:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7887:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7872:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7872:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7864:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7911:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7922:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7930:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7936:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7926:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7926:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7900:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7900:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7900:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7956:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8090:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7964:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7964:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7956:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7834:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7849:4:8",
														"type": ""
													}
												],
												"src": "7683:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8234:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8244:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8256:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8267:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8244:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8324:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8337:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8348:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8333:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8333:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8280:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8405:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8418:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8429:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8414:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8414:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8361:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8198:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8210:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8218:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8229:4:8",
														"type": ""
													}
												],
												"src": "8108:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8506:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8516:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8531:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8525:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8516:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8571:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8547:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8547:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8547:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8484:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8492:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8500:5:8",
														"type": ""
													}
												],
												"src": "8446:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8663:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8709:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8711:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8711:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8711:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8684:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8693:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8680:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8705:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8676:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8676:32:8"
															},
															"nodeType": "YulIf",
															"src": "8673:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8802:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8817:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8831:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8821:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8846:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8889:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8900:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8885:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8885:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8909:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8856:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8856:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8846:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8633:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8644:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8656:6:8",
														"type": ""
													}
												],
												"src": "8589:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9046:115:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9068:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9076:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9064:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9064:14:8"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9080:34:8",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9057:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9057:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9136:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9144:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:15:8"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9149:4:8",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9125:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9125:29:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9125:29:8"
														}
													]
												},
												"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9038:6:8",
														"type": ""
													}
												],
												"src": "8940:221:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9313:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9323:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9389:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9394:2:8",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9330:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9330:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9323:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9495:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																	"nodeType": "YulIdentifier",
																	"src": "9406:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9406:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9406:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9508:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9519:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9524:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9515:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9515:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9508:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9301:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9309:3:8",
														"type": ""
													}
												],
												"src": "9167:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9710:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9720:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9732:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9743:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9728:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9728:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9720:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9767:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9778:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9763:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9786:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9792:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9782:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9782:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9756:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9756:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9756:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9812:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9946:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9820:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9820:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9812:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9690:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9705:4:8",
														"type": ""
													}
												],
												"src": "9539:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9992:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10009:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10012:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10002:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10002:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10002:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10106:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10109:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10099:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10099:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10099:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10130:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10133:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10123:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10123:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10123:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9964:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10195:149:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10205:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10228:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10210:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10210:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10205:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10239:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10262:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10244:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10244:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10239:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10273:17:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10285:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10288:1:8"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10281:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10281:9:8"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10273:4:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10315:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10317:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10317:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10317:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10306:4:8"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10312:1:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10303:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10303:11:8"
															},
															"nodeType": "YulIf",
															"src": "10300:37:8"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10181:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10184:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10190:4:8",
														"type": ""
													}
												],
												"src": "10150:194:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10378:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10395:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10398:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10388:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10388:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10388:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10492:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10495:4:8",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10485:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10485:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10485:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:15:8"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10350:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10578:143:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10588:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10611:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10593:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10593:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10588:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10622:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10645:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10627:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10622:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10669:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10671:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10671:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10671:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10666:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10659:9:8"
															},
															"nodeType": "YulIf",
															"src": "10656:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10701:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10710:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10713:1:8"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10706:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10701:1:8"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10567:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10570:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10576:1:8",
														"type": ""
													}
												],
												"src": "10536:185:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10771:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10781:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10804:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10786:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10786:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10781:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10815:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10838:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10820:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10815:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10849:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10860:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10863:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10856:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10856:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10849:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10889:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10891:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10891:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10891:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10881:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "10884:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10878:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10878:10:8"
															},
															"nodeType": "YulIf",
															"src": "10875:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10758:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10761:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "10767:3:8",
														"type": ""
													}
												],
												"src": "10727:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10972:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10982:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11005:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10987:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10987:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10982:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11016:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11039:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11021:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11021:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11016:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11050:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11073:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11076:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11069:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11069:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11054:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11087:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11116:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11098:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11098:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11087:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11305:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11307:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11307:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11307:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11238:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11231:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11231:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11261:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11268:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11277:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11264:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11264:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11258:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11258:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11211:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11211:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11191:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11191:113:8"
															},
															"nodeType": "YulIf",
															"src": "11188:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10955:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10958:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10964:7:8",
														"type": ""
													}
												],
												"src": "10924:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11383:190:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11393:33:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11420:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11402:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11402:24:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11393:5:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11516:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11518:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11518:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11518:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11441:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11448:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11438:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11438:77:8"
															},
															"nodeType": "YulIf",
															"src": "11435:103:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11547:20:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11558:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11554:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11554:13:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "11547:3:8"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11369:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "11379:3:8",
														"type": ""
													}
												],
												"src": "11340:233:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11685:58:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11707:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11715:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11703:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11703:14:8"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11719:16:8",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11696:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11696:40:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11696:40:8"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11677:6:8",
														"type": ""
													}
												],
												"src": "11579:164:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11895:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11905:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11971:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11976:2:8",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11912:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11912:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11905:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12077:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "11988:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11988:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11988:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12090:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12101:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12106:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12090:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11883:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11891:3:8",
														"type": ""
													}
												],
												"src": "11749:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12292:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12302:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12314:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12325:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12310:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12310:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12302:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12349:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12360:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12345:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12345:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12368:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12374:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12364:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12364:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12338:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12338:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12338:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12394:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12528:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12402:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12402:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12394:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12272:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12287:4:8",
														"type": ""
													}
												],
												"src": "12121:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12580:142:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12590:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12613:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12595:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12590:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12624:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12647:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12629:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12629:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12624:1:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12671:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12673:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12673:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12673:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12668:1:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12661:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12661:9:8"
															},
															"nodeType": "YulIf",
															"src": "12658:35:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12702:14:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12711:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12714:1:8"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "12707:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12707:9:8"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12702:1:8"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12569:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12572:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12578:1:8",
														"type": ""
													}
												],
												"src": "12546:176:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12834:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12856:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12864:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12852:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12852:14:8"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12868:34:8",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12845:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12845:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12845:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12924:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12932:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12920:15:8"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12937:8:8",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12913:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12826:6:8",
														"type": ""
													}
												],
												"src": "12728:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13105:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13115:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13181:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13186:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13122:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13122:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13115:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13287:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13198:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13198:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13198:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13300:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13311:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13316:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13307:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13307:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13300:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13093:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13101:3:8",
														"type": ""
													}
												],
												"src": "12959:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13502:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13512:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13524:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13535:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13520:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13520:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13512:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13559:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13570:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13555:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13578:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13584:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13574:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13574:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13548:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13548:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13604:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13738:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13612:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13612:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13604:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13482:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13497:4:8",
														"type": ""
													}
												],
												"src": "13331:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1092_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1092_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1092_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1092__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1092_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the adm\")\n\n        mstore(add(memPtr, 32), \"in\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101fa5760003560e01c80638107368b1161011a578063adc9772e116100ad578063d1af0c7d1161007c578063d1af0c7d146105b7578063da4f8431146105d5578063db2e21bc14610605578063df136d651461060f578063f2fde38b1461062d576101fa565b8063adc9772e1461052f578063b79ec8121461054b578063c8f33c911461057b578063cdda56e014610599576101fa565b80638da5cb5b116100e95780638da5cb5b146104b95780639499c549146104d75780639a5b17b0146104f5578063a4c3b09114610513576101fa565b80638107368b1461040d578063874c120b1461043d5780638aee81271461046d5780638b87634714610489576101fa565b80634dbdc4eb11610192578063715018a611610161578063715018a6146103a957806378e97925146103b35780637a6fcee7146103d157806380faa57d146103ef576101fa565b80634dbdc4eb1461030d5780635cfa91f41461033d5780636139d4b41461036d5780636917c5011461038b576101fa565b806324d7806c116101ce57806324d7806c146102995780633c4045cf146102c95780633d18b912146102e75780633e0a322d146102f1576101fa565b80628cc262146101ff5780630700037d1461022f5780630e15561a1461025f57806318e20ecf1461027d575b600080fd5b61021960048036038101906102149190611b72565b610649565b6040516102269190611bb8565b60405180910390f35b61024960048036038101906102449190611b72565b6107b5565b6040516102569190611bb8565b60405180910390f35b6102676107cd565b6040516102749190611bb8565b60405180910390f35b61029760048036038101906102929190611c0b565b6107d3565b005b6102b360048036038101906102ae9190611b72565b610944565b6040516102c09190611c5a565b60405180910390f35b6102d1610999565b6040516102de9190611bb8565b60405180910390f35b6102ef61099f565b005b61030b60048036038101906103069190611ca1565b610d04565b005b61032760048036038101906103229190611ca1565b610d5d565b6040516103349190611bb8565b60405180910390f35b61035760048036038101906103529190611ca1565b610df4565b6040516103649190611bb8565b60405180910390f35b610375610ea5565b6040516103829190611bb8565b60405180910390f35b610393610eab565b6040516103a09190611bb8565b60405180910390f35b6103b1610eb5565b005b6103bb610f3d565b6040516103c89190611bb8565b60405180910390f35b6103d9610f43565b6040516103e69190611bb8565b60405180910390f35b6103f7610f49565b6040516104049190611bb8565b60405180910390f35b61042760048036038101906104229190611b72565b610f51565b6040516104349190611bb8565b60405180910390f35b61045760048036038101906104529190611ca1565b610f69565b6040516104649190611bb8565b60405180910390f35b61048760048036038101906104829190611b72565b610ff6565b005b6104a3600480360381019061049e9190611b72565b6110b6565b6040516104b09190611bb8565b60405180910390f35b6104c16110ce565b6040516104ce9190611cdd565b60405180910390f35b6104df6110f8565b6040516104ec9190611bb8565b60405180910390f35b6104fd611108565b60405161050a9190611bb8565b60405180910390f35b61052d60048036038101906105289190611cf8565b611110565b005b61054960048036038101906105449190611cf8565b61120f565b005b61056560048036038101906105609190611b72565b611583565b6040516105729190611bb8565b60405180910390f35b6105836115cc565b6040516105909190611bb8565b60405180910390f35b6105a16115d2565b6040516105ae9190611bb8565b60405180910390f35b6105bf6115e2565b6040516105cc9190611d97565b60405180910390f35b6105ef60048036038101906105ea9190611db2565b611608565b6040516105fc9190611bb8565b60405180910390f35b61060d6117ef565b005b6106176118bb565b6040516106249190611bb8565b60405180910390f35b61064760048036038101906106429190611b72565b6118c1565b005b600080610695600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205442611608565b90506107ad600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461079f670de0b6b3a7640000610791610743600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461073588610f69565b6119b890919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119ce90919063ffffffff16565b6119e490919063ffffffff16565b6119fa90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b6107db611a10565b73ffffffffffffffffffffffffffffffffffffffff166107f96110ce565b73ffffffffffffffffffffffffffffffffffffffff161461084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084690611e75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516108e2929190611e95565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b60028054036109e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109da90611f0a565b60405180910390fd5b60028081905550336000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610a3e5760065490505b6000610a4a8242611608565b9050610a5581610f69565b600b81905550610a63610f49565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610b7457610aa683610649565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610cf6576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c63929190611f2a565b6020604051808303816000875af1158015610c82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca69190611f68565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610ced9190611bb8565b60405180910390a25b505050506001600281905550565b610d14610d0f611a10565b610944565b610d53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4a90612007565b60405180910390fd5b8060068190555050565b60008060065403610d72576006549050610def565b6000600160075460065485610d879190612056565b610d9191906120b9565b610d9b91906120ea565b90506000600554905060005b82811015610de85760095460085483610dc0919061211e565b610dca91906120b9565b82610dd59190612056565b915080610de190612160565b9050610da7565b5080925050505b919050565b60008060065403610e09576005549050610ea0565b6000600160075460065485610e1e9190612056565b610e2891906120b9565b610e3291906120ea565b90506000600554905060005b82811015610e7f5760095460085483610e57919061211e565b610e6191906120b9565b82610e6c9190612056565b915080610e7890612160565b9050610e3e565b5060095460085482610e91919061211e565b610e9b91906120b9565b925050505b919050565b60075481565b6000600e54905090565b610ebd611a10565b73ffffffffffffffffffffffffffffffffffffffff16610edb6110ce565b73ffffffffffffffffffffffffffffffffffffffff1614610f31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2890611e75565b60405180910390fd5b610f3b6000611a18565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e5403610f7e57600b549050610ff1565b610fee610fdd600e54610fcf670de0b6b3a7640000610fc187610fb3600a54610fa5610f49565b6119b890919063ffffffff16565b6119ce90919063ffffffff16565b6119ce90919063ffffffff16565b6119e490919063ffffffff16565b600b546119fa90919063ffffffff16565b90505b919050565b610ffe611a10565b73ffffffffffffffffffffffffffffffffffffffff1661101c6110ce565b73ffffffffffffffffffffffffffffffffffffffff1614611072576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106990611e75565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061110342610df4565b905090565b600042905090565b611118611a10565b73ffffffffffffffffffffffffffffffffffffffff166111366110ce565b73ffffffffffffffffffffffffffffffffffffffff161461118c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118390611e75565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016111c7929190611f2a565b6020604051808303816000875af11580156111e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120a9190611f68565b505050565b6002805403611253576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124a90611f0a565b60405180910390fd5b6002808190555061126a611265611a10565b610944565b6112a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a090612007565b60405180910390fd5b816000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116112fd5760065490505b60006113098242611608565b905061131481610f69565b600b81905550611322610f49565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146114335761136583610649565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411611476576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146d906121f4565b60405180910390fd5b61148b84600e546119fa90919063ffffffff16565b600e819055506114e384600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546119fa90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161156c9190611bb8565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b60006115dd42611ade565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600654148061161a5750818310155b806116255750600083145b1561163357600090506117e9565b6006548310156116435760065492505b6000600754600754600654866116599190612056565b6116639190612214565b6007546116709190612056565b61167a9190612214565b905060006007548261168b87610df4565b611695919061211e565b61169f91906120b9565b90506000600754600654866116b49190612056565b6116be9190612214565b90506000600754826116cf88610df4565b6116d9919061211e565b6116e391906120b9565b90508584886116f291906120ea565b111561170c5761170187611ade565b9450505050506117e9565b60008488848961171c9190612056565b6117269190612056565b6117309190612056565b9050600061173d89610d5d565b9050600080600083905060006007548661175791906120b9565b905060005b818110156117ae5760095460085484611775919061211e565b61177f91906120b9565b9350838361178d9190612056565b9250838561179b91906120ea565b9450806117a790612160565b905061175c565b508c8c6117bb9190612056565b878a866117c891906120ea565b6117d291906120ea565b6117dc91906120b9565b9a50505050505050505050505b92915050565b6117f7611a10565b73ffffffffffffffffffffffffffffffffffffffff166118156110ce565b73ffffffffffffffffffffffffffffffffffffffff161461186b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161186290611e75565b60405180910390fd5b6118736110ce565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156118b8573d6000803e3d6000fd5b50565b600b5481565b6118c9611a10565b73ffffffffffffffffffffffffffffffffffffffff166118e76110ce565b73ffffffffffffffffffffffffffffffffffffffff161461193d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193490611e75565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036119ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a3906122b7565b60405180910390fd5b6119b581611a18565b50565b600081836119c69190612056565b905092915050565b600081836119dc919061211e565b905092915050565b600081836119f291906120b9565b905092915050565b60008183611a0891906120ea565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611aea83610df4565b90506000611b03600754836119e490919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b3f82611b14565b9050919050565b611b4f81611b34565b8114611b5a57600080fd5b50565b600081359050611b6c81611b46565b92915050565b600060208284031215611b8857611b87611b0f565b5b6000611b9684828501611b5d565b91505092915050565b6000819050919050565b611bb281611b9f565b82525050565b6000602082019050611bcd6000830184611ba9565b92915050565b60008115159050919050565b611be881611bd3565b8114611bf357600080fd5b50565b600081359050611c0581611bdf565b92915050565b60008060408385031215611c2257611c21611b0f565b5b6000611c3085828601611b5d565b9250506020611c4185828601611bf6565b9150509250929050565b611c5481611bd3565b82525050565b6000602082019050611c6f6000830184611c4b565b92915050565b611c7e81611b9f565b8114611c8957600080fd5b50565b600081359050611c9b81611c75565b92915050565b600060208284031215611cb757611cb6611b0f565b5b6000611cc584828501611c8c565b91505092915050565b611cd781611b34565b82525050565b6000602082019050611cf26000830184611cce565b92915050565b60008060408385031215611d0f57611d0e611b0f565b5b6000611d1d85828601611b5d565b9250506020611d2e85828601611c8c565b9150509250929050565b6000819050919050565b6000611d5d611d58611d5384611b14565b611d38565b611b14565b9050919050565b6000611d6f82611d42565b9050919050565b6000611d8182611d64565b9050919050565b611d9181611d76565b82525050565b6000602082019050611dac6000830184611d88565b92915050565b60008060408385031215611dc957611dc8611b0f565b5b6000611dd785828601611c8c565b9250506020611de885828601611c8c565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e5f602283611df2565b9150611e6a82611e03565b604082019050919050565b60006020820190508181036000830152611e8e81611e52565b9050919050565b6000604082019050611eaa6000830185611c4b565b611eb76020830184611c4b565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611ef4601f83611df2565b9150611eff82611ebe565b602082019050919050565b60006020820190508181036000830152611f2381611ee7565b9050919050565b6000604082019050611f3f6000830185611cce565b611f4c6020830184611ba9565b9392505050565b600081519050611f6281611bdf565b92915050565b600060208284031215611f7e57611f7d611b0f565b5b6000611f8c84828501611f53565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611ff1602283611df2565b9150611ffc82611f95565b604082019050919050565b6000602082019050818103600083015261202081611fe4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206182611b9f565b915061206c83611b9f565b925082820390508181111561208457612083612027565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006120c482611b9f565b91506120cf83611b9f565b9250826120df576120de61208a565b5b828204905092915050565b60006120f582611b9f565b915061210083611b9f565b925082820190508082111561211857612117612027565b5b92915050565b600061212982611b9f565b915061213483611b9f565b925082820261214281611b9f565b9150828204841483151761215957612158612027565b5b5092915050565b600061216b82611b9f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361219d5761219c612027565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b60006121de600e83611df2565b91506121e9826121a8565b602082019050919050565b6000602082019050818103600083015261220d816121d1565b9050919050565b600061221f82611b9f565b915061222a83611b9f565b92508261223a5761223961208a565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006122a1602683611df2565b91506122ac82612245565b604082019050919050565b600060208201905081810360008301526122d081612294565b905091905056fea2646970667358221220f1e30a9344357949a61ad4dbb9b5455e72ac79e8d72208c3a55b8214e2fd706464736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x605 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x60F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x62D JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x54B JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x599 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x513 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x40D JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x43D JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x489 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB GT PUSH2 0x192 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x161 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3A9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3B3 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3D1 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x3EF JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x38B JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH4 0x24D7806C GT PUSH2 0x1CE JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x2F1 JUMPI PUSH2 0x1FA JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1FF JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x27D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x219 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x214 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x7B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x267 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x1C5A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D1 PUSH2 0x999 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH2 0x99F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xD04 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x322 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x357 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x364 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH2 0xEA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x393 PUSH2 0xEAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B1 PUSH2 0xEB5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BB PUSH2 0xF3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C8 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D9 PUSH2 0xF43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E6 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F7 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x404 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x427 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x422 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0xF51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x434 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x457 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0xF69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x464 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x487 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x482 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0xFF6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49E SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x10B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B0 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C1 PUSH2 0x10CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4CE SWAP2 SWAP1 PUSH2 0x1CDD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DF PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4EC SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH2 0x1108 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x1110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x549 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x544 SWAP2 SWAP1 PUSH2 0x1CF8 JUMP JUMPDEST PUSH2 0x120F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x565 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x560 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1583 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x583 PUSH2 0x15CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x590 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5AE SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5BF PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CC SWAP2 SWAP1 PUSH2 0x1D97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5EA SWAP2 SWAP1 PUSH2 0x1DB2 JUMP JUMPDEST PUSH2 0x1608 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FC SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60D PUSH2 0x17EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x617 PUSH2 0x18BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x647 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x642 SWAP2 SWAP1 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x18C1 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x695 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0x7AD PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x79F PUSH8 0xDE0B6B3A7640000 PUSH2 0x791 PUSH2 0x743 PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x735 DUP9 PUSH2 0xF69 JUMP JUMPDEST PUSH2 0x19B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7DB PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F9 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x84F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x846 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E2 SWAP3 SWAP2 SWAP1 PUSH2 0x1E95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x9E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9DA SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xA3E JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xA4A DUP3 TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0xA55 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xA63 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB74 JUMPI PUSH2 0xAA6 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xCF6 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC63 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCA6 SWAP2 SWAP1 PUSH2 0x1F68 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD14 PUSH2 0xD0F PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0xD53 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD4A SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xD72 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xDEF JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xD87 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xD91 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xD9B SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xDE8 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xDC0 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST DUP3 PUSH2 0xDD5 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xDE1 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE09 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE1E SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0xE28 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST PUSH2 0xE32 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xE7F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE57 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xE61 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST DUP3 PUSH2 0xE6C SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE78 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0xE3E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xE91 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEBD PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEDB PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF31 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF28 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF3B PUSH1 0x0 PUSH2 0x1A18 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0xF7E JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0xFF1 JUMP JUMPDEST PUSH2 0xFEE PUSH2 0xFDD PUSH1 0xE SLOAD PUSH2 0xFCF PUSH8 0xDE0B6B3A7640000 PUSH2 0xFC1 DUP8 PUSH2 0xFB3 PUSH1 0xA SLOAD PUSH2 0xFA5 PUSH2 0xF49 JUMP JUMPDEST PUSH2 0x19B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19CE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFFE PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x101C PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1072 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1069 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1103 TIMESTAMP PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1118 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1136 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x118C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1183 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C7 SWAP3 SWAP2 SWAP1 PUSH2 0x1F2A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x1F68 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124A SWAP1 PUSH2 0x1F0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x126A PUSH2 0x1265 PUSH2 0x1A10 JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH2 0x12A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A0 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x12FD JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1309 DUP3 TIMESTAMP PUSH2 0x1608 JUMP JUMPDEST SWAP1 POP PUSH2 0x1314 DUP2 PUSH2 0xF69 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x1322 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1433 JUMPI PUSH2 0x1365 DUP4 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1476 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x146D SWAP1 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x148B DUP5 PUSH1 0xE SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x14E3 DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x19FA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x156C SWAP2 SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15DD TIMESTAMP PUSH2 0x1ADE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x161A JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x1625 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1633 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x1643 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1659 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1663 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1670 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x167A SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x168B DUP8 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x1695 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x169F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x16B4 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x16BE SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x16CF DUP9 PUSH2 0xDF4 JUMP JUMPDEST PUSH2 0x16D9 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x16E3 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x16F2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST GT ISZERO PUSH2 0x170C JUMPI PUSH2 0x1701 DUP8 PUSH2 0x1ADE JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x17E9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x171C SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1726 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST PUSH2 0x1730 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x173D DUP10 PUSH2 0xD5D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1757 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x17AE JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1775 SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x178D SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x179B SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x17A7 SWAP1 PUSH2 0x2160 JUMP JUMPDEST SWAP1 POP PUSH2 0x175C JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x17BB SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x17C8 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x17D2 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17F7 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1815 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x186B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1862 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1873 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x18B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x18C9 PUSH2 0x1A10 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E7 PUSH2 0x10CE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x193D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1934 SWAP1 PUSH2 0x1E75 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A3 SWAP1 PUSH2 0x22B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B5 DUP2 PUSH2 0x1A18 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19C6 SWAP2 SWAP1 PUSH2 0x2056 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19DC SWAP2 SWAP1 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x19F2 SWAP2 SWAP1 PUSH2 0x20B9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A08 SWAP2 SWAP1 PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1AEA DUP4 PUSH2 0xDF4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B03 PUSH1 0x7 SLOAD DUP4 PUSH2 0x19E4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B3F DUP3 PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B4F DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B6C DUP2 PUSH2 0x1B46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B88 JUMPI PUSH2 0x1B87 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B96 DUP5 DUP3 DUP6 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BB2 DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BCD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BE8 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C05 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C22 JUMPI PUSH2 0x1C21 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C30 DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C41 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C54 DUP2 PUSH2 0x1BD3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C6F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7E DUP2 PUSH2 0x1B9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C9B DUP2 PUSH2 0x1C75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CB7 JUMPI PUSH2 0x1CB6 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CC5 DUP5 DUP3 DUP6 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CD7 DUP2 PUSH2 0x1B34 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0F JUMPI PUSH2 0x1D0E PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D1D DUP6 DUP3 DUP7 ADD PUSH2 0x1B5D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D2E DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5D PUSH2 0x1D58 PUSH2 0x1D53 DUP5 PUSH2 0x1B14 JUMP JUMPDEST PUSH2 0x1D38 JUMP JUMPDEST PUSH2 0x1B14 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6F DUP3 PUSH2 0x1D42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D81 DUP3 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D91 DUP2 PUSH2 0x1D76 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DC9 JUMPI PUSH2 0x1DC8 PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DD7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DE8 DUP6 DUP3 DUP7 ADD PUSH2 0x1C8C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E5F PUSH1 0x22 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E6A DUP3 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E8E DUP2 PUSH2 0x1E52 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EAA PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1C4B JUMP JUMPDEST PUSH2 0x1EB7 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C4B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EF4 PUSH1 0x1F DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EFF DUP3 PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F23 DUP2 PUSH2 0x1EE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F3F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1CCE JUMP JUMPDEST PUSH2 0x1F4C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1BA9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F62 DUP2 PUSH2 0x1BDF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F7E JUMPI PUSH2 0x1F7D PUSH2 0x1B0F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F8C DUP5 DUP3 DUP6 ADD PUSH2 0x1F53 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF1 PUSH1 0x22 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFC DUP3 PUSH2 0x1F95 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2020 DUP2 PUSH2 0x1FE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2061 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x206C DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2084 JUMPI PUSH2 0x2083 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x20C4 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x20CF DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x20DF JUMPI PUSH2 0x20DE PUSH2 0x208A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20F5 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2100 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2118 JUMPI PUSH2 0x2117 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2129 DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2134 DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2142 DUP2 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2159 JUMPI PUSH2 0x2158 PUSH2 0x2027 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x219D JUMPI PUSH2 0x219C PUSH2 0x2027 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21DE PUSH1 0xE DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E9 DUP3 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x220D DUP2 PUSH2 0x21D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x221F DUP3 PUSH2 0x1B9F JUMP JUMPDEST SWAP2 POP PUSH2 0x222A DUP4 PUSH2 0x1B9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x223A JUMPI PUSH2 0x2239 PUSH2 0x208A JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22A1 PUSH1 0x26 DUP4 PUSH2 0x1DF2 JUMP JUMPDEST SWAP2 POP PUSH2 0x22AC DUP3 PUSH2 0x2245 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22D0 DUP2 PUSH2 0x2294 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xE3 EXP SWAP4 DIFFICULTY CALLDATALOAD PUSH26 0x49A61AD4DBB9B5455E72AC79E8D72208C3A55B8214E2FD706464 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "371:6895:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4407:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:40:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6445:305;;;:::i;:::-;;1682:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3157:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2224:499;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1780:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:103:0;;;:::i;:::-;;605:24:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;730:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3936:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4051:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6758:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;862:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2102:114:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1881:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7120:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6139:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1983:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3581:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4746:1383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6997:115;;;:::i;:::-;;818:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:201:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4407:296:1;4461:7;4481:12;4496:68;4519:18;:27;4538:7;4519:27;;;;;;;;;;;;;;;;4548:15;4496:22;:68::i;:::-;4481:83;;4582:113;4678:7;:16;4686:7;4678:16;;;;;;;;;;;;;;;;4582:91;4668:4;4582:81;4605:57;4630:22;:31;4653:7;4630:31;;;;;;;;;;;;;;;;4605:20;4620:4;4605:14;:20::i;:::-;:24;;:57;;;;:::i;:::-;4582:9;:18;4592:7;4582:18;;;;;;;;;;;;;;;;:22;;:81;;;;:::i;:::-;:85;;:91;;;;:::i;:::-;:95;;:113;;;;:::i;:::-;4575:120;;;4407:296;;;:::o;500:42::-;;;;;;;;;;;;;;;;;:::o;551:47::-;;;;:::o;1642:184:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:5:::1;1737:48;;;1763:7;:14:::0;1771:5:::1;1763:14;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;1737:48;;;;;;;:::i;:::-;;;;;;;;1813:5;1796:7;:14:::0;1804:5:::1;1796:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1642:184:::0;;:::o;1004:111::-;1067:4;1091:7;:16;1099:7;1091:16;;;;;;;;;;;;;;;;;;;;;;;;;1084:23;;1004:111;;;:::o;683:40:1:-;;;;:::o;6445:305::-;1744:1:3;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;6501:10:1::1;1131:12;1146:18;:27;1165:7;1146:27;;;;;;;;;;;;;;;;1131:42;;1195:9;;1187:4;:17;1184:65;;1228:9;;1221:16;;1184:65;1259:12;1274:45;1297:4;1303:15;1274:22;:45::i;:::-;1259:60;;1353:20;1368:4;1353:14;:20::i;:::-;1330;:43;;;;1401:26;:24;:26::i;:::-;1384:14;:43;;;;1461:1;1442:21;;:7;:21;;;1438:217;;1499:15;1506:7;1499:6;:15::i;:::-;1480:7;:16;1488:7;1480:16;;;;;;;;;;;;;;;:34;;;;1563:20;;1529:22;:31;1552:7;1529:31;;;;;;;;;;;;;;;:54;;;;1628:15;1598:18;:27;1617:7;1598:27;;;;;;;;;;;;;;;:45;;;;1438:217;6524:14:::2;6541:7;:19;6549:10;6541:19;;;;;;;;;;;;;;;;6524:36;;6584:1;6575:6;:10;6571:172;;;6624:1;6602:7;:19;6610:10;6602:19;;;;;;;;;;;;;;;:23;;;;6640:12;;;;;;;;;;;:21;;;6662:10;6674:6;6640:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6712:10;6701:30;;;6724:6;6701:30;;;;;;:::i;:::-;;;;;;;;6571:172;6513:237;1120:554:::1;;2484:1:3;1701::::0;2628:7;:22;;;;6445:305:1:o;1682:90::-;821:21:0;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1760:4:1::1;1748:9;:16;;;;1682:90:::0;:::o;3157:416::-;3215:7;3251:1;3238:9;;:14;3235:62;;3276:9;;3269:16;;;;3235:62;3307:13;3359:1;3344:12;;3331:9;;3324:4;:16;;;;:::i;:::-;3323:33;;;;:::i;:::-;:37;;;;:::i;:::-;3307:53;;3371:13;3387:12;;3371:28;;3414:9;3410:133;3433:5;3429:1;:9;3410:133;;;3508:23;;3484:21;;3476:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;3468:5;:63;;;;:::i;:::-;3460:71;;3440:3;;;;:::i;:::-;;;3410:133;;;;3560:5;3553:12;;;;3157:416;;;;:::o;2224:499::-;2282:7;2318:1;2305:9;;:14;2302:65;;2343:12;;2336:19;;;;2302:65;2377:13;2429:1;2414:12;;2401:9;;2394:4;:16;;;;:::i;:::-;2393:33;;;;:::i;:::-;:37;;;;:::i;:::-;2377:53;;2441:13;2457:12;;2441:28;;2484:9;2480:133;2503:5;2499:1;:9;2480:133;;;2578:23;;2554:21;;2546:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2538:5;:63;;;;:::i;:::-;2530:71;;2510:3;;;;:::i;:::-;;;2480:133;;;;2692:23;;2668:21;;2660:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2653:62;;;;2224:499;;;;:::o;636:40::-;;;;:::o;1780:93::-;1826:7;1853:12;;1846:19;;1780:93;:::o;1123:103:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;605:24:1:-;;;;:::o;730:45::-;;;;:::o;3936:107::-;3993:7;4020:15;4013:22;;3936:107;:::o;926:53::-;;;;;;;;;;;;;;;;;:::o;4051:348::-;4116:7;4156:1;4140:12;;:17;4136:77;;4181:20;;4174:27;;;;4136:77;4243:148;4286:90;4363:12;;4286:72;4353:4;4286:62;4337:10;4286:46;4317:14;;4286:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;4243:20;;:24;;:148;;;;:::i;:::-;4223:168;;4051:348;;;;:::o;6758:105::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6849:5:1::1;6827:12;;:28;;;;;;;;;;;;;;;;;;6758:105:::0;:::o;862:57::-;;;;;;;;;;;;;;;;;:::o;909:87:0:-;955:7;982:6;;;;;;;;;;;975:13;;909:87;:::o;2102:114:1:-;2151:7;2178:30;2192:15;2178:13;:30::i;:::-;2171:37;;2102:114;:::o;1881:94::-;1925:7;1952:15;1945:22;;1881:94;:::o;7120:143::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7220:5:1::1;7213:22;;;7236:10;7248:6;7213:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7120:143:::0;;:::o;6139:294::-;1744:1:3;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;821:21:0::1;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6229:4:1::2;1131:12;1146:18;:27;1165:7;1146:27;;;;;;;;;;;;;;;;1131:42;;1195:9;;1187:4;:17;1184:65;;1228:9;;1221:16;;1184:65;1259:12;1274:45;1297:4;1303:15;1274:22;:45::i;:::-;1259:60;;1353:20;1368:4;1353:14;:20::i;:::-;1330;:43;;;;1401:26;:24;:26::i;:::-;1384:14;:43;;;;1461:1;1442:21;;:7;:21;;;1438:217;;1499:15;1506:7;1499:6;:15::i;:::-;1480:7;:16;1488:7;1480:16;;;;;;;;;;;;;;;:34;;;;1563:20;;1529:22;:31;1552:7;1529:31;;;;;;;;;;;;;;;:54;;;;1628:15;1598:18;:27;1617:7;1598:27;;;;;;;;;;;;;;;:45;;;;1438:217;6263:1:::3;6254:6;:10;6246:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;6309:24;6326:6;6309:12;;:16;;:24;;;;:::i;:::-;6294:12;:39;;;;6362:27;6382:6;6362:9;:15;6372:4;6362:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;6344:9;:15;6354:4;6344:15;;;;;;;;;;;;;;;:45;;;;6412:4;6405:20;;;6418:6;6405:20;;;;;;:::i;:::-;;;;;;;;1120:554:::2;;892:1:0;1701::3::0;2628:7;:22;;;;6139:294:1;;:::o;1983:111::-;2041:7;2068:9;:18;2078:7;2068:18;;;;;;;;;;;;;;;;2061:25;;1983:111;;;:::o;782:29::-;;;;:::o;3581:115::-;3630:7;3657:31;3672:15;3657:14;:31::i;:::-;3650:38;;3581:115;:::o;467:26::-;;;;;;;;;;;;;:::o;4746:1383::-;4836:7;4881:1;4868:9;;:14;:39;;;;4898:9;4886:8;:21;;4868:39;:56;;;;4923:1;4911:8;:13;4868:56;4865:96;;;4948:1;4941:8;;;;4865:96;4987:9;;4976:8;:20;4973:72;;;5024:9;;5013:20;;4973:72;5057:20;5137:12;;5121;;5108:9;;5097:8;:20;;;;:::i;:::-;5096:37;;;;:::i;:::-;5081:12;;:52;;;;:::i;:::-;5080:69;;;;:::i;:::-;5057:92;;5160:18;5222:12;;5207;5181:23;5195:8;5181:13;:23::i;:::-;:38;;;;:::i;:::-;:53;;;;:::i;:::-;5160:74;;5247:21;5297:12;;5284:9;;5272;:21;;;;:::i;:::-;5271:38;;;;:::i;:::-;5247:62;;5320:19;5385:12;;5369:13;5342:24;5356:9;5342:13;:24::i;:::-;:40;;;;:::i;:::-;:55;;;;:::i;:::-;5320:77;;5439:9;5424:12;5413:8;:23;;;;:::i;:::-;:35;5410:98;;;5472:24;5487:8;5472:14;:24::i;:::-;5465:31;;;;;;;;5410:98;5520:19;5581:12;5570:8;5554:13;5542:9;:25;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;5520:73;;5604:19;5626:23;5640:8;5626:13;:23::i;:::-;5604:45;;5661:22;5698:18;5731:13;5747:11;5731:27;;5769:13;5799:12;;5785:11;:26;;;;:::i;:::-;5769:42;;5826:9;5822:214;5845:5;5841:1;:9;5822:214;;;5917:23;;5893:21;;5885:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;5872:68;;5971:10;5963:5;:18;;;;:::i;:::-;5955:26;;6014:10;5996:28;;;;;:::i;:::-;;;5852:3;;;;:::i;:::-;;;5822:214;;;;6112:8;6100:9;:20;;;;:::i;:::-;6084:11;6071:10;6054:14;:27;;;;:::i;:::-;:41;;;;:::i;:::-;6053:68;;;;:::i;:::-;6046:75;;;;;;;;;;;;4746:1383;;;;;:::o;6997:115::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7064:7:1::1;:5;:7::i;:::-;7056:25;;:48;7082:21;7056:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;6997:115::o:0;818:35::-;;;;:::o;1234:201:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:1:::1;1323:22;;:8;:22;;::::0;1315:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3108:96:7:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;63:98:0:-;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;3704:222:1:-;3764:7;3784:21;3808:19;3822:4;3808:13;:19::i;:::-;3784:43;;3838:18;3859:31;3877:12;;3859:13;:17;;:31;;;;:::i;:::-;3838:52;;3908:10;3901:17;;;;3704:222;;;:::o;88:117:8:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:116::-;1777:21;1792:5;1777:21;:::i;:::-;1770:5;1767:32;1757:60;;1813:1;1810;1803:12;1757:60;1707:116;:::o;1829:133::-;1872:5;1910:6;1897:20;1888:29;;1926:30;1950:5;1926:30;:::i;:::-;1829:133;;;;:::o;1968:468::-;2033:6;2041;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:53;2286:7;2277:6;2266:9;2262:22;2241:53;:::i;:::-;2231:63;;2187:117;2343:2;2369:50;2411:7;2402:6;2391:9;2387:22;2369:50;:::i;:::-;2359:60;;2314:115;1968:468;;;;;:::o;2442:109::-;2523:21;2538:5;2523:21;:::i;:::-;2518:3;2511:34;2442:109;;:::o;2557:210::-;2644:4;2682:2;2671:9;2667:18;2659:26;;2695:65;2757:1;2746:9;2742:17;2733:6;2695:65;:::i;:::-;2557:210;;;;:::o;2773:122::-;2846:24;2864:5;2846:24;:::i;:::-;2839:5;2836:35;2826:63;;2885:1;2882;2875:12;2826:63;2773:122;:::o;2901:139::-;2947:5;2985:6;2972:20;2963:29;;3001:33;3028:5;3001:33;:::i;:::-;2901:139;;;;:::o;3046:329::-;3105:6;3154:2;3142:9;3133:7;3129:23;3125:32;3122:119;;;3160:79;;:::i;:::-;3122:119;3280:1;3305:53;3350:7;3341:6;3330:9;3326:22;3305:53;:::i;:::-;3295:63;;3251:117;3046:329;;;;:::o;3381:118::-;3468:24;3486:5;3468:24;:::i;:::-;3463:3;3456:37;3381:118;;:::o;3505:222::-;3598:4;3636:2;3625:9;3621:18;3613:26;;3649:71;3717:1;3706:9;3702:17;3693:6;3649:71;:::i;:::-;3505:222;;;;:::o;3733:474::-;3801:6;3809;3858:2;3846:9;3837:7;3833:23;3829:32;3826:119;;;3864:79;;:::i;:::-;3826:119;3984:1;4009:53;4054:7;4045:6;4034:9;4030:22;4009:53;:::i;:::-;3999:63;;3955:117;4111:2;4137:53;4182:7;4173:6;4162:9;4158:22;4137:53;:::i;:::-;4127:63;;4082:118;3733:474;;;;;:::o;4213:60::-;4241:3;4262:5;4255:12;;4213:60;;;:::o;4279:142::-;4329:9;4362:53;4380:34;4389:24;4407:5;4389:24;:::i;:::-;4380:34;:::i;:::-;4362:53;:::i;:::-;4349:66;;4279:142;;;:::o;4427:126::-;4477:9;4510:37;4541:5;4510:37;:::i;:::-;4497:50;;4427:126;;;:::o;4559:141::-;4624:9;4657:37;4688:5;4657:37;:::i;:::-;4644:50;;4559:141;;;:::o;4706:161::-;4808:52;4854:5;4808:52;:::i;:::-;4803:3;4796:65;4706:161;;:::o;4873:252::-;4981:4;5019:2;5008:9;5004:18;4996:26;;5032:86;5115:1;5104:9;5100:17;5091:6;5032:86;:::i;:::-;4873:252;;;;:::o;5131:474::-;5199:6;5207;5256:2;5244:9;5235:7;5231:23;5227:32;5224:119;;;5262:79;;:::i;:::-;5224:119;5382:1;5407:53;5452:7;5443:6;5432:9;5428:22;5407:53;:::i;:::-;5397:63;;5353:117;5509:2;5535:53;5580:7;5571:6;5560:9;5556:22;5535:53;:::i;:::-;5525:63;;5480:118;5131:474;;;;;:::o;5611:169::-;5695:11;5729:6;5724:3;5717:19;5769:4;5764:3;5760:14;5745:29;;5611:169;;;;:::o;5786:221::-;5926:34;5922:1;5914:6;5910:14;5903:58;5995:4;5990:2;5982:6;5978:15;5971:29;5786:221;:::o;6013:366::-;6155:3;6176:67;6240:2;6235:3;6176:67;:::i;:::-;6169:74;;6252:93;6341:3;6252:93;:::i;:::-;6370:2;6365:3;6361:12;6354:19;;6013:366;;;:::o;6385:419::-;6551:4;6589:2;6578:9;6574:18;6566:26;;6638:9;6632:4;6628:20;6624:1;6613:9;6609:17;6602:47;6666:131;6792:4;6666:131;:::i;:::-;6658:139;;6385:419;;;:::o;6810:308::-;6919:4;6957:2;6946:9;6942:18;6934:26;;6970:65;7032:1;7021:9;7017:17;7008:6;6970:65;:::i;:::-;7045:66;7107:2;7096:9;7092:18;7083:6;7045:66;:::i;:::-;6810:308;;;;;:::o;7124:181::-;7264:33;7260:1;7252:6;7248:14;7241:57;7124:181;:::o;7311:366::-;7453:3;7474:67;7538:2;7533:3;7474:67;:::i;:::-;7467:74;;7550:93;7639:3;7550:93;:::i;:::-;7668:2;7663:3;7659:12;7652:19;;7311:366;;;:::o;7683:419::-;7849:4;7887:2;7876:9;7872:18;7864:26;;7936:9;7930:4;7926:20;7922:1;7911:9;7907:17;7900:47;7964:131;8090:4;7964:131;:::i;:::-;7956:139;;7683:419;;;:::o;8108:332::-;8229:4;8267:2;8256:9;8252:18;8244:26;;8280:71;8348:1;8337:9;8333:17;8324:6;8280:71;:::i;:::-;8361:72;8429:2;8418:9;8414:18;8405:6;8361:72;:::i;:::-;8108:332;;;;;:::o;8446:137::-;8500:5;8531:6;8525:13;8516:22;;8547:30;8571:5;8547:30;:::i;:::-;8446:137;;;;:::o;8589:345::-;8656:6;8705:2;8693:9;8684:7;8680:23;8676:32;8673:119;;;8711:79;;:::i;:::-;8673:119;8831:1;8856:61;8909:7;8900:6;8889:9;8885:22;8856:61;:::i;:::-;8846:71;;8802:125;8589:345;;;;:::o;8940:221::-;9080:34;9076:1;9068:6;9064:14;9057:58;9149:4;9144:2;9136:6;9132:15;9125:29;8940:221;:::o;9167:366::-;9309:3;9330:67;9394:2;9389:3;9330:67;:::i;:::-;9323:74;;9406:93;9495:3;9406:93;:::i;:::-;9524:2;9519:3;9515:12;9508:19;;9167:366;;;:::o;9539:419::-;9705:4;9743:2;9732:9;9728:18;9720:26;;9792:9;9786:4;9782:20;9778:1;9767:9;9763:17;9756:47;9820:131;9946:4;9820:131;:::i;:::-;9812:139;;9539:419;;;:::o;9964:180::-;10012:77;10009:1;10002:88;10109:4;10106:1;10099:15;10133:4;10130:1;10123:15;10150:194;10190:4;10210:20;10228:1;10210:20;:::i;:::-;10205:25;;10244:20;10262:1;10244:20;:::i;:::-;10239:25;;10288:1;10285;10281:9;10273:17;;10312:1;10306:4;10303:11;10300:37;;;10317:18;;:::i;:::-;10300:37;10150:194;;;;:::o;10350:180::-;10398:77;10395:1;10388:88;10495:4;10492:1;10485:15;10519:4;10516:1;10509:15;10536:185;10576:1;10593:20;10611:1;10593:20;:::i;:::-;10588:25;;10627:20;10645:1;10627:20;:::i;:::-;10622:25;;10666:1;10656:35;;10671:18;;:::i;:::-;10656:35;10713:1;10710;10706:9;10701:14;;10536:185;;;;:::o;10727:191::-;10767:3;10786:20;10804:1;10786:20;:::i;:::-;10781:25;;10820:20;10838:1;10820:20;:::i;:::-;10815:25;;10863:1;10860;10856:9;10849:16;;10884:3;10881:1;10878:10;10875:36;;;10891:18;;:::i;:::-;10875:36;10727:191;;;;:::o;10924:410::-;10964:7;10987:20;11005:1;10987:20;:::i;:::-;10982:25;;11021:20;11039:1;11021:20;:::i;:::-;11016:25;;11076:1;11073;11069:9;11098:30;11116:11;11098:30;:::i;:::-;11087:41;;11277:1;11268:7;11264:15;11261:1;11258:22;11238:1;11231:9;11211:83;11188:139;;11307:18;;:::i;:::-;11188:139;10972:362;10924:410;;;;:::o;11340:233::-;11379:3;11402:24;11420:5;11402:24;:::i;:::-;11393:33;;11448:66;11441:5;11438:77;11435:103;;11518:18;;:::i;:::-;11435:103;11565:1;11558:5;11554:13;11547:20;;11340:233;;;:::o;11579:164::-;11719:16;11715:1;11707:6;11703:14;11696:40;11579:164;:::o;11749:366::-;11891:3;11912:67;11976:2;11971:3;11912:67;:::i;:::-;11905:74;;11988:93;12077:3;11988:93;:::i;:::-;12106:2;12101:3;12097:12;12090:19;;11749:366;;;:::o;12121:419::-;12287:4;12325:2;12314:9;12310:18;12302:26;;12374:9;12368:4;12364:20;12360:1;12349:9;12345:17;12338:47;12402:131;12528:4;12402:131;:::i;:::-;12394:139;;12121:419;;;:::o;12546:176::-;12578:1;12595:20;12613:1;12595:20;:::i;:::-;12590:25;;12629:20;12647:1;12629:20;:::i;:::-;12624:25;;12668:1;12658:35;;12673:18;;:::i;:::-;12658:35;12714:1;12711;12707:9;12702:14;;12546:176;;;;:::o;12728:225::-;12868:34;12864:1;12856:6;12852:14;12845:58;12937:8;12932:2;12924:6;12920:15;12913:33;12728:225;:::o;12959:366::-;13101:3;13122:67;13186:2;13181:3;13122:67;:::i;:::-;13115:74;;13198:93;13287:3;13198:93;:::i;:::-;13316:2;13311:3;13307:12;13300:19;;12959:366;;;:::o;13331:419::-;13497:4;13535:2;13524:9;13520:18;13512:26;;13584:9;13578:4;13574:20;13570:1;13559:9;13555:17;13548:47;13612:131;13738:4;13612:131;:::i;:::-;13604:139;;13331:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1794600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"curTime()": "425",
								"earned(address)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawToken(address,uint256)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getRemainPool(uint256)": "infinite",
								"getReward()": "infinite",
								"getRewardPool(uint256)": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2929",
								"lastTimeRewardApplicable()": "447",
								"lastUpdateTime()": "2518",
								"modificationAdmin(address,bool)": "infinite",
								"owner()": "2567",
								"powersOf(address)": "2908",
								"rateInterval()": "2519",
								"rateIntervalDenominator()": "2518",
								"rateIntervalNumerator()": "2497",
								"renounceOwnership()": "30419",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2539",
								"rewards(address)": "2883",
								"rewardsToken()": "infinite",
								"setRewardToken(address)": "27052",
								"setStartTime(uint256)": "24952",
								"stake(address,uint256)": "infinite",
								"startTime()": "2496",
								"totalPowers()": "2549",
								"totalRewards()": "2520",
								"transferOwnership(address)": "30852",
								"userLastUpdateTime(address)": "2860",
								"userRewardPerTokenPaid(address)": "2926"
							},
							"internal": {
								"_getRemainPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 581,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "23934C5A09DA19000000"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 63,
									"end": 161,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 63,
									"end": 161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1562,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1617,
									"end": 1625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1607,
									"end": 1615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7266,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1e30a9344357949a61ad4dbb9b5455e72ac79e8d72208c3a55b8214e2fd706464736f6c63430008110033",
									".code": [
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "DB2E21BC"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "9A5B17B0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "A4C3B091"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8AEE8127"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "5CFA91F4"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7266,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4407,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4407,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4407,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6445,
											"end": 6750,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1682,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1682,
											"end": 1772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3157,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3157,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3157,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2224,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2224,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2224,
											"end": 2723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1780,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1780,
											"end": 1873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3936,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3936,
											"end": 4043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4051,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4051,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4051,
											"end": 4399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6758,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6758,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2102,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2102,
											"end": 2216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1881,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1881,
											"end": 1975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 7120,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7120,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 6139,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6139,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1983,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1983,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1983,
											"end": 2094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3581,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3581,
											"end": 3696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 4746,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4746,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4746,
											"end": 6129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6997,
											"end": 7112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4481,
											"end": 4493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4519,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4519,
											"end": 4546,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4563,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4496,
											"end": 4564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4564,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 4496,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4481,
											"end": 4564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4678,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4693,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4678,
											"end": 4694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4668,
											"end": 4672,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4630,
											"end": 4652,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4660,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4630,
											"end": 4661,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4620,
											"end": 4624,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4605,
											"end": 4625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4605,
											"end": 4625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4605,
											"end": 4629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 4605,
											"end": 4662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4592,
											"end": 4599,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4582,
											"end": 4604,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 4582,
											"end": 4663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4582,
											"end": 4667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 4582,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4582,
											"end": 4677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 4582,
											"end": 4695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4695,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 4695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4407,
											"end": 4703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1737,
											"end": 1785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6445,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6501,
											"end": 6511,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1204,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1297,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1318,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1274,
											"end": 1319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1368,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1353,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1401,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1401,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1506,
											"end": 1513,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1499,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1643,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6559,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6541,
											"end": 6560,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6560,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6584,
											"end": 6585,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6585,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6743,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6743,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6571,
											"end": 6743,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 6625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6609,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6610,
											"end": 6620,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6602,
											"end": 6621,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6625,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6625,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6602,
											"end": 6625,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6640,
											"end": 6652,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6640,
											"end": 6661,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 6662,
											"end": 6672,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6680,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6640,
											"end": 6681,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 6640,
											"end": 6681,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6640,
											"end": 6681,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6722,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 6724,
											"end": 6730,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6701,
											"end": 6731,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6701,
											"end": 6731,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6743,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6571,
											"end": 6743,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6750,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6445,
											"end": 6750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1757,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1748,
											"end": 1764,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1764,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1748,
											"end": 1764,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3252,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3247,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3238,
											"end": 3247,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3252,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3297,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3235,
											"end": 3297,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3276,
											"end": 3285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3269,
											"end": 3285,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3235,
											"end": 3297,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3235,
											"end": 3297,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3344,
											"end": 3356,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3324,
											"end": 3340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3324,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3323,
											"end": 3356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3323,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3323,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 3323,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3360,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3387,
											"end": 3399,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3371,
											"end": 3399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3423,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3438,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3531,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3508,
											"end": 3531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3484,
											"end": 3505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3476,
											"end": 3505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3476,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 3476,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3476,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3468,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3468,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3531,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3460,
											"end": 3531,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3440,
											"end": 3443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3410,
											"end": 3543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3560,
											"end": 3565,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3553,
											"end": 3565,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2289,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2305,
											"end": 2314,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2343,
											"end": 2355,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2336,
											"end": 2355,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2430,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2414,
											"end": 2426,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2401,
											"end": 2410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2398,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2394,
											"end": 2410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2394,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2393,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 2393,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2393,
											"end": 2430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2393,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2377,
											"end": 2430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2457,
											"end": 2469,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2441,
											"end": 2469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2503,
											"end": 2508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2500,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2508,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2578,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2578,
											"end": 2601,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2554,
											"end": 2575,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2551,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2546,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2546,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2546,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2546,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2538,
											"end": 2601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2538,
											"end": 2601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2601,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2601,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2510,
											"end": 2513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2692,
											"end": 2715,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2668,
											"end": 2689,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2660,
											"end": 2689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2660,
											"end": 2715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2660,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2715,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2653,
											"end": 2715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2224,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1826,
											"end": 1833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1853,
											"end": 1865,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1846,
											"end": 1865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3993,
											"end": 4000,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3936,
											"end": 4043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4116,
											"end": 4123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4156,
											"end": 4157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4140,
											"end": 4152,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4157,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4136,
											"end": 4213,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4181,
											"end": 4201,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4174,
											"end": 4201,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4213,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4136,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4363,
											"end": 4375,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4353,
											"end": 4357,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4337,
											"end": 4347,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4317,
											"end": 4331,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4317,
											"end": 4331,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4286,
											"end": 4310,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 4286,
											"end": 4312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4286,
											"end": 4312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4286,
											"end": 4316,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4286,
											"end": 4332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4286,
											"end": 4336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4286,
											"end": 4348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4286,
											"end": 4352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4286,
											"end": 4358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4286,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4286,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4243,
											"end": 4263,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4243,
											"end": 4267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4243,
											"end": 4391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4223,
											"end": 4391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4051,
											"end": 4399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6849,
											"end": 6854,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6827,
											"end": 6839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6827,
											"end": 6855,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2192,
											"end": 2207,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2178,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2178,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1952,
											"end": 1967,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1945,
											"end": 1967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7220,
											"end": 7225,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7235,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7236,
											"end": 7246,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7254,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 7213,
											"end": 7255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7255,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 7213,
											"end": 7255,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7213,
											"end": 7255,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7120,
											"end": 7263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 829,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6229,
											"end": 6233,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1191,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1204,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1297,
											"end": 1301,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1318,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 1274,
											"end": 1319,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1368,
											"end": 1372,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 1353,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1401,
											"end": 1425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1401,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1449,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1506,
											"end": 1513,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1499,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1495,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1559,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1643,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1624,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6263,
											"end": 6264,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6254,
											"end": 6260,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6264,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 6246,
											"end": 6283,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6246,
											"end": 6283,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6326,
											"end": 6332,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6309,
											"end": 6321,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6325,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6309,
											"end": 6325,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6309,
											"end": 6333,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6306,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6294,
											"end": 6333,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6333,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6333,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6294,
											"end": 6333,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6382,
											"end": 6388,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6371,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6372,
											"end": 6376,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6377,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6381,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 6362,
											"end": 6381,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 6362,
											"end": 6389,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6353,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6358,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6359,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6389,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6416,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 6418,
											"end": 6424,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6405,
											"end": 6425,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6405,
											"end": 6425,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2077,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2085,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2068,
											"end": 2086,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3630,
											"end": 3637,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3672,
											"end": 3687,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3657,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 3657,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3650,
											"end": 3688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3696,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4836,
											"end": 4843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4868,
											"end": 4877,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4882,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4898,
											"end": 4907,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4907,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 4868,
											"end": 4907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4911,
											"end": 4919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4911,
											"end": 4924,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 4868,
											"end": 4924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4865,
											"end": 4961,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4941,
											"end": 4949,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4865,
											"end": 4961,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 4865,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4987,
											"end": 4996,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 4996,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4973,
											"end": 5045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5024,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5033,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4973,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 4973,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5077,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5149,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5137,
											"end": 5149,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5121,
											"end": 5133,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5121,
											"end": 5133,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5105,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5097,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5097,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5096,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5096,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5093,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5081,
											"end": 5093,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5081,
											"end": 5133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5081,
											"end": 5133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5080,
											"end": 5149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5080,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5149,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5222,
											"end": 5234,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5207,
											"end": 5219,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5195,
											"end": 5203,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5181,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5181,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5181,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5181,
											"end": 5234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5181,
											"end": 5234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5234,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5160,
											"end": 5234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5297,
											"end": 5309,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5297,
											"end": 5309,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5284,
											"end": 5293,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5281,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5272,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5272,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5271,
											"end": 5309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5271,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5247,
											"end": 5309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5339,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5397,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5385,
											"end": 5397,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5382,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5356,
											"end": 5365,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5342,
											"end": 5366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5366,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5342,
											"end": 5366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5342,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5342,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5342,
											"end": 5397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5342,
											"end": 5397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5448,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5421,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5413,
											"end": 5436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5413,
											"end": 5436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5413,
											"end": 5448,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5508,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5410,
											"end": 5508,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5487,
											"end": 5495,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5472,
											"end": 5496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5496,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5472,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5465,
											"end": 5496,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5508,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5410,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5581,
											"end": 5593,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5578,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5554,
											"end": 5567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5551,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5542,
											"end": 5567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5542,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5542,
											"end": 5578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5542,
											"end": 5578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5542,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5542,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5626,
											"end": 5649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5626,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5649,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5604,
											"end": 5649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5698,
											"end": 5716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5758,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5782,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5799,
											"end": 5811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5796,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5785,
											"end": 5811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5785,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5811,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5841,
											"end": 5850,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5917,
											"end": 5940,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5917,
											"end": 5940,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5893,
											"end": 5914,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5893,
											"end": 5914,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5890,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5885,
											"end": 5914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5885,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5885,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5885,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5940,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5940,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5971,
											"end": 5981,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5968,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 5963,
											"end": 5981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5963,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5981,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5981,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6014,
											"end": 6024,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5996,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6024,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5852,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5852,
											"end": 5855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 6036,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6112,
											"end": 6120,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6109,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6100,
											"end": 6120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 6100,
											"end": 6120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6084,
											"end": 6095,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6081,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6068,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6054,
											"end": 6081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 6054,
											"end": 6081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6054,
											"end": 6095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6054,
											"end": 6095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 6053,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6053,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6046,
											"end": 6121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 6129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 6997,
											"end": 7112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7064,
											"end": 7071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7064,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7064,
											"end": 7071,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7071,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 7064,
											"end": 7071,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7056,
											"end": 7081,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 7082,
											"end": 7103,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7104,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6997,
											"end": 7112,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1315,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 7,
											"value": "165"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 3192,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3108,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 3535,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3451,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 3920,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3836,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 2825,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2741,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 63,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3822,
											"end": 3826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3808,
											"end": 3827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3808,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 3808,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3784,
											"end": 3827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3872,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 3859,
											"end": 3876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 3859,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3838,
											"end": 3890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3918,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "377"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 8,
											"value": "427"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "tag",
											"source": 8,
											"value": "431"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1707,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 1926,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1829,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 2096,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 8,
											"value": "436"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2262,
											"end": 2284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 2241,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2187,
											"end": 2304,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 2369,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2314,
											"end": 2429,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1968,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 2523,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2518,
											"end": 2521,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2511,
											"end": 2545,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2442,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2742,
											"end": 2759,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 2695,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2557,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 2846,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "tag",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2875,
											"end": 2887,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2773,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "tag",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2972,
											"end": 2992,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 3001,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2901,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3133,
											"end": 3140,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3129,
											"end": 3152,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3125,
											"end": 3157,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3160,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "tag",
											"source": 8,
											"value": "449"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 3350,
											"end": 3357,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3326,
											"end": 3348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 3305,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3251,
											"end": 3368,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3046,
											"end": 3375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 3468,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3466,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3456,
											"end": 3493,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3381,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3715,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3702,
											"end": 3719,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 3649,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3505,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3833,
											"end": 3856,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3829,
											"end": 3861,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 3864,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "tag",
											"source": 8,
											"value": "457"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4034,
											"end": 4043,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 4009,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "459"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 4182,
											"end": 4189,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 4137,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4082,
											"end": 4200,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3733,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4213,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4389,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 4380,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 4362,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4279,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "tag",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 4510,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4427,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4624,
											"end": 4633,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 4688,
											"end": 4693,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "390"
										},
										{
											"begin": 4657,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 4657,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4644,
											"end": 4694,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4700,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "tag",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 4854,
											"end": 4859,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 4808,
											"end": 4860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 4808,
											"end": 4860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4803,
											"end": 4806,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4796,
											"end": 4861,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4867,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4867,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4981,
											"end": 4985,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5021,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5008,
											"end": 5017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5004,
											"end": 5022,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4996,
											"end": 5022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5104,
											"end": 5113,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5100,
											"end": 5117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5091,
											"end": 5097,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "392"
										},
										{
											"begin": 5032,
											"end": 5118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "tag",
											"source": 8,
											"value": "473"
										},
										{
											"begin": 5032,
											"end": 5118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 5125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5199,
											"end": 5205,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5213,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5256,
											"end": 5258,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5244,
											"end": 5253,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5235,
											"end": 5242,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5231,
											"end": 5254,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5227,
											"end": 5259,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 5262,
											"end": 5341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 5262,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 5224,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5382,
											"end": 5383,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 5452,
											"end": 5459,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5432,
											"end": 5441,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5428,
											"end": 5450,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5407,
											"end": 5460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 5407,
											"end": 5460,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5397,
											"end": 5460,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5353,
											"end": 5470,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5509,
											"end": 5511,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 5580,
											"end": 5587,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5571,
											"end": 5577,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5556,
											"end": 5578,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "386"
										},
										{
											"begin": 5535,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 5535,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5588,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5480,
											"end": 5598,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5706,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5717,
											"end": 5736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5764,
											"end": 5767,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5760,
											"end": 5774,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5774,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5745,
											"end": 5774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5611,
											"end": 5780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "tag",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5926,
											"end": 5960,
											"name": "PUSH",
											"source": 8,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 5922,
											"end": 5923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5920,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5910,
											"end": 5924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5903,
											"end": 5961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5995,
											"end": 5999,
											"name": "PUSH",
											"source": 8,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5978,
											"end": 5993,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5971,
											"end": 6000,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 6007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5786,
											"end": 6007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6155,
											"end": 6158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 6240,
											"end": 6242,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 6235,
											"end": 6238,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 6176,
											"end": 6243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "tag",
											"source": 8,
											"value": "482"
										},
										{
											"begin": 6176,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6243,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6243,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 6341,
											"end": 6344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "394"
										},
										{
											"begin": 6252,
											"end": 6345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 6252,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6370,
											"end": 6372,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6365,
											"end": 6368,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6361,
											"end": 6373,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6373,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6354,
											"end": 6373,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6551,
											"end": 6555,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6591,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6566,
											"end": 6592,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6638,
											"end": 6647,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6632,
											"end": 6636,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6628,
											"end": 6648,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6624,
											"end": 6625,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6609,
											"end": 6626,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6602,
											"end": 6649,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 6792,
											"end": 6796,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 6666,
											"end": 6797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "tag",
											"source": 8,
											"value": "485"
										},
										{
											"begin": 6666,
											"end": 6797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6658,
											"end": 6797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6385,
											"end": 6804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6919,
											"end": 6923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6957,
											"end": 6959,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6946,
											"end": 6955,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6942,
											"end": 6960,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6934,
											"end": 6960,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 7032,
											"end": 7033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7017,
											"end": 7034,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7008,
											"end": 7014,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 6970,
											"end": 7035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 6970,
											"end": 7035,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 7107,
											"end": 7109,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7096,
											"end": 7105,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7092,
											"end": 7110,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7083,
											"end": 7089,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7045,
											"end": 7111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "tag",
											"source": 8,
											"value": "488"
										},
										{
											"begin": 7045,
											"end": 7111,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6810,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7264,
											"end": 7297,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7260,
											"end": 7261,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7248,
											"end": 7262,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7241,
											"end": 7298,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7124,
											"end": 7305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7453,
											"end": 7456,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 7538,
											"end": 7540,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 7474,
											"end": 7541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 7474,
											"end": 7541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7467,
											"end": 7541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 7639,
											"end": 7642,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 7550,
											"end": 7643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "tag",
											"source": 8,
											"value": "492"
										},
										{
											"begin": 7550,
											"end": 7643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7668,
											"end": 7670,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7663,
											"end": 7666,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7659,
											"end": 7671,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7652,
											"end": 7671,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7677,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7311,
											"end": 7677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7849,
											"end": 7853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7889,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 7885,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7872,
											"end": 7890,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7864,
											"end": 7890,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7936,
											"end": 7945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7930,
											"end": 7934,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7926,
											"end": 7946,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7922,
											"end": 7923,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7911,
											"end": 7920,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7907,
											"end": 7924,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7900,
											"end": 7947,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 8090,
											"end": 8094,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 7964,
											"end": 8095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 7964,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 8095,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 8095,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 8102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7683,
											"end": 8102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8229,
											"end": 8233,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8267,
											"end": 8269,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8265,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8252,
											"end": 8270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8270,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8244,
											"end": 8270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8346,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8333,
											"end": 8350,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 8280,
											"end": 8351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "tag",
											"source": 8,
											"value": "496"
										},
										{
											"begin": 8280,
											"end": 8351,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8418,
											"end": 8427,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8414,
											"end": 8432,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8405,
											"end": 8411,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 8361,
											"end": 8433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 8361,
											"end": 8433,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8108,
											"end": 8440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8500,
											"end": 8505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8537,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8525,
											"end": 8538,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8516,
											"end": 8538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 8571,
											"end": 8576,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 8547,
											"end": 8577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 8547,
											"end": 8577,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8446,
											"end": 8583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8705,
											"end": 8707,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8693,
											"end": 8702,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8684,
											"end": 8691,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8680,
											"end": 8703,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8676,
											"end": 8708,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "373"
										},
										{
											"begin": 8711,
											"end": 8790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "tag",
											"source": 8,
											"value": "502"
										},
										{
											"begin": 8711,
											"end": 8790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "tag",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 8673,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8831,
											"end": 8832,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 8909,
											"end": 8916,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8900,
											"end": 8906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8889,
											"end": 8898,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8885,
											"end": 8907,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8856,
											"end": 8917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "tag",
											"source": 8,
											"value": "503"
										},
										{
											"begin": 8856,
											"end": 8917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8846,
											"end": 8917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8802,
											"end": 8927,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8589,
											"end": 8934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "tag",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9080,
											"end": 9114,
											"name": "PUSH",
											"source": 8,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 9076,
											"end": 9077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9068,
											"end": 9074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9064,
											"end": 9078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9057,
											"end": 9115,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9149,
											"end": 9153,
											"name": "PUSH",
											"source": 8,
											"value": "696E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9144,
											"end": 9146,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9136,
											"end": 9142,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9132,
											"end": 9147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9125,
											"end": 9154,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 9161,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8940,
											"end": 9161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "tag",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9309,
											"end": 9312,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 9394,
											"end": 9396,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9389,
											"end": 9392,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 9330,
											"end": 9397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "tag",
											"source": 8,
											"value": "506"
										},
										{
											"begin": 9330,
											"end": 9397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9323,
											"end": 9397,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9323,
											"end": 9397,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 9495,
											"end": 9498,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "399"
										},
										{
											"begin": 9406,
											"end": 9499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "tag",
											"source": 8,
											"value": "507"
										},
										{
											"begin": 9406,
											"end": 9499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9524,
											"end": 9526,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9519,
											"end": 9522,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9515,
											"end": 9527,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9508,
											"end": 9527,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9167,
											"end": 9533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9743,
											"end": 9745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9732,
											"end": 9741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9728,
											"end": 9746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9720,
											"end": 9746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9792,
											"end": 9801,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9786,
											"end": 9790,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9782,
											"end": 9802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9778,
											"end": 9779,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9767,
											"end": 9776,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9763,
											"end": 9780,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9756,
											"end": 9803,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9946,
											"end": 9950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "400"
										},
										{
											"begin": 9820,
											"end": 9951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "tag",
											"source": 8,
											"value": "509"
										},
										{
											"begin": 9820,
											"end": 9951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9812,
											"end": 9951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9958,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9539,
											"end": 9958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9964,
											"end": 10144,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10012,
											"end": 10089,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10090,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10109,
											"end": 10113,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10106,
											"end": 10107,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10099,
											"end": 10114,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10137,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10123,
											"end": 10138,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10190,
											"end": 10194,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10210,
											"end": 10230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "tag",
											"source": 8,
											"value": "512"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10244,
											"end": 10264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "tag",
											"source": 8,
											"value": "513"
										},
										{
											"begin": 10244,
											"end": 10264,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10239,
											"end": 10264,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10239,
											"end": 10264,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10288,
											"end": 10289,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10285,
											"end": 10286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10281,
											"end": 10290,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10273,
											"end": 10290,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10273,
											"end": 10290,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10312,
											"end": 10313,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10306,
											"end": 10310,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10303,
											"end": 10314,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10317,
											"end": 10335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "tag",
											"source": 8,
											"value": "515"
										},
										{
											"begin": 10317,
											"end": 10335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "tag",
											"source": 8,
											"value": "514"
										},
										{
											"begin": 10300,
											"end": 10337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10150,
											"end": 10344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10350,
											"end": 10530,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10350,
											"end": 10530,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10398,
											"end": 10475,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10395,
											"end": 10396,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10388,
											"end": 10476,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10495,
											"end": 10499,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 10492,
											"end": 10493,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10485,
											"end": 10500,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10519,
											"end": 10523,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10524,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10576,
											"end": 10577,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10611,
											"end": 10612,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10593,
											"end": 10613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 10593,
											"end": 10613,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10588,
											"end": 10613,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10588,
											"end": 10613,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10645,
											"end": 10646,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10627,
											"end": 10647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "tag",
											"source": 8,
											"value": "519"
										},
										{
											"begin": 10627,
											"end": 10647,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10622,
											"end": 10647,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10622,
											"end": 10647,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10666,
											"end": 10667,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 10671,
											"end": 10689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "tag",
											"source": 8,
											"value": "521"
										},
										{
											"begin": 10671,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "tag",
											"source": 8,
											"value": "520"
										},
										{
											"begin": 10656,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10713,
											"end": 10714,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10710,
											"end": 10711,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10706,
											"end": 10715,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10715,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10701,
											"end": 10715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10536,
											"end": 10721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "tag",
											"source": 8,
											"value": "214"
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10767,
											"end": 10770,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 10804,
											"end": 10805,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10786,
											"end": 10806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "tag",
											"source": 8,
											"value": "523"
										},
										{
											"begin": 10786,
											"end": 10806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10806,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10781,
											"end": 10806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 10838,
											"end": 10839,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10820,
											"end": 10840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "tag",
											"source": 8,
											"value": "524"
										},
										{
											"begin": 10820,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10815,
											"end": 10840,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10863,
											"end": 10864,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10856,
											"end": 10865,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10849,
											"end": 10865,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10849,
											"end": 10865,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10884,
											"end": 10887,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10878,
											"end": 10888,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 10891,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "tag",
											"source": 8,
											"value": "526"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "tag",
											"source": 8,
											"value": "525"
										},
										{
											"begin": 10875,
											"end": 10911,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10727,
											"end": 10918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 10971,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 11005,
											"end": 11006,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 10987,
											"end": 11007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "tag",
											"source": 8,
											"value": "528"
										},
										{
											"begin": 10987,
											"end": 11007,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11007,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11007,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 11039,
											"end": 11040,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11021,
											"end": 11041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "tag",
											"source": 8,
											"value": "529"
										},
										{
											"begin": 11021,
											"end": 11041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11041,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11016,
											"end": 11041,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11076,
											"end": 11077,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11073,
											"end": 11074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11069,
											"end": 11078,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11116,
											"end": 11127,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11098,
											"end": 11128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "tag",
											"source": 8,
											"value": "530"
										},
										{
											"begin": 11098,
											"end": 11128,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11128,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11128,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11277,
											"end": 11278,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11268,
											"end": 11275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11264,
											"end": 11279,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11261,
											"end": 11262,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11258,
											"end": 11280,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11231,
											"end": 11240,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 11211,
											"end": 11294,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 11307,
											"end": 11325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "tag",
											"source": 8,
											"value": "532"
										},
										{
											"begin": 11307,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "tag",
											"source": 8,
											"value": "531"
										},
										{
											"begin": 11188,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10972,
											"end": 11334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 11334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11379,
											"end": 11382,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 11420,
											"end": 11425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 11402,
											"end": 11426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "tag",
											"source": 8,
											"value": "534"
										},
										{
											"begin": 11402,
											"end": 11426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11393,
											"end": 11426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11393,
											"end": 11426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11514,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11441,
											"end": 11446,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11438,
											"end": 11515,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 11518,
											"end": 11536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "tag",
											"source": 8,
											"value": "536"
										},
										{
											"begin": 11518,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "tag",
											"source": 8,
											"value": "535"
										},
										{
											"begin": 11435,
											"end": 11538,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11565,
											"end": 11566,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 11558,
											"end": 11563,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11554,
											"end": 11567,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11547,
											"end": 11567,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11547,
											"end": 11567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11573,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11340,
											"end": 11573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11735,
											"name": "PUSH",
											"source": 8,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 11715,
											"end": 11716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11707,
											"end": 11713,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11703,
											"end": 11717,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11696,
											"end": 11736,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11579,
											"end": 11743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "tag",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11891,
											"end": 11894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 11976,
											"end": 11978,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 11971,
											"end": 11974,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 11912,
											"end": 11979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "tag",
											"source": 8,
											"value": "539"
										},
										{
											"begin": 11912,
											"end": 11979,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 11979,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11905,
											"end": 11979,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 12077,
											"end": 12080,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 11988,
											"end": 12081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "tag",
											"source": 8,
											"value": "540"
										},
										{
											"begin": 11988,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12106,
											"end": 12108,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12101,
											"end": 12104,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12097,
											"end": 12109,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12090,
											"end": 12109,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12090,
											"end": 12109,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 12115,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11749,
											"end": 12115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12287,
											"end": 12291,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12325,
											"end": 12327,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12314,
											"end": 12323,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12310,
											"end": 12328,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12328,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12374,
											"end": 12383,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12368,
											"end": 12372,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12364,
											"end": 12384,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12360,
											"end": 12361,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12358,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12345,
											"end": 12362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12338,
											"end": 12385,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 12528,
											"end": 12532,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "404"
										},
										{
											"begin": 12402,
											"end": 12533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "tag",
											"source": 8,
											"value": "542"
										},
										{
											"begin": 12402,
											"end": 12533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12394,
											"end": 12533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12394,
											"end": 12533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12540,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12121,
											"end": 12540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 12613,
											"end": 12614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12595,
											"end": 12615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "tag",
											"source": 8,
											"value": "544"
										},
										{
											"begin": 12595,
											"end": 12615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 12647,
											"end": 12648,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 12629,
											"end": 12649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "tag",
											"source": 8,
											"value": "545"
										},
										{
											"begin": 12629,
											"end": 12649,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12649,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12649,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 12673,
											"end": 12691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "tag",
											"source": 8,
											"value": "547"
										},
										{
											"begin": 12673,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "tag",
											"source": 8,
											"value": "546"
										},
										{
											"begin": 12658,
											"end": 12693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12714,
											"end": 12715,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12711,
											"end": 12712,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12707,
											"end": 12716,
											"name": "MOD",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 12716,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12702,
											"end": 12716,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12546,
											"end": 12722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "tag",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12868,
											"end": 12902,
											"name": "PUSH",
											"source": 8,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12864,
											"end": 12865,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12856,
											"end": 12862,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12852,
											"end": 12866,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12845,
											"end": 12903,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12937,
											"end": 12945,
											"name": "PUSH",
											"source": 8,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12932,
											"end": 12934,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12920,
											"end": 12935,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12913,
											"end": 12946,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12728,
											"end": 12953,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12728,
											"end": 12953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "tag",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13101,
											"end": 13104,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 13186,
											"end": 13188,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 13181,
											"end": 13184,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 13122,
											"end": 13189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "tag",
											"source": 8,
											"value": "550"
										},
										{
											"begin": 13122,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13115,
											"end": 13189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13115,
											"end": 13189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 13287,
											"end": 13290,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "405"
										},
										{
											"begin": 13198,
											"end": 13291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "tag",
											"source": 8,
											"value": "551"
										},
										{
											"begin": 13198,
											"end": 13291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13316,
											"end": 13318,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13311,
											"end": 13314,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13307,
											"end": 13319,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13300,
											"end": 13319,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13300,
											"end": 13319,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13325,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12959,
											"end": 13325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13497,
											"end": 13501,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13535,
											"end": 13537,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13524,
											"end": 13533,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13520,
											"end": 13538,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13512,
											"end": 13538,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13512,
											"end": 13538,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13584,
											"end": 13593,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13578,
											"end": 13582,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13574,
											"end": 13594,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13570,
											"end": 13571,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13568,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13555,
											"end": 13572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13548,
											"end": 13595,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 13738,
											"end": 13742,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "406"
										},
										{
											"begin": 13612,
											"end": 13743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "tag",
											"source": 8,
											"value": "553"
										},
										{
											"begin": 13612,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13604,
											"end": 13743,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13604,
											"end": 13743,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13331,
											"end": 13750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"inviter_presell/test.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"curTime()": "9a5b17b0",
							"earned(address)": "008cc262",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawToken(address,uint256)": "a4c3b091",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getRemainPool(uint256)": "4dbdc4eb",
							"getReward()": "3d18b912",
							"getRewardPool(uint256)": "5cfa91f4",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setRewardToken(address)": "8aee8127",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"curTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRemainPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0xca2a03cdfd230180fd1aaefa3a34cc5938b7e9e70924166dd65c139106246859\",\"urls\":[\"bzz-raw://de29d21c4863ca9d87eeea6ab9b9f3e3037aa2dced8c5182c256cf5abfda271c\",\"dweb:/ipfs/QmRaPQLx3XvzkSELaD2FkVTRaei5bL7q5UtX2KtVjn93xo\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 985,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1092"
							},
							{
								"astId": 196,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 214,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 222,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 226,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 228,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 232,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1092": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/test.sol": {
				"test": {
					"abi": [
						{
							"inputs": [],
							"name": "test2",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/test.sol\":53:254  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/test.sol\":53:254  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66e41cb7\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/test.sol\":200:251  function test2() public  {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"inviter_presell/test.sol\":236:243  test1() */\n      tag_7\n        /* \"inviter_presell/test.sol\":236:241  test1 */\n      tag_8\n        /* \"inviter_presell/test.sol\":236:243  test1() */\n      jump\t// in\n    tag_7:\n        /* \"inviter_presell/test.sol\":200:251  function test2() public  {... */\n      jump\t// out\n        /* \"inviter_presell/test.sol\":74:192  function test1() private {... */\n    tag_8:\n        /* \"inviter_presell/test.sol\":125:167  0x05c8dC15515300725Fb02899678E3AC95D264184 */\n      0x05c8dc15515300725fb02899678e3ac95d264184\n        /* \"inviter_presell/test.sol\":110:181  StakingRewards(0x05c8dC15515300725Fb02899678E3AC95D264184).setStartTime */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3e0a322d\n        /* \"inviter_presell/test.sol\":182:183  1 */\n      0x01\n        /* \"inviter_presell/test.sol\":110:184  StakingRewards(0x05c8dC15515300725Fb02899678E3AC95D264184).setStartTime(1) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_14\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_14:\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/test.sol\":74:192  function test1() private {... */\n      jump\t// out\n        /* \"#utility.yul\":7:92   */\n    tag_15:\n        /* \"#utility.yul\":52:59   */\n      0x00\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":70:86   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:92   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":98:175   */\n    tag_16:\n        /* \"#utility.yul\":135:142   */\n      0x00\n        /* \"#utility.yul\":164:169   */\n      dup2\n        /* \"#utility.yul\":153:169   */\n      swap1\n      pop\n        /* \"#utility.yul\":98:175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":181:241   */\n    tag_17:\n        /* \"#utility.yul\":209:212   */\n      0x00\n        /* \"#utility.yul\":230:235   */\n      dup2\n        /* \"#utility.yul\":223:235   */\n      swap1\n      pop\n        /* \"#utility.yul\":181:241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":247:405   */\n    tag_18:\n        /* \"#utility.yul\":305:314   */\n      0x00\n        /* \"#utility.yul\":338:399   */\n      tag_25\n        /* \"#utility.yul\":356:398   */\n      tag_26\n        /* \"#utility.yul\":365:397   */\n      tag_27\n        /* \"#utility.yul\":391:396   */\n      dup5\n        /* \"#utility.yul\":365:397   */\n      tag_15\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":356:398   */\n      tag_17\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":338:399   */\n      tag_16\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":325:399   */\n      swap1\n      pop\n        /* \"#utility.yul\":247:405   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":411:558   */\n    tag_19:\n        /* \"#utility.yul\":506:551   */\n      tag_29\n        /* \"#utility.yul\":545:550   */\n      dup2\n        /* \"#utility.yul\":506:551   */\n      tag_18\n      jump\t// in\n    tag_29:\n        /* \"#utility.yul\":501:504   */\n      dup3\n        /* \"#utility.yul\":494:552   */\n      mstore\n        /* \"#utility.yul\":411:558   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":564:802   */\n    tag_11:\n        /* \"#utility.yul\":665:669   */\n      0x00\n        /* \"#utility.yul\":703:705   */\n      0x20\n        /* \"#utility.yul\":692:701   */\n      dup3\n        /* \"#utility.yul\":688:706   */\n      add\n        /* \"#utility.yul\":680:706   */\n      swap1\n      pop\n        /* \"#utility.yul\":716:795   */\n      tag_31\n        /* \"#utility.yul\":792:793   */\n      0x00\n        /* \"#utility.yul\":781:790   */\n      dup4\n        /* \"#utility.yul\":777:794   */\n      add\n        /* \"#utility.yul\":768:774   */\n      dup5\n        /* \"#utility.yul\":716:795   */\n      tag_19\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":564:802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220cf46448c4fe64250d615200eb1e13d989658134198e6b05b6d32fba6afa4885164736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610166806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806366e41cb714610030575b600080fd5b61003861003a565b005b610042610044565b565b7305c8dc15515300725fb02899678e3ac95d26418473ffffffffffffffffffffffffffffffffffffffff16633e0a322d60016040518263ffffffff1660e01b81526004016100929190610115565b600060405180830381600087803b1580156100ac57600080fd5b505af11580156100c0573d6000803e3d6000fd5b50505050565b6000819050919050565b6000819050919050565b6000819050919050565b60006100ff6100fa6100f5846100c6565b6100da565b6100d0565b9050919050565b61010f816100e4565b82525050565b600060208201905061012a6000830184610106565b9291505056fea2646970667358221220cf46448c4fe64250d615200eb1e13d989658134198e6b05b6d32fba6afa4885164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x166 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E41CB7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42 PUSH2 0x44 JUMP JUMPDEST JUMP JUMPDEST PUSH20 0x5C8DC15515300725FB02899678E3AC95D264184 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E0A322D PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF PUSH2 0xFA PUSH2 0xF5 DUP5 PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0xE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF CHAINID DIFFICULTY DUP13 0x4F 0xE6 TIMESTAMP POP 0xD6 ISZERO KECCAK256 0xE 0xB1 0xE1 RETURNDATASIZE SWAP9 SWAP7 PC SGT COINBASE SWAP9 0xE6 0xB0 JUMPDEST PUSH14 0x32FBA6AFA4885164736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "53:201:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test1_966": {
									"entryPoint": 68,
									"id": 966,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test2_973": {
									"entryPoint": 58,
									"id": 973,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": 277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:805:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "60:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "70:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "81:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "70:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "42:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "52:7:8",
														"type": ""
													}
												],
												"src": "7:85:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "143:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "153:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "164:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "153:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "125:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "135:7:8",
														"type": ""
													}
												],
												"src": "98:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "213:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "223:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "230:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "199:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "209:3:8",
														"type": ""
													}
												],
												"src": "181:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "315:90:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "325:74:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "391:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "365:25:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "365:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "356:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "338:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "338:61:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "325:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "295:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "305:9:8",
														"type": ""
													}
												],
												"src": "247:158:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:74:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "501:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "545:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "506:38:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "494:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "494:58:8"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "472:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "479:3:8",
														"type": ""
													}
												],
												"src": "411:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:132:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "680:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "692:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "703:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "688:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "680:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "768:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "781:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "792:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "716:51:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "716:79:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "716:79:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "642:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "654:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "665:4:8",
														"type": ""
													}
												],
												"src": "564:238:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806366e41cb714610030575b600080fd5b61003861003a565b005b610042610044565b565b7305c8dc15515300725fb02899678e3ac95d26418473ffffffffffffffffffffffffffffffffffffffff16633e0a322d60016040518263ffffffff1660e01b81526004016100929190610115565b600060405180830381600087803b1580156100ac57600080fd5b505af11580156100c0573d6000803e3d6000fd5b50505050565b6000819050919050565b6000819050919050565b6000819050919050565b60006100ff6100fa6100f5846100c6565b6100da565b6100d0565b9050919050565b61010f816100e4565b82525050565b600060208201905061012a6000830184610106565b9291505056fea2646970667358221220cf46448c4fe64250d615200eb1e13d989658134198e6b05b6d32fba6afa4885164736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66E41CB7 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x3A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42 PUSH2 0x44 JUMP JUMPDEST JUMP JUMPDEST PUSH20 0x5C8DC15515300725FB02899678E3AC95D264184 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3E0A322D PUSH1 0x1 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x115 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF PUSH2 0xFA PUSH2 0xF5 DUP5 PUSH2 0xC6 JUMP JUMPDEST PUSH2 0xDA JUMP JUMPDEST PUSH2 0xD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F DUP2 PUSH2 0xE4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x106 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCF CHAINID DIFFICULTY DUP13 0x4F 0xE6 TIMESTAMP POP 0xD6 ISZERO KECCAK256 0xE 0xB1 0xE1 RETURNDATASIZE SWAP9 SWAP7 PC SGT COINBASE SWAP9 0xE6 0xB0 JUMPDEST PUSH14 0x32FBA6AFA4885164736F6C634300 ADDMOD GT STOP CALLER ",
							"sourceMap": "53:201:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;200:51;;;:::i;:::-;;;236:7;:5;:7::i;:::-;200:51::o;74:118::-;125:42;110:71;;;182:1;110:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74:118::o;7:85:8:-;52:7;81:5;70:16;;7:85;;;:::o;98:77::-;135:7;164:5;153:16;;98:77;;;:::o;181:60::-;209:3;230:5;223:12;;181:60;;;:::o;247:158::-;305:9;338:61;356:42;365:32;391:5;365:32;:::i;:::-;356:42;:::i;:::-;338:61;:::i;:::-;325:74;;247:158;;;:::o;411:147::-;506:45;545:5;506:45;:::i;:::-;501:3;494:58;411:147;;:::o;564:238::-;665:4;703:2;692:9;688:18;680:26;;716:79;792:1;781:9;777:17;768:6;716:79;:::i;:::-;564:238;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "71600",
								"executionCost": "123",
								"totalCost": "71723"
							},
							"external": {
								"test2()": "infinite"
							},
							"internal": {
								"test1()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 53,
									"end": 254,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 53,
									"end": 254,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cf46448c4fe64250d615200eb1e13d989658134198e6b05b6d32fba6afa4885164736f6c63430008110033",
									".code": [
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "66E41CB7"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 53,
											"end": 254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 53,
											"end": 254,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 200,
											"end": 251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 251,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 251,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 200,
											"end": 251,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 236,
											"end": 243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 236,
											"end": 243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 236,
											"end": 243,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 236,
											"end": 243,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 200,
											"end": 251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 74,
											"end": 192,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 74,
											"end": 192,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 125,
											"end": 167,
											"name": "PUSH",
											"source": 2,
											"value": "5C8DC15515300725FB02899678E3AC95D264184"
										},
										{
											"begin": 110,
											"end": 181,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 110,
											"end": 181,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 110,
											"end": 181,
											"name": "PUSH",
											"source": 2,
											"value": "3E0A322D"
										},
										{
											"begin": 182,
											"end": 183,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 110,
											"end": 184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 110,
											"end": 184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 110,
											"end": 184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 74,
											"end": 192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 92,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 92,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 52,
											"end": 59,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 70,
											"end": 86,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 70,
											"end": 86,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 92,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 92,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 92,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 92,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 98,
											"end": 175,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 98,
											"end": 175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 142,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 169,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 153,
											"end": 169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 153,
											"end": 169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 98,
											"end": 175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 98,
											"end": 175,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 98,
											"end": 175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 98,
											"end": 175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 181,
											"end": 241,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 181,
											"end": 241,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 209,
											"end": 212,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 235,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 223,
											"end": 235,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 223,
											"end": 235,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 181,
											"end": 241,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 181,
											"end": 241,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 181,
											"end": 241,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 181,
											"end": 241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 247,
											"end": 405,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 247,
											"end": 405,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 305,
											"end": 314,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 338,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 356,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 365,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 391,
											"end": 396,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 365,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 365,
											"end": 397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 365,
											"end": 397,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 365,
											"end": 397,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 356,
											"end": 398,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 356,
											"end": 398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 356,
											"end": 398,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 356,
											"end": 398,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 338,
											"end": 399,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 338,
											"end": 399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 338,
											"end": 399,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 338,
											"end": 399,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 325,
											"end": 399,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 325,
											"end": 399,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 247,
											"end": 405,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 247,
											"end": 405,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 247,
											"end": 405,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 247,
											"end": 405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 411,
											"end": 558,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 411,
											"end": 558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 545,
											"end": 550,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 506,
											"end": 551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 506,
											"end": 551,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 506,
											"end": 551,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 501,
											"end": 504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 494,
											"end": 552,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 411,
											"end": 558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 411,
											"end": 558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 411,
											"end": 558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 564,
											"end": 802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 665,
											"end": 669,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 705,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 692,
											"end": 701,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 688,
											"end": 706,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 680,
											"end": 706,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 680,
											"end": 706,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 716,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 792,
											"end": 793,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 790,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 777,
											"end": 794,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 768,
											"end": 774,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 716,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 716,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 716,
											"end": 795,
											"name": "tag",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 716,
											"end": 795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 564,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"inviter_presell/test.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test2()": "66e41cb7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/test.sol\":\"test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0xca2a03cdfd230180fd1aaefa3a34cc5938b7e9e70924166dd65c139106246859\",\"urls\":[\"bzz-raw://de29d21c4863ca9d87eeea6ab9b9f3e3037aa2dced8c5182c256cf5abfda271c\",\"dweb:/ipfs/QmRaPQLx3XvzkSELaD2FkVTRaei5bL7q5UtX2KtVjn93xo\"]},\"inviter_presell/test.sol\":{\"keccak256\":\"0x11910f4e5b66b6edeceb53b9475a4421199fa8faf3b09101d674d3f974484ad6\",\"urls\":[\"bzz-raw://67011c58069e808882fe86645a9bc4c7b7d9666d4c400bebec2084988eefc475\",\"dweb:/ipfs/QmQvS7MvGBHkimPTDq8kz2M4taV9cjq9LQTKYGCbDvfiDN\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 985,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"inviter_presell/test.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"inviter_presell/test.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"inviter_presell/test.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/test.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/test.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1613
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							1092
						],
						"ReentrancyGuard": [
							1014
						],
						"SafeERC20": [
							1316
						],
						"SafeMath": [
							1925
						],
						"StakingRewards": [
							952
						]
					},
					"id": 953,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1926,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1317,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1015,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 953,
							"sourceUnit": 1093,
							"src": "295:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Adminable",
										"nameLocations": [
											"398:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "398:9:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "398:9:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"410:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1014,
										"src": "410:15:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "410:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								1014,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "380:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "SafeMath",
										"nameLocations": [
											"438:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1925,
										"src": "438:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "432:27:1",
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 192,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "481:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "467:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1092",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "IERC20",
											"nameLocations": [
												"467:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1092,
											"src": "467:6:1"
										},
										"referencedDeclaration": 1092,
										"src": "467:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1092",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 196,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "535:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "500:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 203,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "566:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "551:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313638303030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "581:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_168000_by_1",
												"typeString": "int_const 168000"
											},
											"value": "168000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "596:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "590:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "581:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 205,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "620:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "605:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 208,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "651:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "636:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:10:1",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 211,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "698:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "683:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "722:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 214,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "745:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "730:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 216,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "797:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "782:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 218,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "833:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "818:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 222,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "897:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "862:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "870:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "862:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 226,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "961:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "926:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 225,
										"keyType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "926:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "1004:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "988:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "988:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1059:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "1023:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1031:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1042:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1120:554:1",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1139:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1131:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1131:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"baseExpression": {
														"id": 238,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1146:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 240,
													"indexExpression": {
														"id": 239,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1146:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1131:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 242,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1187:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 243,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1195:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "1184:65:1",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "1206:43:1",
													"statements": [
														{
															"expression": {
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 245,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 246,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1228:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1221:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "1221:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1267:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1259:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1297:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 255,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1303:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1309:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1303:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "1274:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1259:60:1"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1330:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 261,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "1368:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 260,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1353:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1353:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1330:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1330:43:1"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1384:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 266,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 562,
															"src": "1401:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1401:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1384:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1384:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1461:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1453:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1453:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1453:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1442:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "1438:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "1465:190:1",
													"statements": [
														{
															"expression": {
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 276,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1480:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"id": 277,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1488:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1480:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 280,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1506:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 279,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 635,
																		"src": "1499:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1499:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1480:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "1480:34:1"
														},
														{
															"expression": {
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 284,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "1529:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 286,
																	"indexExpression": {
																		"id": 285,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1552:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1529:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 287,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1563:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1529:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "1529:54:1"
														},
														{
															"expression": {
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 290,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "1598:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 292,
																	"indexExpression": {
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1617:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1598:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 293,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1628:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1634:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1628:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1598:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "1598:45:1"
														}
													]
												}
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "1665:1:1"
											}
										]
									},
									"id": 301,
									"name": "updateReward",
									"nameLocation": "1090:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1111:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:17:1"
									},
									"src": "1081:593:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1737:35:1",
										"statements": [
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1748:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1760:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1748:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1748:16:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "onlyAdmin",
												"nameLocations": [
													"1727:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "1727:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1727:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1691:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1712:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1704:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1704:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1703:14:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:0:1"
									},
									"scope": 952,
									"src": "1682:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1835:38:1",
										"statements": [
											{
												"expression": {
													"id": 318,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "1853:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 317,
												"id": 319,
												"nodeType": "Return",
												"src": "1846:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "1789:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1800:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1826:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1826:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1825:9:1"
									},
									"scope": 952,
									"src": "1780:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "1934:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 326,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1952:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1958:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "1952:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 328,
												"nodeType": "Return",
												"src": "1945:22:1"
											}
										]
									},
									"functionSelector": "9a5b17b0",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curTime",
									"nameLocation": "1890:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1897:2:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1925:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1925:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:9:1"
									},
									"scope": 952,
									"src": "1881:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2050:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 337,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2068:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 339,
													"indexExpression": {
														"id": 338,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2078:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2068:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 340,
												"nodeType": "Return",
												"src": "2061:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "1992:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2009:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2001:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:17:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2041:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2040:9:1"
									},
									"scope": 952,
									"src": "1983:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2160:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 348,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2192:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2198:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2192:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "2178:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2178:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 346,
												"id": 351,
												"nodeType": "Return",
												"src": "2171:37:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "2111:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:2:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2151:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2150:9:1"
									},
									"scope": 952,
									"src": "2102:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "2291:432:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 360,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2305:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2318:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2305:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2302:65:1",
												"trueBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "2321:46:1",
													"statements": [
														{
															"expression": {
																"id": 363,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2343:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 359,
															"id": 364,
															"nodeType": "Return",
															"src": "2336:19:1"
														}
													]
												}
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2385:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "2377:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2377:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 369,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "2394:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 370,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2401:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2394:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2393:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 373,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2414:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2393:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2429:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2393:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2377:53:1"
											},
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2449:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "2441:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2441:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"id": 380,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2457:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2441:28:1"
											},
											{
												"body": {
													"id": 402,
													"nodeType": "Block",
													"src": "2515:98:1",
													"statements": [
														{
															"expression": {
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "2530:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2538:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "2546:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 395,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "2554:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2546:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 397,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2578:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2546:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2538:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2530:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "2530:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2499:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 387,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2503:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2499:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"initializationExpression": {
													"assignments": [
														383
													],
													"declarations": [
														{
															"constant": false,
															"id": 383,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2492:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 403,
															"src": "2484:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 382,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2484:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 385,
													"initialValue": {
														"hexValue": "30",
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2496:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2484:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2510:3:1",
														"subExpression": {
															"id": 389,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2512:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 391,
													"nodeType": "ExpressionStatement",
													"src": "2510:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2480:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "2660:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 405,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "2668:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2660:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 407,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2692:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2660:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 359,
												"id": 409,
												"nodeType": "Return",
												"src": "2653:62:1"
											}
										]
									},
									"functionSelector": "5cfa91f4",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPool",
									"nameLocation": "2233:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2255:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2247:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:14:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2282:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2282:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2281:9:1"
									},
									"scope": 952,
									"src": "2224:499:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2800:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2814:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2827:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2814:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "2811:62:1",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "2830:43:1",
													"statements": [
														{
															"expression": {
																"id": 421,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2852:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 417,
															"id": 422,
															"nodeType": "Return",
															"src": "2845:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2891:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2883:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2883:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 427,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "2900:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 428,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2907:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2900:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 430,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2899:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 431,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2920:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2899:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2935:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2899:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2883:53:1"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2955:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2947:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2947:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"id": 438,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2963:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2947:28:1"
											},
											{
												"body": {
													"id": 460,
													"nodeType": "Block",
													"src": "3021:98:1",
													"statements": [
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3036:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3044:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 452,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "3052:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 453,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3060:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3052:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 455,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3084:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3052:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3044:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3036:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "3036:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 444,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "3005:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 445,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "3009:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3005:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"initializationExpression": {
													"assignments": [
														441
													],
													"declarations": [
														{
															"constant": false,
															"id": 441,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2998:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 461,
															"src": "2990:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 440,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2990:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 443,
													"initialValue": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3002:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2990:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3016:3:1",
														"subExpression": {
															"id": 447,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "3018:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 449,
													"nodeType": "ExpressionStatement",
													"src": "3016:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2986:133:1"
											},
											{
												"expression": {
													"id": 462,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "3136:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 463,
												"nodeType": "Return",
												"src": "3129:12:1"
											}
										]
									},
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRemainPool",
									"nameLocation": "2740:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2754:14:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2791:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:9:1"
									},
									"scope": 952,
									"src": "2731:418:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "3224:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 472,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3238:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3251:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3238:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "3235:62:1",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "3254:43:1",
													"statements": [
														{
															"expression": {
																"id": 475,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3276:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 471,
															"id": 476,
															"nodeType": "Return",
															"src": "3269:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													480
												],
												"declarations": [
													{
														"constant": false,
														"id": 480,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3315:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3307:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 479,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3307:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 481,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 467,
																		"src": "3324:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 482,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3331:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3324:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 484,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3323:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 485,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3344:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3323:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3359:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3323:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3307:53:1"
											},
											{
												"assignments": [
													491
												],
												"declarations": [
													{
														"constant": false,
														"id": 491,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3379:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "3371:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3371:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"id": 492,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3387:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3371:28:1"
											},
											{
												"body": {
													"id": 514,
													"nodeType": "Block",
													"src": "3445:98:1",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 504,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 491,
																	"src": "3460:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 505,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "3468:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 506,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 491,
																				"src": "3476:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 507,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3484:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3476:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 509,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3508:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3476:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3468:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3460:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "3460:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 498,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3429:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 499,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3433:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3429:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 515,
												"initializationExpression": {
													"assignments": [
														495
													],
													"declarations": [
														{
															"constant": false,
															"id": 495,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3422:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 515,
															"src": "3414:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 494,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3414:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 497,
													"initialValue": {
														"hexValue": "30",
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3426:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3414:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3440:3:1",
														"subExpression": {
															"id": 501,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 495,
															"src": "3442:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 503,
													"nodeType": "ExpressionStatement",
													"src": "3440:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3410:133:1"
											},
											{
												"expression": {
													"id": 516,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 491,
													"src": "3560:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 471,
												"id": 517,
												"nodeType": "Return",
												"src": "3553:12:1"
											}
										]
									},
									"functionSelector": "4dbdc4eb",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainPool",
									"nameLocation": "3166:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3188:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3180:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:14:1"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "3215:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:9:1"
									},
									"scope": 952,
									"src": "3157:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "3639:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 525,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3672:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3678:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3672:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 524,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "3657:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 523,
												"id": 528,
												"nodeType": "Return",
												"src": "3650:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "3590:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3606:2:1"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "3630:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3630:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3629:9:1"
									},
									"scope": 952,
									"src": "3581:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 552,
										"nodeType": "Block",
										"src": "3773:153:1",
										"statements": [
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "3792:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "3784:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3784:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 542,
												"initialValue": {
													"arguments": [
														{
															"id": 540,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "3822:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 539,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "3808:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3808:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3784:43:1"
											},
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "3846:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 552,
														"src": "3838:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 543,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3838:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"id": 547,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3877:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 545,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "3859:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3873:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1834,
														"src": "3859:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3859:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3838:52:1"
											},
											{
												"expression": {
													"id": 550,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 544,
													"src": "3908:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 536,
												"id": 551,
												"nodeType": "Return",
												"src": "3901:17:1"
											}
										]
									},
									"id": 553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "3713:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3736:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3728:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3727:14:1"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 553,
												"src": "3764:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:9:1"
									},
									"scope": 952,
									"src": "3704:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4002:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 558,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4020:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4026:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4020:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 557,
												"id": 560,
												"nodeType": "Return",
												"src": "4013:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "3945:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3969:2:1"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "3993:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3992:9:1"
									},
									"scope": 952,
									"src": "3936:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "4125:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4140:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4156:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4140:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 575,
												"nodeType": "IfStatement",
												"src": "4136:77:1",
												"trueBody": {
													"id": 574,
													"nodeType": "Block",
													"src": "4159:54:1",
													"statements": [
														{
															"expression": {
																"id": 572,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "4181:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 568,
															"id": 573,
															"nodeType": "Return",
															"src": "4174:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 590,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "4363:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 587,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4353:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 584,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 564,
																					"src": "4337:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 581,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "4317:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 578,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 562,
																								"src": "4286:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 579,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4286:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 580,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4313:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1804,
																						"src": "4286:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 582,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4286:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4333:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1819,
																				"src": "4286:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4286:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4349:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1819,
																		"src": "4286:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4286:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4359:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1834,
																"src": "4286:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4286:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 576,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4243:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4264:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1789,
														"src": "4243:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4243:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 568,
												"id": 593,
												"nodeType": "Return",
												"src": "4223:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "4060:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4083:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4075:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4075:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4074:20:1"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "4116:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:9:1"
									},
									"scope": 952,
									"src": "4051:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "4470:233:1",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "4489:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "4481:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4481:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 611,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 605,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4519:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 607,
															"indexExpression": {
																"id": 606,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "4538:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4519:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 608,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4548:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4554:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4548:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 604,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "4496:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4496:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4481:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 629,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "4678:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 631,
															"indexExpression": {
																"id": 630,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 597,
																"src": "4686:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4678:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4668:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 620,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 222,
																						"src": "4630:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 622,
																					"indexExpression": {
																						"id": 621,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 597,
																						"src": "4653:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4630:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 617,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 603,
																							"src": "4620:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 616,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 595,
																						"src": "4605:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 618,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4605:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4626:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1804,
																				"src": "4605:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4605:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 612,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "4582:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 614,
																			"indexExpression": {
																				"id": 613,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 597,
																				"src": "4592:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4582:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4601:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1819,
																		"src": "4582:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4582:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4664:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1834,
																"src": "4582:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4582:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4674:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1789,
														"src": "4582:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4582:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 601,
												"id": 633,
												"nodeType": "Return",
												"src": "4575:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "4416:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4431:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4423:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4422:17:1"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4461:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4461:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4460:9:1"
									},
									"scope": 952,
									"src": "4407:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "4844:1285:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "4868:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4881:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4868:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 647,
																"name": "leftTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 637,
																"src": "4886:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 648,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "4898:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4886:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4868:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 651,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "4911:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4923:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4911:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4868:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 658,
												"nodeType": "IfStatement",
												"src": "4865:96:1",
												"trueBody": {
													"id": 657,
													"nodeType": "Block",
													"src": "4926:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4948:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 643,
															"id": 656,
															"nodeType": "Return",
															"src": "4941:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 659,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 637,
														"src": "4976:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 660,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4987:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4976:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "4973:72:1",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "4998:47:1",
													"statements": [
														{
															"expression": {
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 662,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5013:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 663,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5024:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5013:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 665,
															"nodeType": "ExpressionStatement",
															"src": "5013:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "5065:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5057:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5057:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 681,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 670,
																	"name": "rateInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "5081:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 671,
																					"name": "leftTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 637,
																					"src": "5097:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 672,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "5108:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5097:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 674,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5096:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 675,
																		"name": "rateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "5121:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5081:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 678,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5080:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 679,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5137:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5080:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5057:92:1"
											},
											{
												"assignments": [
													683
												],
												"declarations": [
													{
														"constant": false,
														"id": 683,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "5168:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5160:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5160:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 685,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "5195:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 684,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5181:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5181:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 687,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5207:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5181:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 689,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5222:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5181:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5160:74:1"
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "5255:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5247:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5247:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 700,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "5272:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 695,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5284:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5272:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 697,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5271:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 698,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5297:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5271:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5247:62:1"
											},
											{
												"assignments": [
													702
												],
												"declarations": [
													{
														"constant": false,
														"id": 702,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "5328:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5320:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 701,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5320:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 710,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 704,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "5356:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 703,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "5342:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5342:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 706,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "5369:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5342:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 708,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5385:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5342:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5320:77:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 713,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 711,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "5413:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 712,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "5424:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5413:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 714,
														"name": "rightTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "5439:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5413:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 721,
												"nodeType": "IfStatement",
												"src": "5410:98:1",
												"trueBody": {
													"id": 720,
													"nodeType": "Block",
													"src": "5450:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 717,
																		"name": "leftTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 637,
																		"src": "5487:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 716,
																	"name": "_getRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 553,
																	"src": "5472:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5472:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 643,
															"id": 719,
															"nodeType": "Return",
															"src": "5465:31:1"
														}
													]
												}
											},
											{
												"assignments": [
													723
												],
												"declarations": [
													{
														"constant": false,
														"id": 723,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "5528:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5520:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 722,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 728,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 724,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "5542:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 725,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "5554:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5542:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 727,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "5570:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5542:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 729,
														"name": "leftInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "5581:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5542:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5520:73:1"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "5612:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5604:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5604:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "5640:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 734,
														"name": "getRemainPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5626:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5626:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5604:45:1"
											},
											{
												"assignments": [
													739
												],
												"declarations": [
													{
														"constant": false,
														"id": 739,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "5669:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5661:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5661:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"hexValue": "30",
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5686:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5661:26:1"
											},
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "5706:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5698:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5698:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 745,
												"initialValue": {
													"hexValue": "30",
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5719:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5698:22:1"
											},
											{
												"assignments": [
													747
												],
												"declarations": [
													{
														"constant": false,
														"id": 747,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5739:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5731:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 746,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5731:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 749,
												"initialValue": {
													"id": 748,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "5747:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5731:27:1"
											},
											{
												"assignments": [
													751
												],
												"declarations": [
													{
														"constant": false,
														"id": 751,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "5777:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "5769:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5769:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 752,
														"name": "midInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "5785:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 753,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5799:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5785:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5769:42:1"
											},
											{
												"body": {
													"id": 784,
													"nodeType": "Block",
													"src": "5857:179:1",
													"statements": [
														{
															"expression": {
																"id": 772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 766,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "5872:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "5885:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 768,
																			"name": "rateIntervalNumerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "5893:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5885:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 770,
																		"name": "rateIntervalDenominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "5917:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5885:55:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5872:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 773,
															"nodeType": "ExpressionStatement",
															"src": "5872:68:1"
														},
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 774,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5955:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 775,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 747,
																		"src": "5963:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 776,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 743,
																		"src": "5971:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5963:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5955:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "5955:26:1"
														},
														{
															"expression": {
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 780,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 739,
																	"src": "5996:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 781,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "6014:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5996:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "5996:28:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 760,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "5841:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 761,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 751,
														"src": "5845:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5841:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 785,
												"initializationExpression": {
													"assignments": [
														757
													],
													"declarations": [
														{
															"constant": false,
															"id": 757,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5834:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 785,
															"src": "5826:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 756,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5826:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 759,
													"initialValue": {
														"hexValue": "30",
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5838:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5826:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 764,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5852:3:1",
														"subExpression": {
															"id": 763,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "5854:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 765,
													"nodeType": "ExpressionStatement",
													"src": "5852:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5822:214:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 786,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 739,
																		"src": "6054:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 787,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "6071:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6054:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 789,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 702,
																	"src": "6084:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6054:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 791,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6053:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 794,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 792,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 639,
																	"src": "6100:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 793,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 637,
																	"src": "6112:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6100:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 795,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6099:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6053:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 643,
												"id": 797,
												"nodeType": "Return",
												"src": "6046:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "4755:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "4786:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "4778:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "4804:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "4796:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4777:37:1"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "4836:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4835:9:1"
									},
									"scope": 952,
									"src": "4746:1383:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "6235:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "6254:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6263:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6254:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 817,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6266:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6246:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6246:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 819,
												"nodeType": "ExpressionStatement",
												"src": "6246:37:1"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 820,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "6294:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 823,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "6326:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 821,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "6309:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6322:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1789,
															"src": "6309:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6309:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6294:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "6294:39:1"
											},
											{
												"expression": {
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 827,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6344:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 829,
														"indexExpression": {
															"id": 828,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6354:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6344:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 834,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 803,
																"src": "6382:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 830,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6362:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 832,
																"indexExpression": {
																	"id": 831,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 801,
																	"src": "6372:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6362:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6378:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1789,
															"src": "6362:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6362:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6344:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 837,
												"nodeType": "ExpressionStatement",
												"src": "6344:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 839,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "6412:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 840,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "6418:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 838,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "6405:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6405:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "EmitStatement",
												"src": "6400:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 806,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 805,
												"name": "nonReentrant",
												"nameLocations": [
													"6193:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1013,
												"src": "6193:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6193:12:1"
										},
										{
											"id": 808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 807,
												"name": "onlyAdmin",
												"nameLocations": [
													"6206:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "6206:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6206:9:1"
										},
										{
											"arguments": [
												{
													"id": 810,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "6229:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 811,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 809,
												"name": "updateReward",
												"nameLocations": [
													"6216:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "6216:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6216:18:1"
										}
									],
									"name": "stake",
									"nameLocation": "6148:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6162:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6154:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 800,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6154:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6176:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6168:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6153:30:1"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6235:0:1"
									},
									"scope": 952,
									"src": "6139:294:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 886,
										"nodeType": "Block",
										"src": "6513:237:1",
										"statements": [
											{
												"assignments": [
													854
												],
												"declarations": [
													{
														"constant": false,
														"id": 854,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6532:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 886,
														"src": "6524:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 853,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6524:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"baseExpression": {
														"id": 855,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "6541:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 858,
													"indexExpression": {
														"expression": {
															"id": 856,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6549:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6553:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6549:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6541:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6524:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "6575:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6584:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6575:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "6571:172:1",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "6587:156:1",
													"statements": [
														{
															"expression": {
																"id": 868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 863,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "6602:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 866,
																	"indexExpression": {
																		"expression": {
																			"id": 864,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6610:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6614:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6610:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6602:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6624:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6602:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"nodeType": "ExpressionStatement",
															"src": "6602:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 873,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6662:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6666:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6662:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 875,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "6674:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 870,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "6640:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1092",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6653:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1041,
																	"src": "6640:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6640:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "6640:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 879,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6712:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6716:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6712:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 881,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 854,
																		"src": "6724:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 878,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "6701:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6701:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "EmitStatement",
															"src": "6696:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 887,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 847,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 846,
												"name": "nonReentrant",
												"nameLocations": [
													"6475:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1013,
												"src": "6475:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6475:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 849,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6501:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6505:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6501:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 851,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 848,
												"name": "updateReward",
												"nameLocations": [
													"6488:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "6488:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6488:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "6454:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6463:2:1"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6513:0:1"
									},
									"scope": 952,
									"src": "6445:305:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "6816:47:1",
										"statements": [
											{
												"expression": {
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "6827:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1092",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 896,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "6849:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 895,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "6842:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1092_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6842:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1092",
															"typeString": "contract IERC20"
														}
													},
													"src": "6827:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "6827:28:1"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "onlyOwner",
												"nameLocations": [
													"6806:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "6806:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6806:9:1"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "6767:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6790:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "6782:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6781:15:1"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6816:0:1"
									},
									"scope": 952,
									"src": "6758:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 907,
									"name": "Staked",
									"nameLocation": "6883:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6906:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6890:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6890:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6920:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6912:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6912:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6889:38:1"
									},
									"src": "6877:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 913,
									"name": "RewardPaid",
									"nameLocation": "6940:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6967:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "6951:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6981:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 913,
												"src": "6973:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6973:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6950:38:1"
									},
									"src": "6934:55:1"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "7045:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 926,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7090:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$952",
																			"typeString": "contract StakingRewards"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingRewards_$952",
																			"typeString": "contract StakingRewards"
																		}
																	],
																	"id": 925,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7082:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 924,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7082:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7082:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7096:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7082:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 920,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "7064:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7064:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7056:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 918,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7056:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7056:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7073:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7056:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7056:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "7056:48:1"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 916,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 915,
												"name": "onlyOwner",
												"nameLocations": [
													"7035:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7035:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7035:9:1"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7006:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7023:2:1"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7045:0:1"
									},
									"scope": 952,
									"src": "6997:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "7202:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7236:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7240:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7236:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 947,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 936,
															"src": "7248:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 942,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "7220:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 941,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "7213:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1092_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7213:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															}
														},
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7227:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1041,
														"src": "7213:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7213:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 949,
												"nodeType": "ExpressionStatement",
												"src": "7213:42:1"
											}
										]
									},
									"functionSelector": "a4c3b091",
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 939,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 938,
												"name": "onlyOwner",
												"nameLocations": [
													"7192:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7192:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7192:9:1"
										}
									],
									"name": "emergencyWithdrawToken",
									"nameLocation": "7129:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7160:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7152:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7152:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7175:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "7167:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7151:31:1"
									},
									"returnParameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7202:0:1"
									},
									"scope": 952,
									"src": "7120:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 953,
							"src": "371:6895:1",
							"usedErrors": []
						}
					],
					"src": "0:7266:1"
				},
				"id": 1
			},
			"inviter_presell/test.sol": {
				"ast": {
					"absolutePath": "inviter_presell/test.sol",
					"exportedSymbols": {
						"Address": [
							1613
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							1092
						],
						"ReentrancyGuard": [
							1014
						],
						"SafeERC20": [
							1316
						],
						"SafeMath": [
							1925
						],
						"StakingRewards": [
							952
						],
						"test": [
							974
						]
					},
					"id": 975,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 954,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"absolutePath": "inviter_presell/stake.sol",
							"file": "./stake.sol",
							"id": 955,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 975,
							"sourceUnit": 953,
							"src": "28:21:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "test",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974
							],
							"name": "test",
							"nameLocation": "62:4:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 965,
										"nodeType": "Block",
										"src": "99:93:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 962,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "182:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "307830356338644331353531353330303732354662303238393936373845334143393544323634313834",
																	"id": 959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "125:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"value": "0x05c8dC15515300725Fb02899678E3AC95D264184"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 958,
																"name": "StakingRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 952,
																"src": "110:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StakingRewards_$952_$",
																	"typeString": "type(contract StakingRewards)"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "110:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_StakingRewards_$952",
																"typeString": "contract StakingRewards"
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "169:12:2",
														"memberName": "setStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 313,
														"src": "110:71:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "110:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 964,
												"nodeType": "ExpressionStatement",
												"src": "110:74:2"
											}
										]
									},
									"id": 966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test1",
									"nameLocation": "83:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "88:2:2"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "99:0:2"
									},
									"scope": 974,
									"src": "74:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "225:26:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 969,
														"name": "test1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "236:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "236:7:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 971,
												"nodeType": "ExpressionStatement",
												"src": "236:7:2"
											}
										]
									},
									"functionSelector": "66e41cb7",
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test2",
									"nameLocation": "209:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "214:2:2"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:0:2"
									},
									"scope": 974,
									"src": "200:51:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 975,
							"src": "53:201:2",
							"usedErrors": []
						}
					],
					"src": "0:254:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1014
						]
					},
					"id": 1015,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 976,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 977,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 980,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "1661:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 978,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 979,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 983,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "1708:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 982,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 985,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "1752:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "1796:39:3",
										"statements": [
											{
												"expression": {
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 988,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "1806:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 989,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "1816:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 991,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:3"
											}
										]
									},
									"id": 993,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:3"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:3"
									},
									"scope": 1014,
									"src": "1782:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "2236:421:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 997,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "2325:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 998,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "2336:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 996,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:3"
											},
											{
												"expression": {
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2455:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1004,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2465:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1006,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:3"
											},
											{
												"id": 1007,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:3"
											},
											{
												"expression": {
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1008,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "2628:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1009,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 980,
														"src": "2638:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:3"
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1013,
									"name": "nonReentrant",
									"nameLocation": "2221:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:3"
									},
									"src": "2212:445:3",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1015,
							"src": "873:1786:3",
							"usedErrors": []
						}
					],
					"src": "97:2563:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1092
						]
					},
					"id": 1093,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:4",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1092,
							"linearizedBaseContracts": [
								1092
							],
							"name": "IERC20",
							"nameLocation": "197:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:4",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:4"
									},
									"returnParameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1023,
												"src": "327:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:4"
									},
									"scope": 1092,
									"src": "281:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1024,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:4",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "438:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "478:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:4"
									},
									"scope": 1092,
									"src": "419:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:4",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1041,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "725:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "744:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:4"
									},
									"returnParameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "778:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1038,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:4"
									},
									"scope": 1092,
									"src": "707:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1042,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1051,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1078:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1093:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:4"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "1133:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:4"
									},
									"scope": 1092,
									"src": "1059:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:4",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1812:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1829:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "1863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:4"
									},
									"scope": 1092,
									"src": "1795:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:4",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2207:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2231:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2258:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:4"
									},
									"returnParameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1073,
												"src": "2297:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1070,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:4"
									},
									"scope": 1092,
									"src": "2176:127:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1082,
									"name": "Transfer",
									"nameLocation": "2478:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2487:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2509:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2529:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:4"
									},
									"src": "2472:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1091,
									"name": "Approval",
									"nameLocation": "2709:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2718:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2741:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2766:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:4"
									},
									"src": "2703:78:4"
								}
							],
							"scope": 1093,
							"src": "187:2596:4",
							"usedErrors": []
						}
					],
					"src": "91:2693:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1613
						],
						"IERC20": [
							1092
						],
						"SafeERC20": [
							1316
						]
					},
					"id": 1317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1094,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:5"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1095,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1317,
							"sourceUnit": 1093,
							"src": "125:23:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1096,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1317,
							"sourceUnit": 1614,
							"src": "149:36:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1097,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:5",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1316,
							"linearizedBaseContracts": [
								1316
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1100,
									"libraryName": {
										"id": 1098,
										"name": "Address",
										"nameLocations": [
											"675:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1613,
										"src": "675:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:5",
									"typeName": {
										"id": 1099,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:5",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1122,
										"nodeType": "Block",
										"src": "803:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1111,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1103,
															"src": "833:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1114,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1103,
																			"src": "863:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1092",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:5",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1041,
																		"src": "863:14:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1117,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "888:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1118,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "892:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1112,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1110,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "813:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1092_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "813:86:5"
											}
										]
									},
									"id": 1123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "732:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1102,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1101,
														"name": "IERC20",
														"nameLocations": [
															"732:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "732:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "732:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "754:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1123,
												"src": "774:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:5"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:5"
									},
									"scope": 1316,
									"src": "701:205:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "1040:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1136,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1126,
															"src": "1070:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1139,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1126,
																			"src": "1100:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1092",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:5",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1073,
																		"src": "1100:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1142,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1128,
																	"src": "1129:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1143,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1130,
																	"src": "1135:2:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1144,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "1139:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1137,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1135,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "1050:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1092_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:5"
											}
										]
									},
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "947:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1125,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1124,
														"name": "IERC20",
														"nameLocations": [
															"947:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "947:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "947:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "969:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "991:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "1011:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:5"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:5"
									},
									"scope": 1316,
									"src": "912:241:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "1519:497:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1163,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1161,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "1768:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1164,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1169,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1316",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1316",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1167,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:5",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1171,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "1815:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1165,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "1784:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1092",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:5",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1051,
																				"src": "1784:15:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1172,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "1939:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1184,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "1969:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1092",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1061,
																		"src": "1969:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1186,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1187,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "1993:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1188,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "2002:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1182,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1180,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "1919:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1092_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:5"
											}
										]
									},
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:5",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1443:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1152,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1151,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "1443:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "1443:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1465:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1490:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:5"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:5"
									},
									"scope": 1316,
									"src": "1413:603:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "2138:194:5",
										"statements": [
											{
												"assignments": [
													1204
												],
												"declarations": [
													{
														"constant": false,
														"id": 1204,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "2148:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1203,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1215,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1209,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1316",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1316",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1211,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "2202:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1205,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "2171:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1092",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:5",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1051,
															"src": "2171:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1213,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "2213:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "2248:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1220,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1196,
																			"src": "2278:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1092",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:5",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1061,
																		"src": "2278:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:5",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1223,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "2302:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1224,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1204,
																	"src": "2311:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1218,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:5",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1092",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1216,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "2228:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1092_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:5"
											}
										]
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2062:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1195,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1194,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "2062:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "2062:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2084:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2109:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:5"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:5"
									},
									"scope": 1316,
									"src": "2022:310:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1276,
										"nodeType": "Block",
										"src": "2454:370:5",
										"statements": [
											{
												"id": 1275,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:5",
												"statements": [
													{
														"assignments": [
															1240
														],
														"declarations": [
															{
																"constant": false,
																"id": 1240,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 1275,
																"src": "2488:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1239,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1249,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1245,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1316",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1316",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1243,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1247,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1234,
																	"src": "2542:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1241,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2511:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1092",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:5",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1051,
																"src": "2511:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1251,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1240,
																		"src": "2572:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1252,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "2588:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1254,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1250,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1256,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:5"
													},
													{
														"assignments": [
															1258
														],
														"declarations": [
															{
																"constant": false,
																"id": 1258,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:5",
																"nodeType": "VariableDeclaration",
																"scope": 1275,
																"src": "2653:20:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1257,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1262,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1240,
																"src": "2676:12:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1260,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "2691:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:5"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1264,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1232,
																	"src": "2730:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1092",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1267,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1232,
																					"src": "2760:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1092",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:5",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1061,
																				"src": "2760:13:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:5",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1270,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1234,
																			"src": "2784:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1271,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "2793:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1265,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1266,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:5",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1092",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1263,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "2710:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1092_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1274,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:5"
													}
												]
											}
										]
									},
									"id": 1277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2378:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1231,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1230,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "2378:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "2378:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2400:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2425:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:5"
									},
									"scope": 1316,
									"src": "2338:486:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "3277:636:5",
										"statements": [
											{
												"assignments": [
													1287
												],
												"declarations": [
													{
														"constant": false,
														"id": 1287,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1314,
														"src": "3626:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1286,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1296,
												"initialValue": {
													"arguments": [
														{
															"id": 1293,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "3680:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1290,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1281,
																	"src": "3660:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1092",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1092",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1288,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:5",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1407,
														"src": "3652:27:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1297,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "3735:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1313,
												"nodeType": "IfStatement",
												"src": "3731:176:5",
												"trueBody": {
													"id": 1312,
													"nodeType": "Block",
													"src": "3758:149:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1304,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1287,
																				"src": "3830:10:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1306,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1305,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:5",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1307,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1302,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:5",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1301,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1311,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1278,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:5",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3236:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1092",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1279,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:5"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1092,
														"src": "3236:6:5"
													},
													"referencedDeclaration": 1092,
													"src": "3236:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1092",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3250:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:5"
									},
									"returnParameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:5"
									},
									"scope": 1316,
									"src": "3207:706:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1317,
							"src": "645:3270:5",
							"usedErrors": []
						}
					],
					"src": "100:3816:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1613
						]
					},
					"id": 1614,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1319,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1613,
							"linearizedBaseContracts": [
								1613
							],
							"name": "Address",
							"nameLocation": "187:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1335,
										"nodeType": "Block",
										"src": "837:311:6",
										"statements": [
											{
												"assignments": [
													1328
												],
												"declarations": [
													{
														"constant": false,
														"id": 1328,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 1335,
														"src": "1034:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1327,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1329,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:6"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:6"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:6"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1322,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:6",
														"valueSize": 1
													},
													{
														"declaration": 1328,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:6",
														"valueSize": 1
													}
												],
												"id": 1330,
												"nodeType": "InlineAssembly",
												"src": "1056:61:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1331,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "1133:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1334,
												"nodeType": "Return",
												"src": "1126:15:6"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "791:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:6"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "831:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:6"
									},
									"scope": 1613,
									"src": "771:377:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "2136:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1347,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1613",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1613",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1345,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2168:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1350,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "2179:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1344,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1354,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:6"
											},
											{
												"assignments": [
													1356,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1356,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "2231:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1355,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1363,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1357,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1339,
																"src": "2249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "2271:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1365,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1356,
															"src": "2300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1364,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1368,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:6"
											}
										]
									},
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2084:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "2111:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:6"
									},
									"returnParameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:6"
									},
									"scope": 1613,
									"src": "2065:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "3208:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1381,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "3238:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1382,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "3246:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1380,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1387,
															1407
														],
														"referencedDeclaration": 1407,
														"src": "3225:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1385,
												"nodeType": "Return",
												"src": "3218:67:6"
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3141:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3157:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:6"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3194:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1377,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:6"
									},
									"scope": 1613,
									"src": "3119:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "3661:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1400,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1390,
															"src": "3700:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1401,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "3708:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1403,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1394,
															"src": "3717:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1399,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1477
														],
														"referencedDeclaration": 1477,
														"src": "3678:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1398,
												"id": 1405,
												"nodeType": "Return",
												"src": "3671:59:6"
											}
										]
									},
									"documentation": {
										"id": 1388,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3545:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3569:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1393,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:6"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1407,
												"src": "3647:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1396,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:6"
									},
									"scope": 1613,
									"src": "3514:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "4242:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1420,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1410,
															"src": "4281:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1421,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1412,
															"src": "4289:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1422,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1414,
															"src": "4295:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1419,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1477
														],
														"referencedDeclaration": 1477,
														"src": "4259:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1418,
												"id": 1425,
												"nodeType": "Return",
												"src": "4252:94:6"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "4139:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "4163:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1411,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "4190:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:6"
									},
									"returnParameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "4228:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:6"
									},
									"scope": 1613,
									"src": "4099:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "4780:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1444,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1613",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1613",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1442,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4812:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1447,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "4823:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1441,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1454,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "4900:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1453,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "4889:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:6"
											},
											{
												"assignments": [
													1460,
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1476,
														"src": "4953:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1459,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1476,
														"src": "4967:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1461,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1469,
												"initialValue": {
													"arguments": [
														{
															"id": 1467,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "5020:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1463,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "4994:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5001:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "5013:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1471,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "5059:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1472,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "5068:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1473,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1436,
															"src": "5080:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1470,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "5042:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1440,
												"id": 1475,
												"nodeType": "Return",
												"src": "5035:58:6"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4641:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4665:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4692:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4715:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1435,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:6"
									},
									"returnParameters": {
										"id": 1440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "4766:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1438,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:6"
									},
									"scope": 1613,
									"src": "4601:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "5377:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1488,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1480,
															"src": "5413:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1489,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1482,
															"src": "5421:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1487,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1494,
															1529
														],
														"referencedDeclaration": 1529,
														"src": "5394:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1492,
												"nodeType": "Return",
												"src": "5387:80:6"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "5305:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "5321:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:6"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "5363:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1484,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:6"
									},
									"scope": 1613,
									"src": "5277:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "5816:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1508,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1497,
																	"src": "5845:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1507,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "5834:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:6"
											},
											{
												"assignments": [
													1514,
													1516
												],
												"declarations": [
													{
														"constant": false,
														"id": 1514,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5905:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1513,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1516,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1528,
														"src": "5919:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1515,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"arguments": [
														{
															"id": 1519,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "5964:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1517,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1497,
															"src": "5946:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5953:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1523,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1514,
															"src": "6003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1524,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1516,
															"src": "6012:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1525,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1501,
															"src": "6024:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1522,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "5986:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1505,
												"id": 1527,
												"nodeType": "Return",
												"src": "5979:58:6"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5695:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5719:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1498,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5746:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1500,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:6"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "5802:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1503,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:6"
									},
									"scope": 1613,
									"src": "5658:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "6320:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1540,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "6358:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "6366:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1539,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1546,
															1581
														],
														"referencedDeclaration": 1581,
														"src": "6337:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1538,
												"id": 1544,
												"nodeType": "Return",
												"src": "6330:84:6"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "6253:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "6269:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1533,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:6"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "6306:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1536,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:6"
									},
									"scope": 1613,
									"src": "6223:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1580,
										"nodeType": "Block",
										"src": "6762:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1560,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "6791:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1559,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1336,
																"src": "6780:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1564,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:6"
											},
											{
												"assignments": [
													1566,
													1568
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "6853:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1565,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1568,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1580,
														"src": "6867:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1567,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1573,
												"initialValue": {
													"arguments": [
														{
															"id": 1571,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "6914:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1569,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "6894:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1570,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6901:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1575,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "6953:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1576,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "6962:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1577,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1553,
															"src": "6974:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1574,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1612,
														"src": "6936:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1557,
												"id": 1579,
												"nodeType": "Return",
												"src": "6929:58:6"
											}
										]
									},
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6646:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6670:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1550,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6697:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:6"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1581,
												"src": "6748:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:6"
									},
									"scope": 1613,
									"src": "6607:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "7374:532:6",
										"statements": [
											{
												"condition": {
													"id": 1593,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1584,
													"src": "7388:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1609,
													"nodeType": "Block",
													"src": "7445:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1597,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1586,
																		"src": "7529:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1598,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7540:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1607,
																"nodeType": "Block",
																"src": "7837:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1604,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1588,
																					"src": "7862:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1603,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1606,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:6"
																	}
																]
															},
															"id": 1608,
															"nodeType": "IfStatement",
															"src": "7525:365:6",
															"trueBody": {
																"id": 1602,
																"nodeType": "Block",
																"src": "7552:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:6"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1586,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1586,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 1601,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "7384:516:6",
												"trueBody": {
													"id": 1596,
													"nodeType": "Block",
													"src": "7397:42:6",
													"statements": [
														{
															"expression": {
																"id": 1594,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1586,
																"src": "7418:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1592,
															"id": 1595,
															"nodeType": "Return",
															"src": "7411:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1582,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7249:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7271:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7304:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1587,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:6"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "7360:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:6"
									},
									"scope": 1613,
									"src": "7214:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1614,
							"src": "179:7729:6",
							"usedErrors": []
						}
					],
					"src": "86:7823:6"
				},
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1615,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1616,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1925,
							"linearizedBaseContracts": [
								1925
							],
							"name": "SafeMath",
							"nameLocation": "475:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1647,
										"nodeType": "Block",
										"src": "702:140:7",
										"statements": [
											{
												"id": 1646,
												"nodeType": "UncheckedBlock",
												"src": "712:124:7",
												"statements": [
													{
														"assignments": [
															1629
														],
														"declarations": [
															{
																"constant": false,
																"id": 1629,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1646,
																"src": "736:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1628,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1633,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1630,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "748:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "752:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1634,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1629,
																"src": "771:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1635,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1619,
																"src": "775:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1641,
														"nodeType": "IfStatement",
														"src": "767:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1637,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1639,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1627,
															"id": 1640,
															"nodeType": "Return",
															"src": "778:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1643,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1629,
																	"src": "823:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1644,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1627,
														"id": 1645,
														"nodeType": "Return",
														"src": "809:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "642:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "653:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:7"
									},
									"returnParameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "687:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1648,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:7"
									},
									"scope": 1925,
									"src": "626:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1675,
										"nodeType": "Block",
										"src": "1064:113:7",
										"statements": [
											{
												"id": 1674,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "1102:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1661,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1651,
																"src": "1106:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1667,
														"nodeType": "IfStatement",
														"src": "1098:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1665,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1659,
															"id": 1666,
															"nodeType": "Return",
															"src": "1109:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1669,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1651,
																		"src": "1154:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1670,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "1158:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1672,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1659,
														"id": 1673,
														"nodeType": "Return",
														"src": "1140:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1649,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:7",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1651,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1004:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1015:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1049:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1658,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1676,
												"src": "1055:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:7"
									},
									"scope": 1925,
									"src": "988:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "1401:417:7",
										"statements": [
											{
												"id": 1716,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1688,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "1669:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1695,
														"nodeType": "IfStatement",
														"src": "1665:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1693,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1687,
															"id": 1694,
															"nodeType": "Return",
															"src": "1677:16:7"
														}
													},
													{
														"assignments": [
															1697
														],
														"declarations": [
															{
																"constant": false,
																"id": 1697,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1716,
																"src": "1707:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1696,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1701,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1698,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1679,
																"src": "1719:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1699,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "1723:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1702,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "1742:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1703,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "1746:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1705,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "1751:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1711,
														"nodeType": "IfStatement",
														"src": "1738:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1709,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1687,
															"id": 1710,
															"nodeType": "Return",
															"src": "1754:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1713,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1697,
																	"src": "1799:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1714,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1687,
														"id": 1715,
														"nodeType": "Return",
														"src": "1785:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1677,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1341:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1352:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:7"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1386:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1683,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "1392:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:7"
									},
									"scope": 1925,
									"src": "1325:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "2043:114:7",
										"statements": [
											{
												"id": 1744,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1730,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1723,
																"src": "2081:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1737,
														"nodeType": "IfStatement",
														"src": "2077:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1735,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1729,
															"id": 1736,
															"nodeType": "Return",
															"src": "2089:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1739,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1721,
																		"src": "2134:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1740,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "2138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1729,
														"id": 1743,
														"nodeType": "Return",
														"src": "2120:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1719,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "1983:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "1994:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:7"
									},
									"returnParameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2028:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2034:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:7"
									},
									"scope": 1925,
									"src": "1967:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "2392:114:7",
										"statements": [
											{
												"id": 1772,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1758,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1751,
																"src": "2430:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1765,
														"nodeType": "IfStatement",
														"src": "2426:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1762,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1763,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1757,
															"id": 1764,
															"nodeType": "Return",
															"src": "2438:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1767,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "2483:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1768,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "2487:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1770,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1757,
														"id": 1771,
														"nodeType": "Return",
														"src": "2469:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2332:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2343:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:7"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "2383:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:7"
									},
									"scope": 1925,
									"src": "2316:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1788,
										"nodeType": "Block",
										"src": "2808:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1784,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "2825:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1785,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "2829:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1783,
												"id": 1787,
												"nodeType": "Return",
												"src": "2818:12:7"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2754:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2765:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:7"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1789,
												"src": "2799:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:7"
									},
									"scope": 1925,
									"src": "2741:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1803,
										"nodeType": "Block",
										"src": "3175:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1799,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "3192:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1800,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1794,
														"src": "3196:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1802,
												"nodeType": "Return",
												"src": "3185:12:7"
											}
										]
									},
									"documentation": {
										"id": 1790,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1792,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3121:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3132:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:7"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1804,
												"src": "3166:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:7"
									},
									"scope": 1925,
									"src": "3108:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "3518:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1814,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "3535:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1815,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1809,
														"src": "3539:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1813,
												"id": 1817,
												"nodeType": "Return",
												"src": "3528:12:7"
											}
										]
									},
									"documentation": {
										"id": 1805,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3464:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3475:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:7"
									},
									"returnParameters": {
										"id": 1813,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "3509:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:7"
									},
									"scope": 1925,
									"src": "3451:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "3903:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1829,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "3920:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1830,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "3924:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1828,
												"id": 1832,
												"nodeType": "Return",
												"src": "3913:12:7"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "3849:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "3860:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:7"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1834,
												"src": "3894:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:7"
									},
									"scope": 1925,
									"src": "3836:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1848,
										"nodeType": "Block",
										"src": "4452:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1844,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1837,
														"src": "4469:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1845,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "4473:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1847,
												"nodeType": "Return",
												"src": "4462:12:7"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1849,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4398:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4409:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:7"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1849,
												"src": "4443:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:7"
									},
									"scope": 1925,
									"src": "4385:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "5070:106:7",
										"statements": [
											{
												"id": 1872,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1864,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1862,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1854,
																		"src": "5112:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1863,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1852,
																		"src": "5117:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1865,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1856,
																	"src": "5120:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1861,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1867,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1868,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1852,
																"src": "5154:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1869,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1854,
																"src": "5158:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1860,
														"id": 1871,
														"nodeType": "Return",
														"src": "5147:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "4967:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "4986:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5005:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1855,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:7"
									},
									"returnParameters": {
										"id": 1860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "5061:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:7"
									},
									"scope": 1925,
									"src": "4945:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1898,
										"nodeType": "Block",
										"src": "5785:105:7",
										"statements": [
											{
												"id": 1897,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1887,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1879,
																		"src": "5827:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1890,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1881,
																	"src": "5834:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1886,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1892,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1877,
																"src": "5868:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1894,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1879,
																"src": "5872:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1885,
														"id": 1896,
														"nodeType": "Return",
														"src": "5861:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5682:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5701:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1881,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5720:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1880,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:7"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1899,
												"src": "5776:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:7"
									},
									"scope": 1925,
									"src": "5660:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "6661:105:7",
										"statements": [
											{
												"id": 1922,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1912,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1904,
																		"src": "6703:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1913,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1915,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1906,
																	"src": "6710:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1911,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1917,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1918,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1902,
																"src": "6744:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1919,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1904,
																"src": "6748:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1910,
														"id": 1921,
														"nodeType": "Return",
														"src": "6737:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1900,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "6558:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "6577:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "6596:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1905,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:7"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "6652:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:7"
									},
									"scope": 1925,
									"src": "6536:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1926,
							"src": "467:6301:7",
							"usedErrors": []
						}
					],
					"src": "92:6677:7"
				},
				"id": 7
			}
		}
	}
}
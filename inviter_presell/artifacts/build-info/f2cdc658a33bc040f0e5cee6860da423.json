{
	"id": "f2cdc658a33bc040f0e5cee6860da423",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 400 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 1 minutes;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n\r\n    uint256 private _totalPowers;\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time <= startTime) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setStartTime(uint256 time) public onlyAdmin {\r\n        startTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function curTime() external  view  returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function getRewardPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function getRemainPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval;\r\n        uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        if(leftTime + leftInterval > rightTime) {\r\n            return _getRewardRate(leftTime);\r\n        }\r\n\r\n        uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval;\r\n        uint256 startReward = getRemainPool(leftTime); \r\n        uint256 midTotalReward = 0;\r\n        uint256 nextReward = 0;\r\n        uint256 value = startReward;\r\n        uint256 times = midInterval / rateInterval;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            nextReward = value * rateIntervalNumerator / rateIntervalDenominator;\r\n            value = value - nextReward;\r\n            midTotalReward += nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "curTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRemainPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":371:6422  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":581:595  400 * 10 ** 18 */\n  0x15af1d78b58c400000\n    /* \"inviter_presell/stake.sol\":551:595  uint256 public totalRewards = 400 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":663:672  1 minutes */\n  0x3c\n    /* \"inviter_presell/stake.sol\":633:672  uint256 public rateInterval = 1 minutes */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":718:719  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":679:719  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":767:771  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":726:771  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":371:6422  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  tag_8\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1852  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"inviter_presell/stake.sol\":371:6422  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  swap2\n  and\n  swap2\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  swap1\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  dup3\n  swap1\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n  swap1\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":371:6422  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":371:6422  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80faa57d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xadc9772e\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xadc9772e\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb79ec812\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8b876347\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x9a5b17b0\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x80faa57d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8107368b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x3e0a322d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x6917c501\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x3e0a322d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4dbdc4eb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5cfa91f4\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x18e20ecf\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":3942:4238  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"inviter_presell/stake.sol\":3942:4238  function earned(address account) public view returns (uint256) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_40\n      tag_47\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_47:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":551:595  uint256 public totalRewards = 400 * 10 ** 18 */\n    tag_5:\n      tag_40\n      sload(0x05)\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_6:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_7:\n      tag_57\n      tag_58\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_58:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      and\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      jump\n    tag_57:\n      mload(0x40)\n        /* \"#utility.yul\":1173:1187   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1166:1188   */\n      iszero\n        /* \"#utility.yul\":1148:1189   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1136:1138   */\n      0x20\n        /* \"#utility.yul\":1121:1139   */\n      add\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      tag_44\n        /* \"#utility.yul\":1008:1195   */\n      jump\n        /* \"inviter_presell/stake.sol\":679:719  uint256 public rateIntervalNumerator = 5 */\n    tag_8:\n      tag_40\n      sload(0x08)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":5986:6289  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_53\n      tag_66\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":1678:1766  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_10:\n      tag_53\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":2692:3108  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_11:\n      tag_40\n      tag_72\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":2218:2684  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_12:\n      tag_40\n      tag_76\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":633:672  uint256 public rateInterval = 1 minutes */\n    tag_13:\n      tag_40\n      sload(0x07)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":1774:1867  function totalPowers() external view returns (uint256) {... */\n    tag_14:\n        /* \"inviter_presell/stake.sol\":1847:1859  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":1774:1867  function totalPowers() external view returns (uint256) {... */\n      jump(tag_40)\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_53\n      tag_86\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":602:626  uint256 public startTime */\n    tag_16:\n      tag_40\n      sload(0x06)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":726:771  uint256 public rateIntervalDenominator = 1000 */\n    tag_17:\n      tag_40\n      sload(0x09)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":3471:3578  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_18:\n        /* \"inviter_presell/stake.sol\":3555:3570  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3471:3578  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      jump(tag_40)\n        /* \"inviter_presell/stake.sol\":922:975  mapping(address => uint256) public userLastUpdateTime */\n    tag_19:\n      tag_40\n      tag_97\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_97:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":3586:3934  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_20:\n      tag_40\n      tag_101\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":858:915  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_21:\n      tag_40\n      tag_105\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_105:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_22:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_108:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1549:1581   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1531:1582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1519:1521   */\n      0x20\n        /* \"#utility.yul\":1504:1522   */\n      add\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      tag_44\n        /* \"#utility.yul\":1385:1588   */\n      jump\n        /* \"inviter_presell/stake.sol\":2096:2210  function getCurRewardPool() public view returns (uint256) {... */\n    tag_23:\n      tag_40\n      tag_113\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":5674:5974  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_25:\n      tag_53\n      tag_119\n      calldatasize\n      0x04\n      tag_120\n      jump\t// in\n    tag_119:\n      tag_121\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":1977:2088  function powersOf(address account) external view returns (uint256) {... */\n    tag_26:\n      tag_40\n      tag_123\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_123:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":2062:2080  _balances[account] */\n      and\n        /* \"inviter_presell/stake.sol\":2035:2042  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2062:2080  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":2062:2071  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":2062:2080  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":1977:2088  function powersOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"inviter_presell/stake.sol\":778:807  uint256 public lastUpdateTime */\n    tag_27:\n      tag_40\n      sload(0x0a)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":3116:3231  function getCurRewardRate() public view returns (uint256) {... */\n    tag_28:\n      tag_40\n      tag_130\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_29:\n      sload(0x03)\n      tag_108\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":4281:5664  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_30:\n      tag_40\n      tag_137\n      calldatasize\n      0x04\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":814:849  uint256 public rewardPerTokenStored */\n    tag_31:\n      tag_40\n      sload(0x0b)\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_32:\n      tag_53\n      tag_145\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_145:\n      tag_146\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":3942:4238  function earned(address account) public view returns (uint256) {... */\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":4054:4081  userLastUpdateTime[account] */\n      dup2\n      and\n        /* \"inviter_presell/stake.sol\":3996:4003  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4054:4081  userLastUpdateTime[account] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":4054:4072  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":4054:4081  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3996:4003  uint256 */\n      dup2\n      swap1\n        /* \"inviter_presell/stake.sol\":4031:4099  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_148\n      swap1\n        /* \"inviter_presell/stake.sol\":4083:4098  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4031:4053  getTimeWeightedAveRate */\n      tag_139\n        /* \"inviter_presell/stake.sol\":4031:4099  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_148:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":4213:4229  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":4213:4220  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":4213:4229  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4165:4187  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":4165:4196  userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4016:4099  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap2\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":4117:4230  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_149\n      swap2\n        /* \"inviter_presell/stake.sol\":4117:4208  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_150\n      swap1\n        /* \"inviter_presell/stake.sol\":4203:4207  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"inviter_presell/stake.sol\":4117:4198  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_151\n      swap1\n        /* \"inviter_presell/stake.sol\":4140:4197  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_152\n      swap1\n        /* \"inviter_presell/stake.sol\":4140:4160  rewardPerToken(rate) */\n      tag_153\n        /* \"inviter_presell/stake.sol\":4016:4099  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      dup9\n        /* \"inviter_presell/stake.sol\":4140:4154  rewardPerToken */\n      tag_102\n        /* \"inviter_presell/stake.sol\":4140:4160  rewardPerToken(rate) */\n      jump\t// in\n    tag_153:\n        /* \"inviter_presell/stake.sol\":4140:4164  rewardPerToken(rate).sub */\n      swap1\n      tag_154\n        /* \"inviter_presell/stake.sol\":4140:4197  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      jump\t// in\n    tag_152:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":4117:4135  _balances[account] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":4117:4126  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":4117:4135  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":4117:4139  _balances[account].mul */\n      tag_155\n        /* \"inviter_presell/stake.sol\":4117:4198  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      jump\t// in\n    tag_151:\n        /* \"inviter_presell/stake.sol\":4117:4202  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      swap1\n      tag_156\n        /* \"inviter_presell/stake.sol\":4117:4208  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      jump\t// in\n    tag_150:\n        /* \"inviter_presell/stake.sol\":4117:4212  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      swap1\n      tag_157\n        /* \"inviter_presell/stake.sol\":4117:4230  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      jump\t// in\n    tag_149:\n        /* \"inviter_presell/stake.sol\":4110:4230  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap4\n        /* \"inviter_presell/stake.sol\":3942:4238  function earned(address account) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_56:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_162\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_162:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      dup3\n      and\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      dup3\n      mload\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2917:2931   */\n      iszero\n        /* \"#utility.yul\":2910:2932   */\n      iszero\n        /* \"#utility.yul\":2892:2933   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2976:2990   */\n      dup5\n      iszero\n        /* \"#utility.yul\":2969:2991   */\n      iszero\n        /* \"#utility.yul\":2949:2967   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2942:2992   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n      swap2\n        /* \"#utility.yul\":2865:2883   */\n      add\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5986:6289  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_66:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3205:3207   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3187:3208   */\n      mstore\n        /* \"#utility.yul\":3244:3246   */\n      0x1f\n        /* \"#utility.yul\":3224:3242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3217:3247   */\n      mstore\n        /* \"#utility.yul\":3283:3316   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3263:3281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3256:3317   */\n      mstore\n        /* \"#utility.yul\":3334:3352   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n        /* \"#utility.yul\":3003:3358   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"inviter_presell/stake.sol\":6040:6050  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1127:1139  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1142:1169  userLastUpdateTime[account] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1142:1160  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1142:1169  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1191:1200  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1183:1200  time <= startTime */\n      dup2\n      gt\n        /* \"inviter_presell/stake.sol\":1180:1245  if(time <= startTime) {... */\n      tag_174\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":1224:1233  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1180:1245  if(time <= startTime) {... */\n    tag_174:\n        /* \"inviter_presell/stake.sol\":1255:1267  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1270:1315  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_175\n        /* \"inviter_presell/stake.sol\":1293:1297  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1299:1314  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1270:1292  getTimeWeightedAveRate */\n      tag_139\n        /* \"inviter_presell/stake.sol\":1270:1315  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_175:\n        /* \"inviter_presell/stake.sol\":1255:1315  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1349:1369  rewardPerToken(rate) */\n      tag_176\n        /* \"inviter_presell/stake.sol\":1364:1368  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1349:1363  rewardPerToken */\n      tag_102\n        /* \"inviter_presell/stake.sol\":1349:1369  rewardPerToken(rate) */\n      jump\t// in\n    tag_176:\n        /* \"inviter_presell/stake.sol\":1326:1346  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1326:1369  rewardPerTokenStored = rewardPerToken(rate) */\n      sstore\n        /* \"inviter_presell/stake.sol\":3555:3570  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1380:1394  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1380:1423  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1438:1459  account != address(0) */\n      dup4\n      and\n      iszero\n        /* \"inviter_presell/stake.sol\":1434:1651  if (account != address(0)) {... */\n      tag_178\n      jumpi\n        /* \"inviter_presell/stake.sol\":1495:1510  earned(account) */\n      tag_179\n        /* \"inviter_presell/stake.sol\":1502:1509  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1495:1501  earned */\n      tag_43\n        /* \"inviter_presell/stake.sol\":1495:1510  earned(account) */\n      jump\t// in\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1476:1492  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1476:1483  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1476:1492  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1476:1510  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/stake.sol\":1559:1579  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1525:1547  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1525:1556  userRewardPerTokenPaid[account] */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1525:1579  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"inviter_presell/stake.sol\":1594:1612  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1594:1621  userLastUpdateTime[account] */\n      swap1\n      mstore\n      keccak256\n        /* \"inviter_presell/stake.sol\":1624:1639  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1594:1639  userLastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"inviter_presell/stake.sol\":1434:1651  if (account != address(0)) {... */\n    tag_178:\n        /* \"inviter_presell/stake.sol\":6088:6098  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6063:6077  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6080:6099  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":6080:6087  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6080:6099  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6114:6124  reward > 0 */\n      dup1\n      iszero\n        /* \"inviter_presell/stake.sol\":6110:6282  if (reward > 0) {... */\n      tag_181\n      jumpi\n        /* \"inviter_presell/stake.sol\":6149:6159  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6163:6164  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6141:6160  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":6141:6148  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6141:6160  rewards[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":6141:6164  rewards[msg.sender] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"inviter_presell/stake.sol\":6179:6191  rewardsToken */\n      sload(0x03)\n        /* \"inviter_presell/stake.sol\":6179:6220  rewardsToken.transfer(msg.sender, reward) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3537:3588   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3604:3622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3597:3631   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":6179:6191  rewardsToken */\n      and\n      swap1\n        /* \"inviter_presell/stake.sol\":6179:6200  rewardsToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3510:3528   */\n      0x44\n      add\n        /* \"inviter_presell/stake.sol\":6179:6220  rewardsToken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      pop\n        /* \"inviter_presell/stake.sol\":6240:6270  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":6251:6261  msg.sender */\n      caller\n      swap1\n        /* \"inviter_presell/stake.sol\":6240:6270  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"inviter_presell/stake.sol\":6240:6270  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":6110:6282  if (reward > 0) {... */\n    tag_181:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5986:6289  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1678:1766  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_70:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_190\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_58\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n    tag_190:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_194\n      jump\t// in\n    tag_192:\n        /* \"inviter_presell/stake.sol\":1742:1751  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":1742:1758  startTime = time */\n      sstore\n        /* \"inviter_presell/stake.sol\":1678:1766  function setStartTime(uint256 time) public onlyAdmin {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2692:3108  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_73:\n        /* \"inviter_presell/stake.sol\":2750:2757  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2773:2782  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2786:2787  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2773:2787  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2770:2832  if(startTime == 0) {... */\n      tag_197\n      jumpi\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2811:2820  startTime */\n      sload(0x06)\n      swap1\n        /* \"inviter_presell/stake.sol\":2692:3108  function getRemainPool(uint256 time) public view returns (uint256) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2770:2832  if(startTime == 0) {... */\n    tag_197:\n        /* \"inviter_presell/stake.sol\":2842:2855  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2879:2891  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2866:2875  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2859:2863  time */\n      dup5\n        /* \"inviter_presell/stake.sol\":2859:2875  time - startTime */\n      tag_198\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"inviter_presell/stake.sol\":2858:2891  (time - startTime) / rateInterval */\n      tag_200\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n        /* \"inviter_presell/stake.sol\":2858:2895  (time - startTime) / rateInterval + 1 */\n      tag_202\n      swap1\n        /* \"inviter_presell/stake.sol\":2894:2895  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2858:2895  (time - startTime) / rateInterval + 1 */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"inviter_presell/stake.sol\":2922:2934  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2842:2895  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2906:2919  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2945:3078  for(uint256 i = 0; i < times; ++i) {... */\n    tag_204:\n        /* \"inviter_presell/stake.sol\":2968:2973  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2964:2965  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2964:2973  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2945:3078  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"inviter_presell/stake.sol\":3043:3066  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3019:3040  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3011:3040  value * rateIntervalNumerator */\n      tag_207\n      swap1\n        /* \"inviter_presell/stake.sol\":3011:3016  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":3011:3040  value * rateIntervalNumerator */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"inviter_presell/stake.sol\":3011:3066  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_209\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_209:\n        /* \"inviter_presell/stake.sol\":3003:3066  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_210\n      swap1\n        /* \"inviter_presell/stake.sol\":3003:3008  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":3003:3066  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_199\n      jump\t// in\n    tag_210:\n        /* \"inviter_presell/stake.sol\":2995:3066  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2975:2978  ++i */\n      tag_211\n      dup2\n      tag_212\n      jump\t// in\n    tag_211:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2945:3078  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_204)\n    tag_205:\n      pop\n        /* \"inviter_presell/stake.sol\":3095:3100  value */\n      swap4\n        /* \"inviter_presell/stake.sol\":2692:3108  function getRemainPool(uint256 time) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2218:2684  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_77:\n        /* \"inviter_presell/stake.sol\":2276:2283  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2299:2308  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2312:2313  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2299:2313  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2296:2358  if(startTime == 0) {... */\n      tag_214\n      jumpi\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2337:2346  startTime */\n      sload(0x06)\n      swap1\n        /* \"inviter_presell/stake.sol\":2218:2684  function getRewardPool(uint256 time) public view returns (uint256) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2296:2358  if(startTime == 0) {... */\n    tag_214:\n        /* \"inviter_presell/stake.sol\":2368:2381  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2405:2417  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2392:2401  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2385:2389  time */\n      dup5\n        /* \"inviter_presell/stake.sol\":2385:2401  time - startTime */\n      tag_215\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_215:\n        /* \"inviter_presell/stake.sol\":2384:2417  (time - startTime) / rateInterval */\n      tag_216\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_216:\n        /* \"inviter_presell/stake.sol\":2384:2421  (time - startTime) / rateInterval + 1 */\n      tag_217\n      swap1\n        /* \"inviter_presell/stake.sol\":2420:2421  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2384:2421  (time - startTime) / rateInterval + 1 */\n      tag_203\n      jump\t// in\n    tag_217:\n        /* \"inviter_presell/stake.sol\":2448:2460  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2368:2421  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2432:2445  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2471:2604  for(uint256 i = 0; i < times; ++i) {... */\n    tag_218:\n        /* \"inviter_presell/stake.sol\":2494:2499  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2490:2491  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2490:2499  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2471:2604  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_219\n      jumpi\n        /* \"inviter_presell/stake.sol\":2569:2592  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2545:2566  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2537:2566  value * rateIntervalNumerator */\n      tag_221\n      swap1\n        /* \"inviter_presell/stake.sol\":2537:2542  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":2537:2566  value * rateIntervalNumerator */\n      tag_208\n      jump\t// in\n    tag_221:\n        /* \"inviter_presell/stake.sol\":2537:2592  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_222\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_222:\n        /* \"inviter_presell/stake.sol\":2529:2592  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_223\n      swap1\n        /* \"inviter_presell/stake.sol\":2529:2534  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2529:2592  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_199\n      jump\t// in\n    tag_223:\n        /* \"inviter_presell/stake.sol\":2521:2592  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2501:2504  ++i */\n      tag_224\n      dup2\n      tag_212\n      jump\t// in\n    tag_224:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2471:2604  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_218)\n    tag_219:\n      pop\n        /* \"inviter_presell/stake.sol\":2653:2676  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2629:2650  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2621:2650  value * rateIntervalNumerator */\n      tag_225\n      swap1\n        /* \"inviter_presell/stake.sol\":2621:2626  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2621:2650  value * rateIntervalNumerator */\n      tag_208\n      jump\t// in\n    tag_225:\n        /* \"inviter_presell/stake.sol\":2621:2676  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_226\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_226:\n        /* \"inviter_presell/stake.sol\":2614:2676  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap5\n        /* \"inviter_presell/stake.sol\":2218:2684  function getRewardPool(uint256 time) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_231:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_234\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_235\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_234:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3586:3934  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_102:\n        /* \"inviter_presell/stake.sol\":3651:3658  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3675:3687  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":3691:3692  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3675:3692  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3671:3748  if (_totalPowers == 0) {... */\n      tag_238\n      jumpi\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3716:3736  rewardPerTokenStored */\n      sload(0x0b)\n      swap1\n        /* \"inviter_presell/stake.sol\":3586:3934  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3671:3748  if (_totalPowers == 0) {... */\n    tag_238:\n        /* \"inviter_presell/stake.sol\":3778:3926  rewardPerTokenStored.add(... */\n      tag_239\n        /* \"inviter_presell/stake.sol\":3821:3911  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_240\n        /* \"inviter_presell/stake.sol\":3898:3910  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":3821:3893  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_151\n        /* \"inviter_presell/stake.sol\":3888:3892  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":3821:3883  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_243\n        /* \"inviter_presell/stake.sol\":3872:3882  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":3821:3867  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_243\n        /* \"inviter_presell/stake.sol\":3852:3866  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":3821:3847  lastTimeRewardApplicable() */\n      tag_153\n        /* \"inviter_presell/stake.sol\":3555:3570  block.timestamp */\n      timestamp\n      swap1\n        /* \"inviter_presell/stake.sol\":3471:3578  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      jump\n        /* \"inviter_presell/stake.sol\":3821:3867  lastTimeRewardApplicable().sub(lastUpdateTime) */\n    tag_243:\n        /* \"inviter_presell/stake.sol\":3821:3871  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      swap1\n      tag_155\n        /* \"inviter_presell/stake.sol\":3821:3883  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":3821:3911  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n    tag_240:\n        /* \"inviter_presell/stake.sol\":3778:3798  rewardPerTokenStored */\n      sload(0x0b)\n      swap1\n        /* \"inviter_presell/stake.sol\":3778:3802  rewardPerTokenStored.add */\n      tag_157\n        /* \"inviter_presell/stake.sol\":3778:3926  rewardPerTokenStored.add(... */\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":3758:3926  return... */\n      swap3\n        /* \"inviter_presell/stake.sol\":3586:3934  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2096:2210  function getCurRewardPool() public view returns (uint256) {... */\n    tag_113:\n        /* \"inviter_presell/stake.sol\":2145:2152  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2172:2202  getRewardPool(block.timestamp) */\n      tag_247\n        /* \"inviter_presell/stake.sol\":2186:2201  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2172:2185  getRewardPool */\n      tag_77\n        /* \"inviter_presell/stake.sol\":2172:2202  getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_247:\n        /* \"inviter_presell/stake.sol\":2165:2202  return getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2096:2210  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5674:5974  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_121:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3205:3207   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3187:3208   */\n      mstore\n        /* \"#utility.yul\":3244:3246   */\n      0x1f\n        /* \"#utility.yul\":3224:3242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3217:3247   */\n      mstore\n        /* \"#utility.yul\":3283:3316   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3263:3281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3256:3317   */\n      mstore\n        /* \"#utility.yul\":3334:3352   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_163\n        /* \"#utility.yul\":3003:3358   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_250:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_253\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_58\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n    tag_253:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_194\n      jump\t// in\n    tag_255:\n        /* \"inviter_presell/stake.sol\":5764:5774  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1127:1139  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1142:1169  userLastUpdateTime[account] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1142:1160  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1142:1169  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1191:1200  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1183:1200  time <= startTime */\n      dup2\n      gt\n        /* \"inviter_presell/stake.sol\":1180:1245  if(time <= startTime) {... */\n      tag_258\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":1224:1233  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1180:1245  if(time <= startTime) {... */\n    tag_258:\n        /* \"inviter_presell/stake.sol\":1255:1267  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1270:1315  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_259\n        /* \"inviter_presell/stake.sol\":1293:1297  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1299:1314  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1270:1292  getTimeWeightedAveRate */\n      tag_139\n        /* \"inviter_presell/stake.sol\":1270:1315  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_259:\n        /* \"inviter_presell/stake.sol\":1255:1315  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1349:1369  rewardPerToken(rate) */\n      tag_260\n        /* \"inviter_presell/stake.sol\":1364:1368  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1349:1363  rewardPerToken */\n      tag_102\n        /* \"inviter_presell/stake.sol\":1349:1369  rewardPerToken(rate) */\n      jump\t// in\n    tag_260:\n        /* \"inviter_presell/stake.sol\":1326:1346  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1326:1369  rewardPerTokenStored = rewardPerToken(rate) */\n      sstore\n        /* \"inviter_presell/stake.sol\":3555:3570  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1380:1394  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1380:1423  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1438:1459  account != address(0) */\n      dup4\n      and\n      iszero\n        /* \"inviter_presell/stake.sol\":1434:1651  if (account != address(0)) {... */\n      tag_262\n      jumpi\n        /* \"inviter_presell/stake.sol\":1495:1510  earned(account) */\n      tag_263\n        /* \"inviter_presell/stake.sol\":1502:1509  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1495:1501  earned */\n      tag_43\n        /* \"inviter_presell/stake.sol\":1495:1510  earned(account) */\n      jump\t// in\n    tag_263:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1476:1492  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1476:1483  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1476:1492  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1476:1510  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/stake.sol\":1559:1579  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1525:1547  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1525:1556  userRewardPerTokenPaid[account] */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1525:1579  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"inviter_presell/stake.sol\":1594:1612  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1594:1621  userLastUpdateTime[account] */\n      swap1\n      mstore\n      keccak256\n        /* \"inviter_presell/stake.sol\":1624:1639  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1594:1639  userLastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"inviter_presell/stake.sol\":1434:1651  if (account != address(0)) {... */\n    tag_262:\n        /* \"inviter_presell/stake.sol\":5804:5805  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5795:5801  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":5795:5805  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":5787:5824  require(amount > 0, \"Cannot stake 0\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5462:5464   */\n      0x20\n        /* \"inviter_presell/stake.sol\":5787:5824  require(amount > 0, \"Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5444:5465   */\n      mstore\n        /* \"#utility.yul\":5501:5503   */\n      0x0e\n        /* \"#utility.yul\":5481:5499   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5474:5504   */\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n        /* \"#utility.yul\":5520:5538   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5513:5557   */\n      mstore\n        /* \"#utility.yul\":5574:5592   */\n      0x64\n      add\n        /* \"inviter_presell/stake.sol\":5787:5824  require(amount > 0, \"Cannot stake 0\") */\n      tag_163\n        /* \"#utility.yul\":5260:5598   */\n      jump\n        /* \"inviter_presell/stake.sol\":5787:5824  require(amount > 0, \"Cannot stake 0\") */\n    tag_265:\n        /* \"inviter_presell/stake.sol\":5850:5862  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":5850:5874  _totalPowers.add(amount) */\n      tag_268\n      swap1\n        /* \"inviter_presell/stake.sol\":5867:5873  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":5850:5866  _totalPowers.add */\n      tag_157\n        /* \"inviter_presell/stake.sol\":5850:5874  _totalPowers.add(amount) */\n      jump\t// in\n    tag_268:\n        /* \"inviter_presell/stake.sol\":5835:5847  _totalPowers */\n      0x0e\n        /* \"inviter_presell/stake.sol\":5835:5874  _totalPowers = _totalPowers.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":5903:5918  _balances[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5903:5912  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5903:5918  _balances[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5903:5930  _balances[user].add(amount) */\n      tag_269\n      swap1\n        /* \"inviter_presell/stake.sol\":5923:5929  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":5903:5922  _balances[user].add */\n      tag_157\n        /* \"inviter_presell/stake.sol\":5903:5930  _balances[user].add(amount) */\n      jump\t// in\n    tag_269:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":5885:5900  _balances[user] */\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5885:5894  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5885:5900  _balances[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"inviter_presell/stake.sol\":5885:5930  _balances[user] = _balances[user].add(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"inviter_presell/stake.sol\":5946:5966  Staked(user, amount) */\n      swap1\n      mload\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      tag_270\n      swap1\n        /* \"inviter_presell/stake.sol\":5959:5965  amount */\n      dup8\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"inviter_presell/stake.sol\":5946:5966  Staked(user, amount) */\n    tag_270:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5674:5974  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3116:3231  function getCurRewardRate() public view returns (uint256) {... */\n    tag_130:\n        /* \"inviter_presell/stake.sol\":3165:3172  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3192:3223  _getRewardRate(block.timestamp) */\n      tag_247\n        /* \"inviter_presell/stake.sol\":3207:3222  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3192:3206  _getRewardRate */\n      tag_274\n        /* \"inviter_presell/stake.sol\":3192:3223  _getRewardRate(block.timestamp) */\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":4281:5664  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_139:\n        /* \"inviter_presell/stake.sol\":4371:4378  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4403:4412  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4416:4417  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4403:4417  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":4403:4442  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_276\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4433:4442  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":4421:4429  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4421:4442  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":4403:4442  startTime == 0 || leftTime >= rightTime */\n    tag_276:\n        /* \"inviter_presell/stake.sol\":4403:4459  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4446:4459  leftTime == 0 */\n      dup3\n      iszero\n        /* \"inviter_presell/stake.sol\":4403:4459  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n    tag_277:\n        /* \"inviter_presell/stake.sol\":4400:4496  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n      iszero\n      tag_278\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":4483:4484  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4476:4484  return 0 */\n      jump(tag_239)\n        /* \"inviter_presell/stake.sol\":4400:4496  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n    tag_278:\n        /* \"inviter_presell/stake.sol\":4522:4531  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4511:4519  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":4511:4531  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":4508:4580  if(leftTime < startTime) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"inviter_presell/stake.sol\":4559:4568  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4548:4568  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":4508:4580  if(leftTime < startTime) {... */\n    tag_279:\n        /* \"inviter_presell/stake.sol\":4592:4612  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4672:4684  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4656:4668  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4643:4652  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4632:4640  leftTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":4632:4652  leftTime - startTime */\n      tag_280\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_280:\n        /* \"inviter_presell/stake.sol\":4631:4668  (leftTime - startTime) % rateInterval */\n      tag_281\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_281:\n        /* \"inviter_presell/stake.sol\":4616:4628  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4616:4668  rateInterval - (leftTime - startTime) % rateInterval */\n      tag_283\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_283:\n        /* \"inviter_presell/stake.sol\":4615:4684  (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      tag_284\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_284:\n        /* \"inviter_presell/stake.sol\":4592:4684  uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4695:4713  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4757:4769  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4742:4754  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4716:4739  getRewardPool(leftTime) */\n      tag_285\n        /* \"inviter_presell/stake.sol\":4730:4738  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":4716:4729  getRewardPool */\n      tag_77\n        /* \"inviter_presell/stake.sol\":4716:4739  getRewardPool(leftTime) */\n      jump\t// in\n    tag_285:\n        /* \"inviter_presell/stake.sol\":4716:4754  getRewardPool(leftTime) * leftInterval */\n      tag_286\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_286:\n        /* \"inviter_presell/stake.sol\":4716:4769  getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_287\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_287:\n        /* \"inviter_presell/stake.sol\":4695:4769  uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4782:4803  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4832:4844  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4819:4828  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4807:4816  rightTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":4807:4828  rightTime - startTime */\n      tag_288\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_288:\n        /* \"inviter_presell/stake.sol\":4806:4844  (rightTime - startTime) % rateInterval */\n      tag_289\n      swap2\n      swap1\n      tag_282\n      jump\t// in\n    tag_289:\n        /* \"inviter_presell/stake.sol\":4782:4844  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4855:4874  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4920:4932  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4904:4917  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4877:4901  getRewardPool(rightTime) */\n      tag_290\n        /* \"inviter_presell/stake.sol\":4891:4900  rightTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":4877:4890  getRewardPool */\n      tag_77\n        /* \"inviter_presell/stake.sol\":4877:4901  getRewardPool(rightTime) */\n      jump\t// in\n    tag_290:\n        /* \"inviter_presell/stake.sol\":4877:4917  getRewardPool(rightTime) * rightInterval */\n      tag_291\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_291:\n        /* \"inviter_presell/stake.sol\":4877:4932  getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_292\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_292:\n        /* \"inviter_presell/stake.sol\":4855:4932  uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4974:4983  rightTime */\n      dup6\n        /* \"inviter_presell/stake.sol\":4948:4971  leftTime + leftInterval */\n      tag_293\n        /* \"inviter_presell/stake.sol\":4959:4971  leftInterval */\n      dup6\n        /* \"inviter_presell/stake.sol\":4948:4956  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":4948:4971  leftTime + leftInterval */\n      tag_203\n      jump\t// in\n    tag_293:\n        /* \"inviter_presell/stake.sol\":4948:4983  leftTime + leftInterval > rightTime */\n      gt\n        /* \"inviter_presell/stake.sol\":4945:5043  if(leftTime + leftInterval > rightTime) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"inviter_presell/stake.sol\":5007:5031  _getRewardRate(leftTime) */\n      tag_295\n        /* \"inviter_presell/stake.sol\":5022:5030  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5007:5021  _getRewardRate */\n      tag_274\n        /* \"inviter_presell/stake.sol\":5007:5031  _getRewardRate(leftTime) */\n      jump\t// in\n    tag_295:\n        /* \"inviter_presell/stake.sol\":5000:5031  return _getRewardRate(leftTime) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_239)\n        /* \"inviter_presell/stake.sol\":4945:5043  if(leftTime + leftInterval > rightTime) {... */\n    tag_294:\n        /* \"inviter_presell/stake.sol\":5055:5074  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5116:5128  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5105:5113  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5077:5102  rightTime - rightInterval */\n      tag_296\n        /* \"inviter_presell/stake.sol\":5089:5102  rightInterval */\n      dup6\n        /* \"inviter_presell/stake.sol\":5077:5086  rightTime */\n      dup11\n        /* \"inviter_presell/stake.sol\":5077:5102  rightTime - rightInterval */\n      tag_199\n      jump\t// in\n    tag_296:\n        /* \"inviter_presell/stake.sol\":5077:5113  rightTime - rightInterval - leftTime */\n      tag_297\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_297:\n        /* \"inviter_presell/stake.sol\":5077:5128  rightTime - rightInterval - leftTime - leftInterval */\n      tag_298\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_298:\n        /* \"inviter_presell/stake.sol\":5055:5128  uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5139:5158  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5161:5184  getRemainPool(leftTime) */\n      tag_299\n        /* \"inviter_presell/stake.sol\":5175:5183  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5161:5174  getRemainPool */\n      tag_73\n        /* \"inviter_presell/stake.sol\":5161:5184  getRemainPool(leftTime) */\n      jump\t// in\n    tag_299:\n        /* \"inviter_presell/stake.sol\":5139:5184  uint256 startReward = getRemainPool(leftTime) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5196:5218  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5233:5251  uint256 nextReward */\n      dup1\n        /* \"inviter_presell/stake.sol\":5266:5279  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":5282:5293  startReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5266:5293  uint256 value = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5304:5317  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":5334:5346  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5320:5331  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":5320:5346  midInterval / rateInterval */\n      tag_300\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":5304:5346  uint256 times = midInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5361:5370  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":5357:5571  for(uint256 i = 0; i < times; ++i) {... */\n    tag_301:\n        /* \"inviter_presell/stake.sol\":5380:5385  times */\n      dup2\n        /* \"inviter_presell/stake.sol\":5376:5377  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":5376:5385  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":5357:5571  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_302\n      jumpi\n        /* \"inviter_presell/stake.sol\":5452:5475  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":5428:5449  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":5420:5449  value * rateIntervalNumerator */\n      tag_304\n      swap1\n        /* \"inviter_presell/stake.sol\":5420:5425  value */\n      dup6\n        /* \"inviter_presell/stake.sol\":5420:5449  value * rateIntervalNumerator */\n      tag_208\n      jump\t// in\n    tag_304:\n        /* \"inviter_presell/stake.sol\":5420:5475  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_305\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_305:\n        /* \"inviter_presell/stake.sol\":5407:5475  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":5498:5516  value - nextReward */\n      tag_306\n        /* \"inviter_presell/stake.sol\":5407:5475  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      dup5\n        /* \"inviter_presell/stake.sol\":5498:5503  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":5498:5516  value - nextReward */\n      tag_199\n      jump\t// in\n    tag_306:\n        /* \"inviter_presell/stake.sol\":5490:5516  value = value - nextReward */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":5531:5559  midTotalReward += nextReward */\n      tag_307\n        /* \"inviter_presell/stake.sol\":5549:5559  nextReward */\n      dup5\n        /* \"inviter_presell/stake.sol\":5531:5559  midTotalReward += nextReward */\n      dup7\n      tag_203\n      jump\t// in\n    tag_307:\n      swap5\n      pop\n        /* \"inviter_presell/stake.sol\":5387:5390  ++i */\n      tag_308\n      dup2\n      tag_212\n      jump\t// in\n    tag_308:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5357:5571  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_301)\n    tag_302:\n      pop\n        /* \"inviter_presell/stake.sol\":5635:5655  rightTime - leftTime */\n      tag_309\n        /* \"inviter_presell/stake.sol\":5647:5655  leftTime */\n      dup14\n        /* \"inviter_presell/stake.sol\":5635:5644  rightTime */\n      dup14\n        /* \"inviter_presell/stake.sol\":5635:5655  rightTime - leftTime */\n      tag_199\n      jump\t// in\n    tag_309:\n        /* \"inviter_presell/stake.sol\":5619:5630  rightReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":5589:5616  midTotalReward + leftReward */\n      tag_310\n        /* \"inviter_presell/stake.sol\":5606:5616  leftReward */\n      dup12\n        /* \"inviter_presell/stake.sol\":5589:5603  midTotalReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":5589:5616  midTotalReward + leftReward */\n      tag_203\n      jump\t// in\n    tag_310:\n        /* \"inviter_presell/stake.sol\":5589:5630  midTotalReward + leftReward + rightReward */\n      tag_311\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_311:\n        /* \"inviter_presell/stake.sol\":5588:5656  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_312\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_312:\n        /* \"inviter_presell/stake.sol\":5581:5656  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap14\n        /* \"inviter_presell/stake.sol\":4281:5664  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_146:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap1\n      tag_164\n      jump\t// in\n    tag_316:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      dup2\n      and\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5922:5924   */\n      0x20\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5904:5925   */\n      mstore\n        /* \"#utility.yul\":5961:5963   */\n      0x26\n        /* \"#utility.yul\":5941:5959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5934:5964   */\n      mstore\n        /* \"#utility.yul\":6000:6034   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5980:5998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5973:6035   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6051:6069   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6044:6080   */\n      mstore\n        /* \"#utility.yul\":6097:6116   */\n      0x84\n      add\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_163\n        /* \"#utility.yul\":5720:6122   */\n      jump\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_319:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_322\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_235\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_322:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_154:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3279  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3303:3304  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3300  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_199\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3629:3636  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3660:3661  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3657  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_208\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4028:4035  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4059:4060  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4056  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_201\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_157:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2891:2898  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_149\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2922:2923  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2919  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_203\n      jump\t// in\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_235:\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      swap2\n      and\n      swap2\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      swap1\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      dup3\n      swap1\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n      swap1\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3239:3461  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_274:\n        /* \"inviter_presell/stake.sol\":3299:3306  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3319:3340  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":3343:3362  getRewardPool(time) */\n      tag_334\n        /* \"inviter_presell/stake.sol\":3357:3361  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":3343:3356  getRewardPool */\n      tag_77\n        /* \"inviter_presell/stake.sol\":3343:3362  getRewardPool(time) */\n      jump\t// in\n    tag_334:\n        /* \"inviter_presell/stake.sol\":3319:3362  uint256 curPoolAmount = getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3373:3391  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":3394:3425  curPoolAmount.div(rateInterval) */\n      tag_226\n        /* \"inviter_presell/stake.sol\":3412:3424  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3394:3407  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":3394:3411  curPoolAmount.div */\n      tag_156\n      swap1\n        /* \"inviter_presell/stake.sol\":3394:3425  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_336:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_342:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_42:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_344:\n        /* \"#utility.yul\":343:372   */\n      tag_149\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_336\n      jump\t// in\n        /* \"#utility.yul\":565:683   */\n    tag_337:\n        /* \"#utility.yul\":651:656   */\n      dup1\n        /* \"#utility.yul\":644:657   */\n      iszero\n        /* \"#utility.yul\":637:658   */\n      iszero\n        /* \"#utility.yul\":630:635   */\n      dup2\n        /* \"#utility.yul\":627:659   */\n      eq\n        /* \"#utility.yul\":617:677   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":670:671   */\n      dup1\n        /* \"#utility.yul\":663:675   */\n      revert\n        /* \"#utility.yul\":688:1003   */\n    tag_55:\n        /* \"#utility.yul\":753:759   */\n      0x00\n        /* \"#utility.yul\":761:767   */\n      dup1\n        /* \"#utility.yul\":814:816   */\n      0x40\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":793:800   */\n      dup6\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:834   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":782:834   */\n    tag_350:\n        /* \"#utility.yul\":853:882   */\n      tag_351\n        /* \"#utility.yul\":872:881   */\n      dup4\n        /* \"#utility.yul\":853:882   */\n      tag_336\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":843:882   */\n      swap2\n      pop\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup4\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":904:936   */\n      calldataload\n        /* \"#utility.yul\":945:973   */\n      tag_352\n        /* \"#utility.yul\":967:972   */\n      dup2\n        /* \"#utility.yul\":945:973   */\n      tag_337\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":992:997   */\n      dup1\n        /* \"#utility.yul\":982:997   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":688:1003   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1380   */\n    tag_69:\n        /* \"#utility.yul\":1259:1265   */\n      0x00\n        /* \"#utility.yul\":1312:1314   */\n      0x20\n        /* \"#utility.yul\":1300:1309   */\n      dup3\n        /* \"#utility.yul\":1291:1298   */\n      dup5\n        /* \"#utility.yul\":1287:1310   */\n      sub\n        /* \"#utility.yul\":1283:1315   */\n      slt\n        /* \"#utility.yul\":1280:1332   */\n      iszero\n      tag_355\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1280:1332   */\n    tag_355:\n      pop\n        /* \"#utility.yul\":1351:1374   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1200:1380   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1593:1847   */\n    tag_120:\n        /* \"#utility.yul\":1661:1667   */\n      0x00\n        /* \"#utility.yul\":1669:1675   */\n      dup1\n        /* \"#utility.yul\":1722:1724   */\n      0x40\n        /* \"#utility.yul\":1710:1719   */\n      dup4\n        /* \"#utility.yul\":1701:1708   */\n      dup6\n        /* \"#utility.yul\":1697:1720   */\n      sub\n        /* \"#utility.yul\":1693:1725   */\n      slt\n        /* \"#utility.yul\":1690:1742   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1735:1736   */\n      dup1\n        /* \"#utility.yul\":1728:1740   */\n      revert\n        /* \"#utility.yul\":1690:1742   */\n    tag_358:\n        /* \"#utility.yul\":1761:1790   */\n      tag_359\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1761:1790   */\n      tag_336\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1751:1790   */\n      swap5\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"#utility.yul\":1822:1840   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1809:1841   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1593:1847   */\n      jump\t// out\n        /* \"#utility.yul\":2074:2322   */\n    tag_138:\n        /* \"#utility.yul\":2142:2148   */\n      0x00\n        /* \"#utility.yul\":2150:2156   */\n      dup1\n        /* \"#utility.yul\":2203:2205   */\n      0x40\n        /* \"#utility.yul\":2191:2200   */\n      dup4\n        /* \"#utility.yul\":2182:2189   */\n      dup6\n        /* \"#utility.yul\":2178:2201   */\n      sub\n        /* \"#utility.yul\":2174:2206   */\n      slt\n        /* \"#utility.yul\":2171:2223   */\n      iszero\n      tag_362\n      jumpi\n        /* \"#utility.yul\":2219:2220   */\n      0x00\n        /* \"#utility.yul\":2216:2217   */\n      dup1\n        /* \"#utility.yul\":2209:2221   */\n      revert\n        /* \"#utility.yul\":2171:2223   */\n    tag_362:\n      pop\n      pop\n        /* \"#utility.yul\":2242:2265   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2284:2316   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2074:2322   */\n      jump\t// out\n        /* \"#utility.yul\":2327:2725   */\n    tag_164:\n        /* \"#utility.yul\":2529:2531   */\n      0x20\n        /* \"#utility.yul\":2511:2532   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2568:2570   */\n      0x22\n        /* \"#utility.yul\":2548:2566   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2541:2571   */\n      mstore\n        /* \"#utility.yul\":2607:2641   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":2602:2604   */\n      0x40\n        /* \"#utility.yul\":2587:2605   */\n      dup3\n      add\n        /* \"#utility.yul\":2580:2642   */\n      mstore\n      shl(0xf1, 0x32b9)\n        /* \"#utility.yul\":2673:2675   */\n      0x60\n        /* \"#utility.yul\":2658:2676   */\n      dup3\n      add\n        /* \"#utility.yul\":2651:2683   */\n      mstore\n        /* \"#utility.yul\":2715:2718   */\n      0x80\n        /* \"#utility.yul\":2700:2719   */\n      add\n      swap1\n        /* \"#utility.yul\":2327:2725   */\n      jump\t// out\n        /* \"#utility.yul\":3642:3887   */\n    tag_187:\n        /* \"#utility.yul\":3709:3715   */\n      0x00\n        /* \"#utility.yul\":3762:3764   */\n      0x20\n        /* \"#utility.yul\":3750:3759   */\n      dup3\n        /* \"#utility.yul\":3741:3748   */\n      dup5\n        /* \"#utility.yul\":3737:3760   */\n      sub\n        /* \"#utility.yul\":3733:3765   */\n      slt\n        /* \"#utility.yul\":3730:3782   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3775:3776   */\n      dup1\n        /* \"#utility.yul\":3768:3780   */\n      revert\n        /* \"#utility.yul\":3730:3782   */\n    tag_368:\n        /* \"#utility.yul\":3810:3819   */\n      dup2\n        /* \"#utility.yul\":3804:3820   */\n      mload\n        /* \"#utility.yul\":3829:3857   */\n      tag_149\n        /* \"#utility.yul\":3851:3856   */\n      dup2\n        /* \"#utility.yul\":3829:3857   */\n      tag_337\n      jump\t// in\n        /* \"#utility.yul\":3892:4290   */\n    tag_194:\n        /* \"#utility.yul\":4094:4096   */\n      0x20\n        /* \"#utility.yul\":4076:4097   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x22\n        /* \"#utility.yul\":4113:4131   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4106:4136   */\n      mstore\n        /* \"#utility.yul\":4172:4206   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":4167:4169   */\n      0x40\n        /* \"#utility.yul\":4152:4170   */\n      dup3\n      add\n        /* \"#utility.yul\":4145:4207   */\n      mstore\n      shl(0xf1, 0x34b7)\n        /* \"#utility.yul\":4238:4240   */\n      0x60\n        /* \"#utility.yul\":4223:4241   */\n      dup3\n      add\n        /* \"#utility.yul\":4216:4248   */\n      mstore\n        /* \"#utility.yul\":4280:4283   */\n      0x80\n        /* \"#utility.yul\":4265:4284   */\n      add\n      swap1\n        /* \"#utility.yul\":3892:4290   */\n      jump\t// out\n        /* \"#utility.yul\":4295:4422   */\n    tag_338:\n        /* \"#utility.yul\":4356:4366   */\n      0x4e487b71\n        /* \"#utility.yul\":4351:4354   */\n      0xe0\n        /* \"#utility.yul\":4347:4367   */\n      shl\n        /* \"#utility.yul\":4344:4345   */\n      0x00\n        /* \"#utility.yul\":4337:4368   */\n      mstore\n        /* \"#utility.yul\":4387:4391   */\n      0x11\n        /* \"#utility.yul\":4384:4385   */\n      0x04\n        /* \"#utility.yul\":4377:4392   */\n      mstore\n        /* \"#utility.yul\":4411:4415   */\n      0x24\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4401:4416   */\n      revert\n        /* \"#utility.yul\":4427:4555   */\n    tag_199:\n        /* \"#utility.yul\":4494:4503   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":4515:4526   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":4512:4549   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":4529:4547   */\n      tag_239\n      tag_338\n      jump\t// in\n        /* \"#utility.yul\":4560:4687   */\n    tag_339:\n        /* \"#utility.yul\":4621:4631   */\n      0x4e487b71\n        /* \"#utility.yul\":4616:4619   */\n      0xe0\n        /* \"#utility.yul\":4612:4632   */\n      shl\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4602:4633   */\n      mstore\n        /* \"#utility.yul\":4652:4656   */\n      0x12\n        /* \"#utility.yul\":4649:4650   */\n      0x04\n        /* \"#utility.yul\":4642:4657   */\n      mstore\n        /* \"#utility.yul\":4676:4680   */\n      0x24\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4666:4681   */\n      revert\n        /* \"#utility.yul\":4692:4812   */\n    tag_201:\n        /* \"#utility.yul\":4732:4733   */\n      0x00\n        /* \"#utility.yul\":4758:4759   */\n      dup3\n        /* \"#utility.yul\":4748:4783   */\n      tag_378\n      jumpi\n        /* \"#utility.yul\":4763:4781   */\n      tag_378\n      tag_339\n      jump\t// in\n    tag_378:\n      pop\n        /* \"#utility.yul\":4797:4806   */\n      div\n      swap1\n        /* \"#utility.yul\":4692:4812   */\n      jump\t// out\n        /* \"#utility.yul\":4817:4942   */\n    tag_203:\n        /* \"#utility.yul\":4882:4891   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4903:4913   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4900:4936   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":4916:4934   */\n      tag_239\n      tag_338\n      jump\t// in\n        /* \"#utility.yul\":4947:5115   */\n    tag_208:\n        /* \"#utility.yul\":5020:5029   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5051:5060   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5068:5083   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5062:5084   */\n      dup5\n      eq\n        /* \"#utility.yul\":5048:5085   */\n      or\n        /* \"#utility.yul\":5038:5109   */\n      tag_239\n      jumpi\n        /* \"#utility.yul\":5089:5107   */\n      tag_239\n      tag_338\n      jump\t// in\n        /* \"#utility.yul\":5120:5255   */\n    tag_212:\n        /* \"#utility.yul\":5159:5162   */\n      0x00\n        /* \"#utility.yul\":5180:5197   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5177:5220   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":5200:5218   */\n      tag_387\n      tag_338\n      jump\t// in\n    tag_387:\n      pop\n        /* \"#utility.yul\":5247:5248   */\n      0x01\n        /* \"#utility.yul\":5236:5249   */\n      add\n      swap1\n        /* \"#utility.yul\":5120:5255   */\n      jump\t// out\n        /* \"#utility.yul\":5603:5715   */\n    tag_282:\n        /* \"#utility.yul\":5635:5636   */\n      0x00\n        /* \"#utility.yul\":5661:5662   */\n      dup3\n        /* \"#utility.yul\":5651:5686   */\n      tag_391\n      jumpi\n        /* \"#utility.yul\":5666:5684   */\n      tag_391\n      tag_339\n      jump\t// in\n    tag_391:\n      pop\n        /* \"#utility.yul\":5700:5709   */\n      mod\n      swap1\n        /* \"#utility.yul\":5603:5715   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122042b9f3f54b432115b5541a753ebc3b176af9272517c18d1c7fd87fecc66b3a3a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_866": {
									"entryPoint": null,
									"id": 866,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 65,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x5 SSTORE PUSH1 0x3C PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37 CALLER PUSH2 0x41 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE PUSH2 0x93 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1072 DUP1 PUSH2 0xA2 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x881 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x42D SWAP1 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x4A9 SWAP2 PUSH2 0x4A3 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x49D SWAP1 PUSH2 0x47E SWAP1 PUSH2 0x478 DUP9 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE DUP5 ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x5DC JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x5E8 DUP3 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP2 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x645 JUMPI PUSH2 0x612 DUP4 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x71B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x72F CALLER PUSH2 0x250 JUMP JUMPDEST PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x764 JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x78C SWAP1 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x7AD SWAP1 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x7C1 SWAP1 DUP4 PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CC DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0x795 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x7EF JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x817 SWAP1 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x85E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x838 SWAP1 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x842 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x84C SWAP1 DUP4 PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x857 DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0x820 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x86F SWAP1 DUP4 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x8B5 PUSH1 0x0 PUSH2 0xD99 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD PUSH1 0x0 SUB PUSH2 0x8CB JUMPI POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x8F7 PUSH1 0xE SLOAD PUSH2 0x49D PUSH8 0xDE0B6B3A7640000 PUSH2 0x8F1 DUP8 PUSH2 0x8F1 PUSH1 0xA SLOAD PUSH2 0x478 TIMESTAMP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 TIMESTAMP PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x974 CALLER PUSH2 0x250 JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xF50 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x9AE JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x9BA DUP3 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C5 DUP2 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xA17 JUMPI PUSH2 0x9E4 DUP4 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xA65 SWAP1 DUP6 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA8B SWAP1 DUP6 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0xADA SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 TIMESTAMP PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0xB0C JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0xB15 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0xB22 JUMPI POP PUSH1 0x0 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xB7A DUP8 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xBBE DUP9 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0xBDF DUP6 DUP10 PUSH2 0xFE5 JUMP JUMPDEST GT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBEE DUP8 PUSH2 0xDEB JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x900 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 PUSH2 0xC07 DUP6 DUP11 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC28 DUP10 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC93 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xC5F SWAP1 DUP6 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP4 POP PUSH2 0xC75 DUP5 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP PUSH2 0xC81 DUP5 DUP7 PUSH2 0xFE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xC8C DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH2 0xC9E DUP14 DUP14 PUSH2 0xFA8 JUMP JUMPDEST DUP8 PUSH2 0xCA9 DUP12 DUP8 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF7 DUP4 PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x879 PUSH1 0x7 SLOAD DUP4 PUSH2 0xD81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A9 DUP3 PUSH2 0xE10 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE71 DUP4 PUSH2 0xE10 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE81 DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC1 DUP4 PUSH2 0xE10 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A9 DUP2 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFE0 JUMPI PUSH2 0xFE0 PUSH2 0xFBB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1021 JUMPI PUSH2 0x1021 PUSH2 0xF92 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0xFBB JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB9 RETURN CREATE2 0x4B NUMBER 0x21 ISZERO 0xB5 SLOAD BYTE PUSH22 0x3EBC3B176AF9272517C18D1C7FD87FECC66B3A3A6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "371:6051:1:-:0;;;581:14;551:44;;663:9;633:39;;718:1;679:40;;767:4;726:45;;371:6051;;;;;;;;;-1:-1:-1;603:32:0;143:10;603:18;:32::i;:::-;1734:1:2;1845:7;:22;371:6051:1;;1443:191:0;1536:6;;;-1:-1:-1;;;;;1553:17:0;;;-1:-1:-1;;;;;;1553:17:0;;;;;;;1586:40;;1536:6;;;1553:17;1536:6;;1586:40;;1517:16;;1586:40;1506:128;1443:191;:::o;371:6051:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardRate_499": {
									"entryPoint": 3563,
									"id": 499,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 3481,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1662": {
									"entryPoint": 3469,
									"id": 1662,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@curTime_330": {
									"entryPoint": null,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1707": {
									"entryPoint": 3457,
									"id": 1707,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_581": {
									"entryPoint": 1032,
									"id": 581,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurRewardPool_353": {
									"entryPoint": 2310,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_476": {
									"entryPoint": 2798,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainPool_465": {
									"entryPoint": 1872,
									"id": 465,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPool_411": {
									"entryPoint": 2011,
									"id": 411,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_834": {
									"entryPoint": 1385,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_745": {
									"entryPoint": 2809,
									"id": 745,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_508": {
									"entryPoint": null,
									"id": 508,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_216": {
									"entryPoint": null,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 1200,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1692": {
									"entryPoint": 3445,
									"id": 1692,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_342": {
									"entryPoint": null,
									"id": 342,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_211": {
									"entryPoint": null,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_208": {
									"entryPoint": null,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 2177,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_218": {
									"entryPoint": null,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_541": {
									"entryPoint": 2231,
									"id": 541,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_192": {
									"entryPoint": null,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_196": {
									"entryPoint": null,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStartTime_313": {
									"entryPoint": 1830,
									"id": 313,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_791": {
									"entryPoint": 2326,
									"id": 791,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_205": {
									"entryPoint": null,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1677": {
									"entryPoint": 3433,
									"id": 1677,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_321": {
									"entryPoint": null,
									"id": 321,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_203": {
									"entryPoint": null,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 3278,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_226": {
									"entryPoint": null,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_222": {
									"entryPoint": null,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3791,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$965__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3920,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 4136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3986,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4027,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6124:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:7",
														"type": ""
													}
												],
												"src": "383:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "661:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "670:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "673:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "663:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "663:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "663:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "651:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "644:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "644:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "637:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:40:7"
															},
															"nodeType": "YulIf",
															"src": "617:60:7"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "596:5:7",
														"type": ""
													}
												],
												"src": "565:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:231:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:7"
															},
															"nodeType": "YulIf",
															"src": "782:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "843:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "872:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "853:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "891:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "904:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "895:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "967:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "945:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "945:28:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "982:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "992:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:7",
														"type": ""
													}
												],
												"src": "688:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1113:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1113:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1155:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1173:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1166:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1072:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1083:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1094:4:7",
														"type": ""
													}
												],
												"src": "1008:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1270:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1291:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1300:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:32:7"
															},
															"nodeType": "YulIf",
															"src": "1280:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1364:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1351:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1236:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1247:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1259:6:7",
														"type": ""
													}
												],
												"src": "1200:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1496:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1508:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1496:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1538:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1569:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1574:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1565:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1565:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1578:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1561:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1561:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1455:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1466:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1477:4:7",
														"type": ""
													}
												],
												"src": "1385:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1680:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1726:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1738:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1728:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1728:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1701:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1710:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1722:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:32:7"
															},
															"nodeType": "YulIf",
															"src": "1690:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1751:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1761:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1751:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1799:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1638:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1649:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1661:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1669:6:7",
														"type": ""
													}
												],
												"src": "1593:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1977:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1989:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1977:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2055:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2046:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2046:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2059:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2042:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2042:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$965__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1958:4:7",
														"type": ""
													}
												],
												"src": "1852:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2219:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2209:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:32:7"
															},
															"nodeType": "YulIf",
															"src": "2171:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2232:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2242:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2274:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2119:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2130:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2142:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2150:6:7",
														"type": ""
													}
												],
												"src": "2074:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2518:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2591:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:18:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2607:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2678:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2692:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2704:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2692:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2492:4:7",
														"type": ""
													}
												],
												"src": "2327:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2847:151:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2857:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2869:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2899:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2924:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2917:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2917:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2910:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2964:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2949:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2983:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2976:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2976:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2969:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2942:50:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2808:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2819:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2827:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2838:4:7",
														"type": ""
													}
												],
												"src": "2730:268:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3194:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3187:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3239:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3224:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3283:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3338:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3326:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3154:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3168:4:7",
														"type": ""
													}
												],
												"src": "3003:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3544:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3559:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3575:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3580:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3571:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3571:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3584:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3567:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3567:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3537:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3537:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3619:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3604:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3624:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3453:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3464:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3472:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3483:4:7",
														"type": ""
													}
												],
												"src": "3363:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3766:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3775:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3768:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3768:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3768:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3741:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3733:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:32:7"
															},
															"nodeType": "YulIf",
															"src": "3730:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3791:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3804:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3795:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3851:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3829:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:28:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3866:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3876:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3686:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3697:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3709:6:7",
														"type": ""
													}
												],
												"src": "3642:245:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4066:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4083:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4094:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4076:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4076:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4172:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4145:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4238:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:18:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4243:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4216:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4257:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4269:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4280:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4265:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4257:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4057:4:7",
														"type": ""
													}
												],
												"src": "3892:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4327:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4344:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4351:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4356:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4347:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4347:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4337:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4337:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4337:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4387:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4377:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4377:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4377:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4408:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4411:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4401:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4401:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4295:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4476:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4486:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4498:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4501:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4494:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "4486:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4527:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4529:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4529:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4529:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "4518:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4524:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4515:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4515:11:7"
															},
															"nodeType": "YulIf",
															"src": "4512:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4458:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4461:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4467:4:7",
														"type": ""
													}
												],
												"src": "4427:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4592:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4616:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4621:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4612:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4612:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4602:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4602:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4602:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4649:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4652:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4642:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4642:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4673:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4676:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4666:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4560:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4738:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4761:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "4763:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4763:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4763:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4758:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4751:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4751:9:7"
															},
															"nodeType": "YulIf",
															"src": "4748:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4792:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4801:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4804:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4797:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4797:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4792:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4723:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4726:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "4732:1:7",
														"type": ""
													}
												],
												"src": "4692:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4865:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4875:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4886:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4889:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4882:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4882:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4875:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4914:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4916:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4916:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4906:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4909:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4903:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4903:10:7"
															},
															"nodeType": "YulIf",
															"src": "4900:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4848:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4851:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4857:3:7",
														"type": ""
													}
												],
												"src": "4817:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4999:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5009:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5024:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5020:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5009:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5087:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5089:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5089:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5089:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5058:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5051:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5051:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5065:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5072:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5081:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5068:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5068:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5062:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5062:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5048:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5048:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5041:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5041:45:7"
															},
															"nodeType": "YulIf",
															"src": "5038:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4978:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4981:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "4987:7:7",
														"type": ""
													}
												],
												"src": "4947:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5167:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5198:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5200:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5200:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5200:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5183:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5194:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5190:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5190:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5180:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5180:17:7"
															},
															"nodeType": "YulIf",
															"src": "5177:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5229:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5240:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5247:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5236:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5236:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5229:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5149:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5159:3:7",
														"type": ""
													}
												],
												"src": "5120:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5434:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5451:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5462:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5444:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5444:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5485:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5496:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5481:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5481:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5501:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5474:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5474:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5524:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5535:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5520:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5520:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5540:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5513:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5513:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5513:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5566:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5578:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5574:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5566:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5411:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5425:4:7",
														"type": ""
													}
												],
												"src": "5260:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5641:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5664:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5666:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5666:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5666:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5661:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5654:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5654:9:7"
															},
															"nodeType": "YulIf",
															"src": "5651:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5695:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5704:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5707:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5700:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5700:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5695:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5626:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5629:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5635:1:7",
														"type": ""
													}
												],
												"src": "5603:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5894:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5961:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5934:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5984:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5995:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5980:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6000:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5973:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6055:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6066:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6051:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6051:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6071:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6044:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6089:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6101:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6112:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6089:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5871:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5885:4:7",
														"type": ""
													}
												],
												"src": "5720:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$965__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Adminable: caller is not the own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Adminable: caller is not the adm\")\n        mstore(add(headStart, 96), \"in\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x379 JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x3B5 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x3BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x32C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x34C JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x371 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x2F3 JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x2F9 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x319 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x17C JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x2D1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x2EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x2C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x22D JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x224 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F1 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x23B CALLDATASIZE PUSH1 0x4 PUSH2 0xE55 JUMP JUMPDEST PUSH2 0x4B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x569 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x2C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x7DB JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x881 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH2 0x1F1 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x307 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x327 CALLDATASIZE PUSH1 0x4 PUSH2 0xE8C JUMP JUMPDEST PUSH2 0x8B7 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x33A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x906 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x387 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x39A CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0xAEE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x359 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xECF JUMP JUMPDEST PUSH2 0xAF9 JUMP JUMPDEST PUSH2 0x1F1 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x240 PUSH2 0x403 CALLDATASIZE PUSH1 0x4 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x42D SWAP1 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x4A9 SWAP2 PUSH2 0x4A3 SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x49D SWAP1 PUSH2 0x47E SWAP1 PUSH2 0x478 DUP9 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 PUSH2 0xD69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xD75 JUMP JUMPDEST SWAP1 PUSH2 0xD81 JUMP JUMPDEST SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE DUP5 ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x5DC JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x5E8 DUP3 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x5F3 DUP2 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x645 JUMPI PUSH2 0x612 DUP4 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x71B JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E4 SWAP2 SWAP1 PUSH2 0xF33 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x72F CALLER PUSH2 0x250 JUMP JUMPDEST PUSH2 0x74B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xF50 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x764 JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x777 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x781 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x78C SWAP1 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7D3 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x7AD SWAP1 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x7B7 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x7C1 SWAP1 DUP4 PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x7CC DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0x795 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0x7EF JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x802 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0x80C SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x817 SWAP1 PUSH1 0x1 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x85E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x838 SWAP1 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x842 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST PUSH2 0x84C SWAP1 DUP4 PUSH2 0xFA8 JUMP JUMPDEST SWAP2 POP PUSH2 0x857 DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0x820 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x86F SWAP1 DUP4 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0x879 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8AB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH2 0x8B5 PUSH1 0x0 PUSH2 0xD99 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD PUSH1 0x0 SUB PUSH2 0x8CB JUMPI POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x900 PUSH2 0x8F7 PUSH1 0xE SLOAD PUSH2 0x49D PUSH8 0xDE0B6B3A7640000 PUSH2 0x8F1 DUP8 PUSH2 0x8F1 PUSH1 0xA SLOAD PUSH2 0x478 TIMESTAMP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xD75 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0xD8D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 TIMESTAMP PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x967 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x974 CALLER PUSH2 0x250 JUMP JUMPDEST PUSH2 0x990 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xF50 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x9AE JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x9BA DUP3 TIMESTAMP PUSH2 0xAF9 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C5 DUP2 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0xA17 JUMPI PUSH2 0x9E4 DUP4 PUSH2 0x408 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0xA58 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0xA65 SWAP1 DUP6 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xA8B SWAP1 DUP6 PUSH2 0xD8D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0xADA SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x911 TIMESTAMP PUSH2 0xDEB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0xB0C JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0xB15 JUMPI POP DUP3 ISZERO JUMPDEST ISZERO PUSH2 0xB22 JUMPI POP PUSH1 0x0 PUSH2 0x900 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0xB32 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xB48 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xB69 SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xB7A DUP8 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0xB84 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xB8E SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0xBA3 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xBAD SWAP2 SWAP1 PUSH2 0x1028 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xBBE DUP9 PUSH2 0x7DB JUMP JUMPDEST PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xBD2 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP DUP6 PUSH2 0xBDF DUP6 DUP10 PUSH2 0xFE5 JUMP JUMPDEST GT ISZERO PUSH2 0xBF9 JUMPI PUSH2 0xBEE DUP8 PUSH2 0xDEB JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x900 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 PUSH2 0xC07 DUP6 DUP11 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xC11 SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST PUSH2 0xC1B SWAP2 SWAP1 PUSH2 0xFA8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xC28 DUP10 PUSH2 0x750 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0xC42 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC93 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xC5F SWAP1 DUP6 PUSH2 0xFF8 JUMP JUMPDEST PUSH2 0xC69 SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP4 POP PUSH2 0xC75 DUP5 DUP5 PUSH2 0xFA8 JUMP JUMPDEST SWAP3 POP PUSH2 0xC81 DUP5 DUP7 PUSH2 0xFE5 JUMP JUMPDEST SWAP5 POP PUSH2 0xC8C DUP2 PUSH2 0x100F JUMP JUMPDEST SWAP1 POP PUSH2 0xC47 JUMP JUMPDEST POP PUSH2 0xC9E DUP14 DUP14 PUSH2 0xFA8 JUMP JUMPDEST DUP8 PUSH2 0xCA9 DUP12 DUP8 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xCB3 SWAP2 SWAP1 PUSH2 0xFE5 JUMP JUMPDEST PUSH2 0xCBD SWAP2 SWAP1 PUSH2 0xFD1 JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DA SWAP1 PUSH2 0xEF1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x4DA JUMP JUMPDEST PUSH2 0xD66 DUP2 PUSH2 0xD99 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFA8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFF8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFD1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP3 DUP5 PUSH2 0xFE5 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDF7 DUP4 PUSH2 0x7DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x879 PUSH1 0x7 SLOAD DUP4 PUSH2 0xD81 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A9 DUP3 PUSH2 0xE10 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE71 DUP4 PUSH2 0xE10 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xE81 DUP2 PUSH2 0xE47 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC1 DUP4 PUSH2 0xE10 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x4A9 DUP2 PUSH2 0xE47 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xFE0 JUMPI PUSH2 0xFE0 PUSH2 0xFBB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x900 JUMPI PUSH2 0x900 PUSH2 0xF92 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1021 JUMPI PUSH2 0x1021 PUSH2 0xF92 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1037 JUMPI PUSH2 0x1037 PUSH2 0xFBB JUMP JUMPDEST POP MOD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB9 RETURN CREATE2 0x4B NUMBER 0x21 ISZERO 0xB5 SLOAD BYTE PUSH22 0x3EBC3B176AF9272517C18D1C7FD87FECC66B3A3A6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "371:6051:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3942:296;;;;;;:::i;:::-;;:::i;:::-;;;529:25:7;;;517:2;502:18;3942:296:1;;;;;;;;500:42;;;;;;:::i;:::-;;;;;;;;;;;;;;551:44;;;;;;1642:184:0;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;:::i;:::-;-1:-1:-1;;;;;1091:16:0;1067:4;1091:16;;;;;;;;;;;;;;1004:111;;;;1173:14:7;;1166:22;1148:41;;1136:2;1121:18;1004:111:0;1008:187:7;679:40:1;;;;;;5986:303;;;:::i;1678:88::-;;;;;;:::i;:::-;;:::i;2692:416::-;;;;;;:::i;:::-;;:::i;2218:466::-;;;;;;:::i;:::-;;:::i;633:39::-;;;;;;1774:93;1847:12;;1774:93;;1123:103:0;;;:::i;602:24:1:-;;;;;;726:45;;;;;;3471:107;3555:15;3471:107;;922:53;;;;;;:::i;:::-;;;;;;;;;;;;;;3586:348;;;;;;:::i;:::-;;:::i;858:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;909:87:0;982:6;;-1:-1:-1;;;;;982:6:0;909:87;;;-1:-1:-1;;;;;1549:32:7;;;1531:51;;1519:2;1504:18;909:87:0;1385:203:7;2096:114:1;;;:::i;5674:300::-;;;;;;:::i;:::-;;:::i;1977:111::-;;;;;;:::i;:::-;-1:-1:-1;;;;;2062:18:1;2035:7;2062:18;;;:9;:18;;;;;;;1977:111;778:29;;;;;;3116:115;;;:::i;467:26::-;;;;;-1:-1:-1;;;;;467:26:1;;;4281:1383;;;;;;:::i;:::-;;:::i;814:35::-;;;;;;1234:201:0;;;;;;:::i;:::-;;:::i;3942:296:1:-;-1:-1:-1;;;;;4054:27:1;;3996:7;4054:27;;;:18;:27;;;;;;3996:7;;4031:68;;4083:15;4031:22;:68::i;:::-;-1:-1:-1;;;;;4213:16:1;;;;;;:7;:16;;;;;;;;;4165:22;:31;;;;;;;4016:83;;-1:-1:-1;4117:113:1;;:91;;4203:4;;4117:81;;4140:57;;:20;4016:83;4140:14;:20::i;:::-;:24;;:57::i;:::-;-1:-1:-1;;;;;4117:18:1;;;;;;:9;:18;;;;;;;:22;:81::i;:::-;:85;;:91::i;:::-;:95;;:113::i;:::-;4110:120;3942:296;-1:-1:-1;;;3942:296:1:o;1642:184:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1737:48:0;::::1;1763:7;:14:::0;;;::::1;::::0;;;;;;;;;1737:48;;1763:14:::1;::::0;;::::1;2917::7::0;2910:22;2892:41;;2976:14;;2969:22;2949:18;;;2942:50;;;;1737:48:0::1;::::0;2865:18:7;1737:48:0::1;;;;;;;-1:-1:-1::0;;;;;1796:14:0;;;::::1;:7;:14:::0;;;::::1;::::0;;;;;;:22;;-1:-1:-1;;1796:22:0::1;::::0;::::1;;::::0;;;::::1;::::0;;1642:184::o;5986:303:1:-;1778:1:2;2376:7;;:19;2368:63;;;;-1:-1:-1;;;2368:63:2;;3205:2:7;2368:63:2;;;3187:21:7;3244:2;3224:18;;;3217:30;3283:33;3263:18;;;3256:61;3334:18;;2368:63:2;3003:355:7;2368:63:2;1778:1;2509:18;;6040:10:1::1;1127:12;1142:27:::0;;;:18:::1;:27;::::0;;;;;1191:9:::1;::::0;1183:17;::::1;1180:65;;-1:-1:-1::0;1224:9:1::1;::::0;1180:65:::1;1255:12;1270:45;1293:4;1299:15;1270:22;:45::i;:::-;1255:60;;1349:20;1364:4;1349:14;:20::i;:::-;1326;:43:::0;3555:15;1380:14:::1;:43:::0;-1:-1:-1;;;;;1438:21:1;::::1;::::0;1434:217:::1;;1495:15;1502:7;1495:6;:15::i;:::-;-1:-1:-1::0;;;;;1476:16:1;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;1559:20:::1;::::0;1525:22:::1;:31:::0;;;;;:54;1594:18:::1;:27:::0;;;1624:15:::1;1594:45:::0;;1434:217:::1;6088:10:::2;6063:14;6080:19:::0;;;:7:::2;:19;::::0;;;;;6114:10;;6110:172:::2;;6149:10;6163:1;6141:19:::0;;;:7:::2;:19;::::0;;;;;;;:23;;;;6179:12:::2;::::0;:41;;-1:-1:-1;;;6179:41:1;;;;::::2;3537:51:7::0;;;;3604:18;;;3597:34;;;-1:-1:-1;;;;;6179:12:1::2;::::0;:21:::2;::::0;3510:18:7;;6179:41:1::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6240:30:1::2;::::0;529:25:7;;;6251:10:1::2;::::0;6240:30:::2;::::0;517:2:7;502:18;6240:30:1::2;;;;;;;6110:172;-1:-1:-1::0;;1734:1:2;2688:7;:22;-1:-1:-1;;5986:303:1:o;1678:88::-;821:21:0;143:10;829:12;63:98;821:21;813:68;;;;-1:-1:-1;;;813:68:0;;;;;;;:::i;:::-;1742:9:1::1;:16:::0;1678:88::o;2692:416::-;2750:7;2773:9;;2786:1;2773:14;2770:62;;-1:-1:-1;;2811:9:1;;;2692:416::o;2770:62::-;2842:13;2879:12;;2866:9;;2859:4;:16;;;;:::i;:::-;2858:33;;;;:::i;:::-;:37;;2894:1;2858:37;:::i;:::-;2922:12;;2842:53;;-1:-1:-1;2906:13:1;2945:133;2968:5;2964:1;:9;2945:133;;;3043:23;;3019:21;;3011:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;3003:63;;:5;:63;:::i;:::-;2995:71;-1:-1:-1;2975:3:1;;;:::i;:::-;;;2945:133;;;-1:-1:-1;3095:5:1;2692:416;-1:-1:-1;;;2692:416:1:o;2218:466::-;2276:7;2299:9;;2312:1;2299:14;2296:62;;-1:-1:-1;;2337:9:1;;;2218:466::o;2296:62::-;2368:13;2405:12;;2392:9;;2385:4;:16;;;;:::i;:::-;2384:33;;;;:::i;:::-;:37;;2420:1;2384:37;:::i;:::-;2448:12;;2368:53;;-1:-1:-1;2432:13:1;2471:133;2494:5;2490:1;:9;2471:133;;;2569:23;;2545:21;;2537:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;2529:63;;:5;:63;:::i;:::-;2521:71;-1:-1:-1;2501:3:1;;;:::i;:::-;;;2471:133;;;-1:-1:-1;2653:23:1;;2629:21;;2621:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;2614:62;2218:466;-1:-1:-1;;;;2218:466:1:o;1123:103:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;3586:348:1:-;3651:7;3675:12;;3691:1;3675:17;3671:77;;-1:-1:-1;;3716:20:1;;;3586:348::o;3671:77::-;3778:148;3821:90;3898:12;;3821:72;3888:4;3821:62;3872:10;3821:46;3852:14;;3821:26;3555:15;;3471:107;3821:46;:50;;:62::i;:90::-;3778:20;;;:24;:148::i;:::-;3758:168;3586:348;-1:-1:-1;;3586:348:1:o;2096:114::-;2145:7;2172:30;2186:15;2172:13;:30::i;:::-;2165:37;;2096:114;:::o;5674:300::-;1778:1:2;2376:7;;:19;2368:63;;;;-1:-1:-1;;;2368:63:2;;3205:2:7;2368:63:2;;;3187:21:7;3244:2;3224:18;;;3217:30;3283:33;3263:18;;;3256:61;3334:18;;2368:63:2;3003:355:7;2368:63:2;1778:1;2509:18;;821:21:0::1;143:10:::0;829:12:::1;63:98:::0;821:21:::1;813:68;;;;-1:-1:-1::0;;;813:68:0::1;;;;;;;:::i;:::-;5764:10:1::2;1127:12;1142:27:::0;;;:18:::2;:27;::::0;;;;;1191:9:::2;::::0;1183:17;::::2;1180:65;;-1:-1:-1::0;1224:9:1::2;::::0;1180:65:::2;1255:12;1270:45;1293:4;1299:15;1270:22;:45::i;:::-;1255:60;;1349:20;1364:4;1349:14;:20::i;:::-;1326;:43:::0;3555:15;1380:14:::2;:43:::0;-1:-1:-1;;;;;1438:21:1;::::2;::::0;1434:217:::2;;1495:15;1502:7;1495:6;:15::i;:::-;-1:-1:-1::0;;;;;1476:16:1;::::2;;::::0;;;:7:::2;:16;::::0;;;;;;;:34;;;;1559:20:::2;::::0;1525:22:::2;:31:::0;;;;;:54;1594:18:::2;:27:::0;;;1624:15:::2;1594:45:::0;;1434:217:::2;5804:1:::3;5795:6;:10;5787:37;;;::::0;-1:-1:-1;;;5787:37:1;;5462:2:7;5787:37:1::3;::::0;::::3;5444:21:7::0;5501:2;5481:18;;;5474:30;-1:-1:-1;;;5520:18:7;;;5513:44;5574:18;;5787:37:1::3;5260:338:7::0;5787:37:1::3;5850:12;::::0;:24:::3;::::0;5867:6;5850:16:::3;:24::i;:::-;5835:12;:39:::0;-1:-1:-1;;;;;5903:15:1;::::3;;::::0;;;:9:::3;:15;::::0;;;;;:27:::3;::::0;5923:6;5903:19:::3;:27::i;:::-;-1:-1:-1::0;;;;;5885:15:1;::::3;;::::0;;;:9:::3;:15;::::0;;;;;;:45;;;;5946:20;;::::3;::::0;::::3;::::0;5959:6;529:25:7;;517:2;502:18;;383:177;5946:20:1::3;;;;;;;;-1:-1:-1::0;;1734:1:2;2688:7;:22;-1:-1:-1;;;5674:300:1:o;3116:115::-;3165:7;3192:31;3207:15;3192:14;:31::i;4281:1383::-;4371:7;4403:9;;4416:1;4403:14;:39;;;;4433:9;4421:8;:21;;4403:39;:56;;;-1:-1:-1;4446:13:1;;4403:56;4400:96;;;-1:-1:-1;4483:1:1;4476:8;;4400:96;4522:9;;4511:8;:20;4508:72;;;4559:9;;4548:20;;4508:72;4592:20;4672:12;;4656;;4643:9;;4632:8;:20;;;;:::i;:::-;4631:37;;;;:::i;:::-;4616:12;;:52;;;;:::i;:::-;4615:69;;;;:::i;:::-;4592:92;;4695:18;4757:12;;4742;4716:23;4730:8;4716:13;:23::i;:::-;:38;;;;:::i;:::-;:53;;;;:::i;:::-;4695:74;;4782:21;4832:12;;4819:9;;4807;:21;;;;:::i;:::-;4806:38;;;;:::i;:::-;4782:62;;4855:19;4920:12;;4904:13;4877:24;4891:9;4877:13;:24::i;:::-;:40;;;;:::i;:::-;:55;;;;:::i;:::-;4855:77;-1:-1:-1;4974:9:1;4948:23;4959:12;4948:8;:23;:::i;:::-;:35;4945:98;;;5007:24;5022:8;5007:14;:24::i;:::-;5000:31;;;;;;;;4945:98;5055:19;5116:12;5105:8;5077:25;5089:13;5077:9;:25;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;5055:73;;5139:19;5161:23;5175:8;5161:13;:23::i;:::-;5139:45;;5196:22;5233:18;5266:13;5282:11;5266:27;;5304:13;5334:12;;5320:11;:26;;;;:::i;:::-;5304:42;;5361:9;5357:214;5380:5;5376:1;:9;5357:214;;;5452:23;;5428:21;;5420:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;5407:68;-1:-1:-1;5498:18:1;5407:68;5498:5;:18;:::i;:::-;5490:26;-1:-1:-1;5531:28:1;5549:10;5531:28;;:::i;:::-;;-1:-1:-1;5387:3:1;;;:::i;:::-;;;5357:214;;;-1:-1:-1;5635:20:1;5647:8;5635:9;:20;:::i;:::-;5619:11;5589:27;5606:10;5589:14;:27;:::i;:::-;:41;;;;:::i;:::-;5588:68;;;;:::i;:::-;5581:75;4281:1383;-1:-1:-1;;;;;;;;;;;;;4281:1383:1:o;1234:201:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:22:0;::::1;1315:73;;;::::0;-1:-1:-1;;;1315:73:0;;5922:2:7;1315:73:0::1;::::0;::::1;5904:21:7::0;5961:2;5941:18;;;5934:30;6000:34;5980:18;;;5973:62;-1:-1:-1;;;6051:18:7;;;6044:36;6097:19;;1315:73:0::1;5720:402:7::0;1315:73:0::1;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3214:98:6:-;3272:7;3299:5;3303:1;3299;:5;:::i;3571:98::-;3629:7;3656:5;3660:1;3656;:5;:::i;3970:98::-;4028:7;4055:5;4059:1;4055;:5;:::i;2833:98::-;2891:7;2918:5;2922:1;2918;:5;:::i;1443:191:0:-;1536:6;;;-1:-1:-1;;;;;1553:17:0;;;-1:-1:-1;;;;;;1553:17:0;;;;;;;1586:40;;1536:6;;;1553:17;1536:6;;1586:40;;1517:16;;1586:40;1506:128;1443:191;:::o;3239:222:1:-;3299:7;3319:21;3343:19;3357:4;3343:13;:19::i;:::-;3319:43;;3373:18;3394:31;3412:12;;3394:13;:17;;:31;;;;:::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:118::-;651:5;644:13;637:21;630:5;627:32;617:60;;673:1;670;663:12;688:315;753:6;761;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;853:29;872:9;853:29;:::i;:::-;843:39;;932:2;921:9;917:18;904:32;945:28;967:5;945:28;:::i;:::-;992:5;982:15;;;688:315;;;;;:::o;1200:180::-;1259:6;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;-1:-1:-1;1351:23:7;;1200:180;-1:-1:-1;1200:180:7:o;1593:254::-;1661:6;1669;1722:2;1710:9;1701:7;1697:23;1693:32;1690:52;;;1738:1;1735;1728:12;1690:52;1761:29;1780:9;1761:29;:::i;:::-;1751:39;1837:2;1822:18;;;;1809:32;;-1:-1:-1;;;1593:254:7:o;2074:248::-;2142:6;2150;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;;2242:23:7;;;2312:2;2297:18;;;2284:32;;-1:-1:-1;2074:248:7:o;2327:398::-;2529:2;2511:21;;;2568:2;2548:18;;;2541:30;2607:34;2602:2;2587:18;;2580:62;-1:-1:-1;;;2673:2:7;2658:18;;2651:32;2715:3;2700:19;;2327:398::o;3642:245::-;3709:6;3762:2;3750:9;3741:7;3737:23;3733:32;3730:52;;;3778:1;3775;3768:12;3730:52;3810:9;3804:16;3829:28;3851:5;3829:28;:::i;3892:398::-;4094:2;4076:21;;;4133:2;4113:18;;;4106:30;4172:34;4167:2;4152:18;;4145:62;-1:-1:-1;;;4238:2:7;4223:18;;4216:32;4280:3;4265:19;;3892:398::o;4295:127::-;4356:10;4351:3;4347:20;4344:1;4337:31;4387:4;4384:1;4377:15;4411:4;4408:1;4401:15;4427:128;4494:9;;;4515:11;;;4512:37;;;4529:18;;:::i;4560:127::-;4621:10;4616:3;4612:20;4609:1;4602:31;4652:4;4649:1;4642:15;4676:4;4673:1;4666:15;4692:120;4732:1;4758;4748:35;;4763:18;;:::i;:::-;-1:-1:-1;4797:9:7;;4692:120::o;4817:125::-;4882:9;;;4903:10;;;4900:36;;;4916:18;;:::i;4947:168::-;5020:9;;;5051;;5068:15;;;5062:22;;5048:37;5038:71;;5089:18;;:::i;5120:135::-;5159:3;5180:17;;;5177:43;;5200:18;;:::i;:::-;-1:-1:-1;5247:1:7;5236:13;;5120:135::o;5603:112::-;5635:1;5661;5651:35;;5666:18;;:::i;:::-;-1:-1:-1;5700:9:7;;5603:112::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "842000",
								"executionCost": "137251",
								"totalCost": "979251"
							},
							"external": {
								"curTime()": "291",
								"earned(address)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getRemainPool(uint256)": "infinite",
								"getReward()": "infinite",
								"getRewardPool(uint256)": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2620",
								"lastTimeRewardApplicable()": "226",
								"lastUpdateTime()": "2373",
								"modificationAdmin(address,bool)": "30844",
								"owner()": "2387",
								"powersOf(address)": "2593",
								"rateInterval()": "2396",
								"rateIntervalDenominator()": "2395",
								"rateIntervalNumerator()": "2374",
								"renounceOwnership()": "28184",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2372",
								"rewards(address)": "2577",
								"rewardsToken()": "2381",
								"setStartTime(uint256)": "24609",
								"stake(address,uint256)": "infinite",
								"startTime()": "2373",
								"totalPowers()": "2326",
								"totalRewards()": "2375",
								"transferOwnership(address)": "28422",
								"userLastUpdateTime(address)": "2576",
								"userRewardPerTokenPaid(address)": "2553"
							},
							"internal": {
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 581,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 551,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 595,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 663,
									"end": 672,
									"name": "PUSH",
									"source": 1,
									"value": "3C"
								},
								{
									"begin": 633,
									"end": 672,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 633,
									"end": 672,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 718,
									"end": 719,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 679,
									"end": 719,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 679,
									"end": 719,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 767,
									"end": 771,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 726,
									"end": 771,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 726,
									"end": 771,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 6422,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042b9f3f54b432115b5541a753ebc3b176af9272517c18d1c7fd87fecc66b3a3a64736f6c63430008110033",
									".code": [
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "9A5B17B0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "5CFA91F4"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 6422,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3942,
											"end": 4238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3942,
											"end": 4238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 595,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1148,
											"end": 1189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1148,
											"end": 1189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1008,
											"end": 1195,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 679,
											"end": 719,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 679,
											"end": 719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 679,
											"end": 719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 679,
											"end": 719,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 679,
											"end": 719,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 679,
											"end": 719,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 679,
											"end": 719,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5986,
											"end": 6289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1678,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1678,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2692,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2692,
											"end": 3108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 2218,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2218,
											"end": 2684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 672,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 633,
											"end": 672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 672,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 633,
											"end": 672,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 633,
											"end": 672,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 633,
											"end": 672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1867,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1774,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1847,
											"end": 1859,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1774,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1774,
											"end": 1867,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 626,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 602,
											"end": 626,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 626,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 626,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 726,
											"end": 771,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 726,
											"end": 771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 726,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 771,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 726,
											"end": 771,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 726,
											"end": 771,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 726,
											"end": 771,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3578,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3471,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3578,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 922,
											"end": 975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 922,
											"end": 975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 975,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 3586,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3586,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 858,
											"end": 915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 858,
											"end": 915,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1385,
											"end": 1588,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2096,
											"end": 2210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 5674,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5674,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1977,
											"end": 2088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2035,
											"end": 2042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2071,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2062,
											"end": 2080,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2088,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 778,
											"end": 807,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 778,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 778,
											"end": 807,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 778,
											"end": 807,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 807,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3116,
											"end": 3231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 4281,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4281,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 814,
											"end": 849,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 814,
											"end": 849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 814,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 814,
											"end": 849,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 814,
											"end": 849,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 814,
											"end": 849,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 814,
											"end": 849,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4081,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4099,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4031,
											"end": 4099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4098,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4031,
											"end": 4099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4099,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4031,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4213,
											"end": 4229,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4187,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4165,
											"end": 4196,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4099,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4117,
											"end": 4230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4117,
											"end": 4208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4203,
											"end": 4207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4117,
											"end": 4198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4140,
											"end": 4197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4016,
											"end": 4099,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4140,
											"end": 4160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4140,
											"end": 4160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4140,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4140,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4140,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4117,
											"end": 4198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4198,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 4117,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4117,
											"end": 4208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4208,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 4117,
											"end": 4208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4212,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4212,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4117,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4230,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 4117,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4110,
											"end": 4230,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3942,
											"end": 4238,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3942,
											"end": 4238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2931,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2991,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5986,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3003,
											"end": 3358,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6040,
											"end": 6050,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1142,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1200,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1200,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1233,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1293,
											"end": 1297,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1314,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1270,
											"end": 1315,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1315,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1315,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1364,
											"end": 1368,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1363,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1349,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1346,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1326,
											"end": 1369,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1394,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1459,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1495,
											"end": 1510,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1579,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1559,
											"end": 1579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1579,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1639,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1639,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6098,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6077,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6087,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6080,
											"end": 6099,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6080,
											"end": 6099,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6124,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6114,
											"end": 6124,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6282,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6110,
											"end": 6282,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6159,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6163,
											"end": 6164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6141,
											"end": 6160,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6160,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6164,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6164,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6141,
											"end": 6164,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6191,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 6179,
											"end": 6191,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6179,
											"end": 6191,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 6179,
											"end": 6200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6220,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 6179,
											"end": 6220,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 6179,
											"end": 6220,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6270,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6251,
											"end": 6261,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 6240,
											"end": 6270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6270,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 6110,
											"end": 6282,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 6110,
											"end": 6282,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5986,
											"end": 6289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1678,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1742,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1742,
											"end": 1758,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2770,
											"end": 2832,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2770,
											"end": 2832,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 2770,
											"end": 2832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2879,
											"end": 2891,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2866,
											"end": 2875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2859,
											"end": 2875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2859,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2858,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2858,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2895,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2858,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2858,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2934,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2922,
											"end": 2934,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 2895,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 2973,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2964,
											"end": 2973,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3066,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3043,
											"end": 3066,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3040,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3019,
											"end": 3040,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3016,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 3011,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 3011,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 3011,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3011,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3008,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 3003,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3003,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3066,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2975,
											"end": 2978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2975,
											"end": 2978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 2945,
											"end": 3078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3095,
											"end": 3100,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 3108,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2692,
											"end": 3108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2283,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2299,
											"end": 2308,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2299,
											"end": 2313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2296,
											"end": 2358,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2358,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2296,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2405,
											"end": 2417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2389,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2385,
											"end": 2401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 2385,
											"end": 2401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2384,
											"end": 2417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2384,
											"end": 2417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2384,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2384,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2448,
											"end": 2460,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2432,
											"end": 2445,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2491,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2499,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2569,
											"end": 2592,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2569,
											"end": 2592,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2545,
											"end": 2566,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2542,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2537,
											"end": 2566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2537,
											"end": 2566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2537,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2537,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2529,
											"end": 2592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2529,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2529,
											"end": 2592,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2529,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2521,
											"end": 2592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2501,
											"end": 2504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2501,
											"end": 2504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 2471,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2653,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2653,
											"end": 2676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2650,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2629,
											"end": 2650,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 2621,
											"end": 2650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2621,
											"end": 2650,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2621,
											"end": 2676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2621,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2676,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2684,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2218,
											"end": 2684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3651,
											"end": 3658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3675,
											"end": 3687,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3671,
											"end": 3748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3736,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3716,
											"end": 3736,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3748,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3671,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3821,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 3888,
											"end": 3892,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3821,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3872,
											"end": 3882,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3852,
											"end": 3866,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3852,
											"end": 3866,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3471,
											"end": 3578,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 3821,
											"end": 3867,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 3821,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3911,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 3821,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3798,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3778,
											"end": 3798,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 3778,
											"end": 3926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3778,
											"end": 3926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3758,
											"end": 3926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3934,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3586,
											"end": 3934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2145,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2186,
											"end": 2201,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2172,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2172,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2096,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 5674,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 3003,
											"end": 3358,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5764,
											"end": 5774,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1139,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1160,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1142,
											"end": 1169,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1142,
											"end": 1169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1200,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1191,
											"end": 1200,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1200,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1224,
											"end": 1233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1224,
											"end": 1233,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 1180,
											"end": 1245,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1267,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1293,
											"end": 1297,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1299,
											"end": 1314,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1292,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 1270,
											"end": 1315,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 1270,
											"end": 1315,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1315,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1315,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1364,
											"end": 1368,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1363,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1349,
											"end": 1369,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 1349,
											"end": 1369,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1326,
											"end": 1346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1326,
											"end": 1369,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3570,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1380,
											"end": 1394,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1380,
											"end": 1423,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1438,
											"end": 1459,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1459,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1502,
											"end": 1509,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1501,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1495,
											"end": 1510,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 1495,
											"end": 1510,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1483,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1476,
											"end": 1492,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1492,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1476,
											"end": 1510,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1559,
											"end": 1579,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1559,
											"end": 1579,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1547,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1556,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1525,
											"end": 1579,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1612,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1621,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1624,
											"end": 1639,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1639,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 1434,
											"end": 1651,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5804,
											"end": 5805,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5801,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5805,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5787,
											"end": 5824,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5787,
											"end": 5824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5464,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5787,
											"end": 5824,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5503,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5481,
											"end": 5499,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5474,
											"end": 5504,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5520,
											"end": 5538,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5520,
											"end": 5538,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5513,
											"end": 5557,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5574,
											"end": 5592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 5260,
											"end": 5598,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 5787,
											"end": 5824,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5862,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5850,
											"end": 5862,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5874,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 5850,
											"end": 5874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5866,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5850,
											"end": 5874,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5874,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 5850,
											"end": 5874,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5835,
											"end": 5847,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5835,
											"end": 5874,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5912,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5903,
											"end": 5918,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5918,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5930,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5903,
											"end": 5930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5923,
											"end": 5929,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5922,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5903,
											"end": 5930,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5930,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 5903,
											"end": 5930,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5894,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5885,
											"end": 5900,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5930,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5930,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5930,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5946,
											"end": 5966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5946,
											"end": 5966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5959,
											"end": 5965,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5966,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5674,
											"end": 5974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3116,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3192,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 3207,
											"end": 3222,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3192,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3192,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4371,
											"end": 4378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4412,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4403,
											"end": 4412,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4416,
											"end": 4417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4403,
											"end": 4417,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4433,
											"end": 4442,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4442,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4403,
											"end": 4442,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4459,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4403,
											"end": 4459,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4446,
											"end": 4459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4446,
											"end": 4459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4403,
											"end": 4459,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4403,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4400,
											"end": 4496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4483,
											"end": 4484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4476,
											"end": 4484,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4476,
											"end": 4484,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4400,
											"end": 4496,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4400,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4522,
											"end": 4531,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4519,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4511,
											"end": 4531,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4580,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4508,
											"end": 4580,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4568,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4548,
											"end": 4568,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4508,
											"end": 4580,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4508,
											"end": 4580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4672,
											"end": 4684,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4668,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4656,
											"end": 4668,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4643,
											"end": 4652,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4640,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4632,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4632,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4631,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4631,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4628,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4616,
											"end": 4628,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4616,
											"end": 4668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4616,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4615,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 4615,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4592,
											"end": 4684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4713,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4757,
											"end": 4769,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4742,
											"end": 4754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4730,
											"end": 4738,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4716,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4739,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4716,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4716,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4716,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4716,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4716,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4769,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4769,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4803,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4832,
											"end": 4844,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4816,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 4807,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 4807,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 4806,
											"end": 4844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 4806,
											"end": 4844,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4844,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4782,
											"end": 4844,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4932,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4920,
											"end": 4932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4917,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4891,
											"end": 4900,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4877,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 4877,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 4877,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 4877,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4877,
											"end": 4932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 4877,
											"end": 4932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4959,
											"end": 4971,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4956,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 4948,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 4948,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4983,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 5043,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4945,
											"end": 5043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5022,
											"end": 5030,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 5007,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5007,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 5000,
											"end": 5031,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 5043,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 4945,
											"end": 5043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5116,
											"end": 5128,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5105,
											"end": 5113,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5089,
											"end": 5102,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5086,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5077,
											"end": 5102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5077,
											"end": 5102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5077,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5077,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5077,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5077,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5128,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5128,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5158,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5161,
											"end": 5184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5175,
											"end": 5183,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5161,
											"end": 5184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5161,
											"end": 5184,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 5161,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5184,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5139,
											"end": 5184,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5196,
											"end": 5218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5233,
											"end": 5251,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5334,
											"end": 5346,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5331,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5320,
											"end": 5346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 5320,
											"end": 5346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5361,
											"end": 5370,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5380,
											"end": 5385,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5385,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5452,
											"end": 5475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5428,
											"end": 5449,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5420,
											"end": 5449,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5425,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5449,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 5420,
											"end": 5449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5449,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 5420,
											"end": 5449,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5420,
											"end": 5475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 5420,
											"end": 5475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5407,
											"end": 5475,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5407,
											"end": 5475,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5503,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5498,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 5498,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5490,
											"end": 5516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5549,
											"end": 5559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5531,
											"end": 5559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5559,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 5387,
											"end": 5390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5387,
											"end": 5390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5357,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5647,
											"end": 5655,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5644,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 5635,
											"end": 5655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 5635,
											"end": 5655,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5630,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5606,
											"end": 5616,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5603,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5616,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5589,
											"end": 5616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5616,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 5589,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 5589,
											"end": 5630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5589,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 5588,
											"end": 5656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 5588,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5581,
											"end": 5656,
											"name": "SWAP14",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 5664,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4281,
											"end": 5664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6034,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6097,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5720,
											"end": 6122,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 3299,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3656,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 4055,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2918,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3239,
											"end": 3461,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3239,
											"end": 3461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3340,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3357,
											"end": 3361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3343,
											"end": 3362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 3343,
											"end": 3362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3319,
											"end": 3362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3373,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3394,
											"end": 3425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3412,
											"end": 3424,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3425,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3425,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3425,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 565,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 644,
											"end": 657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 630,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 659,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 617,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 617,
											"end": 677,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 663,
											"end": 675,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 753,
											"end": 759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 853,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 904,
											"end": 936,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 967,
											"end": 972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 945,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 945,
											"end": 973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1310,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1593,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 1761,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "138"
										},
										{
											"begin": 2074,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2201,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2725,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 2327,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3887,
											"name": "tag",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 3642,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3765,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3829,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4290,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 3892,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4206,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4295,
											"end": 4422,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4295,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4356,
											"end": 4366,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4351,
											"end": 4354,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4347,
											"end": 4367,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4344,
											"end": 4345,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4337,
											"end": 4368,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4391,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4384,
											"end": 4385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4411,
											"end": 4415,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4416,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4555,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 4427,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4515,
											"end": 4526,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4512,
											"end": 4549,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4529,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4560,
											"end": 4687,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4560,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4621,
											"end": 4631,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4616,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4612,
											"end": 4632,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4602,
											"end": 4633,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4652,
											"end": 4656,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4649,
											"end": 4650,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4676,
											"end": 4680,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4681,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4812,
											"name": "tag",
											"source": 7,
											"value": "201"
										},
										{
											"begin": 4692,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4732,
											"end": 4733,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4758,
											"end": 4759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4748,
											"end": 4783,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4763,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4763,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4763,
											"end": 4781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4763,
											"end": 4781,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 4763,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4692,
											"end": 4812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4817,
											"end": 4942,
											"name": "tag",
											"source": 7,
											"value": "203"
										},
										{
											"begin": 4817,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4891,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4882,
											"end": 4891,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4913,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4913,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4903,
											"end": 4913,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4936,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 4936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4900,
											"end": 4936,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 4916,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4916,
											"end": 4934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4947,
											"end": 5115,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 4947,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5051,
											"end": 5060,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5083,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5084,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5084,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5085,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5038,
											"end": 5109,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5089,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5089,
											"end": 5107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5255,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 5120,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5159,
											"end": 5162,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5177,
											"end": 5220,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5177,
											"end": 5220,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 5200,
											"end": 5218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5200,
											"end": 5218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5236,
											"end": 5249,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5715,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 5603,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5636,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5651,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5651,
											"end": 5686,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 5666,
											"end": 5684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 5666,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5603,
											"end": 5715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"curTime()": "9a5b17b0",
							"earned(address)": "008cc262",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getRemainPool(uint256)": "4dbdc4eb",
							"getReward()": "3d18b912",
							"getRewardPool(uint256)": "5cfa91f4",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"curTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRemainPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0x81994025c0820255097ca17718492ef665f6983fa1d60e9c830cbd1fd97e721f\",\"urls\":[\"bzz-raw://26277cf4876bc984fd48bce82c192b8deb7154abf88ac753c160c98d2f535be1\",\"dweb:/ipfs/Qme9hd4bcj4G2ExjR64HYDEDkc1moTcn2z5rWLGN9nQbav\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 858,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)965"
							},
							{
								"astId": 196,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 214,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 222,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 226,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 228,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 232,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)965": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 858,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 ORIGIN 0xD4 PUSH16 0xFC2071DBE7AEC9482D52C73CC01BE16F 0x1F SMOD DUP1 0xBA 0xE8 SWAP10 PUSH20 0xCD1574EDF064736F6C6343000811003300000000 ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;662:3351:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 ORIGIN 0xD4 PUSH16 0xFC2071DBE7AEC9482D52C73CC01BE16F 0x1F SMOD DUP1 0xBA 0xE8 SWAP10 PUSH20 0xCD1574EDF064736F6C6343000811003300000000 ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
									".code": [
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:7937:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xE9 DUP6 CALLER 0xB1 PUSH22 0x921EE89AEFEBC29F71A883AE001B45B140700DF4508A 0xD1 PUSH10 0x429664736F6C63430008 GT STOP CALLER ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6512:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xE9 DUP6 CALLER 0xB1 PUSH22 0x921EE89AEFEBC29F71A883AE001B45B140700DF4508A 0xD1 PUSH10 0x429664736F6C63430008 GT STOP CALLER ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1486
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							965
						],
						"ReentrancyGuard": [
							887
						],
						"SafeERC20": [
							1189
						],
						"SafeMath": [
							1798
						],
						"StakingRewards": [
							847
						]
					},
					"id": 848,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 1799,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 1190,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 888,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 848,
							"sourceUnit": 966,
							"src": "295:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Adminable",
										"nameLocations": [
											"398:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "398:9:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "398:9:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"410:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 887,
										"src": "410:15:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "410:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 847,
							"linearizedBaseContracts": [
								847,
								887,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "380:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "SafeMath",
										"nameLocations": [
											"438:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1798,
										"src": "438:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "432:27:1",
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 192,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "481:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "467:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$965",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "IERC20",
											"nameLocations": [
												"467:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 965,
											"src": "467:6:1"
										},
										"referencedDeclaration": 965,
										"src": "467:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$965",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 196,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "535:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "500:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 203,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "566:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "551:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "343030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "581:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_400_by_1",
												"typeString": "int_const 400"
											},
											"value": "400"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "587:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "593:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "587:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "581:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 205,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "617:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "602:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 208,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "648:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "633:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "633:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "663:9:1",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60_by_1",
											"typeString": "int_const 60"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 211,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "694:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "679:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "679:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "718:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 214,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "741:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "726:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "726:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "767:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 216,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "793:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "778:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "778:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 218,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "829:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "814:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "814:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 222,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "893:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "858:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "866:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "858:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "877:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 226,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "957:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "922:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 225,
										"keyType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "930:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "922:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "941:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "1000:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "984:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "984:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1055:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 847,
									"src": "1019:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1027:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1019:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1038:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1116:554:1",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1135:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1127:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1127:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"baseExpression": {
														"id": 238,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1142:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 240,
													"indexExpression": {
														"id": 239,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1161:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1142:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1127:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 242,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1183:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 243,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1191:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1183:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "1180:65:1",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "1202:43:1",
													"statements": [
														{
															"expression": {
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 245,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1217:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 246,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1224:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1217:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "1217:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1263:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1255:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1255:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1293:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 255,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1299:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1305:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1299:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "1270:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1270:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1255:60:1"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1326:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 261,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "1364:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 260,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "1349:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1349:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1326:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1326:43:1"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1380:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 266,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "1397:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1397:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1380:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1380:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1438:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1457:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1449:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1449:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1449:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1438:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "1434:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "1461:190:1",
													"statements": [
														{
															"expression": {
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 276,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1476:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"id": 277,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1484:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1476:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 280,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1502:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 279,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 581,
																		"src": "1495:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1476:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "1476:34:1"
														},
														{
															"expression": {
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 284,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "1525:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 286,
																	"indexExpression": {
																		"id": 285,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1525:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 287,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1559:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1525:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "1525:54:1"
														},
														{
															"expression": {
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 290,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "1594:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 292,
																	"indexExpression": {
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1613:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1594:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 293,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1624:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1630:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1624:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1594:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "1594:45:1"
														}
													]
												}
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "1661:1:1"
											}
										]
									},
									"id": 301,
									"name": "updateReward",
									"nameLocation": "1086:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1107:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1099:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:17:1"
									},
									"src": "1077:593:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "1731:35:1",
										"statements": [
											{
												"expression": {
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 308,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1742:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 309,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1754:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1742:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "1742:16:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 313,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "onlyAdmin",
												"nameLocations": [
													"1721:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "1721:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1721:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1687:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1708:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1700:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1699:14:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1731:0:1"
									},
									"scope": 847,
									"src": "1678:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "1829:38:1",
										"statements": [
											{
												"expression": {
													"id": 318,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "1847:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 317,
												"id": 319,
												"nodeType": "Return",
												"src": "1840:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "1783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1794:2:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "1820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:9:1"
									},
									"scope": 847,
									"src": "1774:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "1928:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 326,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "1946:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1952:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "1946:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 325,
												"id": 328,
												"nodeType": "Return",
												"src": "1939:22:1"
											}
										]
									},
									"functionSelector": "9a5b17b0",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curTime",
									"nameLocation": "1884:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1891:2:1"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1919:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1919:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1918:9:1"
									},
									"scope": 847,
									"src": "1875:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "2044:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 337,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2062:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 339,
													"indexExpression": {
														"id": 338,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2072:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2062:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 340,
												"nodeType": "Return",
												"src": "2055:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "1986:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2003:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "1995:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:17:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "2035:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2034:9:1"
									},
									"scope": 847,
									"src": "1977:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2154:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 348,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2186:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2192:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2186:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 347,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "2172:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2172:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 346,
												"id": 351,
												"nodeType": "Return",
												"src": "2165:37:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "2105:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2121:2:1"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2145:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:9:1"
									},
									"scope": 847,
									"src": "2096:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "2285:399:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 360,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2299:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2312:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2299:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 366,
												"nodeType": "IfStatement",
												"src": "2296:62:1",
												"trueBody": {
													"id": 365,
													"nodeType": "Block",
													"src": "2315:43:1",
													"statements": [
														{
															"expression": {
																"id": 363,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2337:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 359,
															"id": 364,
															"nodeType": "Return",
															"src": "2330:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2376:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "2368:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 377,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 369,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "2385:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 370,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2392:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2385:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 372,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2384:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 373,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2405:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2384:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 375,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2420:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2384:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2368:53:1"
											},
											{
												"assignments": [
													379
												],
												"declarations": [
													{
														"constant": false,
														"id": 379,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2440:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 410,
														"src": "2432:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2432:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"id": 380,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2448:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2432:28:1"
											},
											{
												"body": {
													"id": 402,
													"nodeType": "Block",
													"src": "2506:98:1",
													"statements": [
														{
															"expression": {
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "2521:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 393,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2529:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 394,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 379,
																				"src": "2537:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 395,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "2545:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2537:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 397,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2569:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2537:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2529:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2521:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 401,
															"nodeType": "ExpressionStatement",
															"src": "2521:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 386,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "2490:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 387,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2494:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2490:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 403,
												"initializationExpression": {
													"assignments": [
														383
													],
													"declarations": [
														{
															"constant": false,
															"id": 383,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2483:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 403,
															"src": "2475:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 382,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2475:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 385,
													"initialValue": {
														"hexValue": "30",
														"id": 384,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2475:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2501:3:1",
														"subExpression": {
															"id": 389,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "2503:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 391,
													"nodeType": "ExpressionStatement",
													"src": "2501:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2471:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 404,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "2621:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 405,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "2629:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2621:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 407,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "2653:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2621:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 359,
												"id": 409,
												"nodeType": "Return",
												"src": "2614:62:1"
											}
										]
									},
									"functionSelector": "5cfa91f4",
									"id": 411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPool",
									"nameLocation": "2227:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2249:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2241:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2240:14:1"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 411,
												"src": "2276:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2275:9:1"
									},
									"scope": 847,
									"src": "2218:466:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 464,
										"nodeType": "Block",
										"src": "2759:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2773:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2773:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 424,
												"nodeType": "IfStatement",
												"src": "2770:62:1",
												"trueBody": {
													"id": 423,
													"nodeType": "Block",
													"src": "2789:43:1",
													"statements": [
														{
															"expression": {
																"id": 421,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "2811:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 417,
															"id": 422,
															"nodeType": "Return",
															"src": "2804:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2850:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2842:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2842:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 427,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 413,
																		"src": "2859:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 428,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2866:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2859:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 430,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2858:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 431,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2879:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2858:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2894:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2858:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2842:53:1"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2914:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 464,
														"src": "2906:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2906:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 439,
												"initialValue": {
													"id": 438,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2922:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2906:28:1"
											},
											{
												"body": {
													"id": 460,
													"nodeType": "Block",
													"src": "2980:98:1",
													"statements": [
														{
															"expression": {
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 450,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "2995:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 437,
																		"src": "3003:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 452,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "3011:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 453,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3019:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3011:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 455,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3043:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3011:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3003:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2995:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 459,
															"nodeType": "ExpressionStatement",
															"src": "2995:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 444,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "2964:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 445,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2968:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2964:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"initializationExpression": {
													"assignments": [
														441
													],
													"declarations": [
														{
															"constant": false,
															"id": 441,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2957:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 461,
															"src": "2949:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 440,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2949:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 443,
													"initialValue": {
														"hexValue": "30",
														"id": 442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2961:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2949:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2975:3:1",
														"subExpression": {
															"id": 447,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "2977:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 449,
													"nodeType": "ExpressionStatement",
													"src": "2975:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2945:133:1"
											},
											{
												"expression": {
													"id": 462,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "3095:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 463,
												"nodeType": "Return",
												"src": "3088:12:1"
											}
										]
									},
									"functionSelector": "4dbdc4eb",
									"id": 465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainPool",
									"nameLocation": "2701:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2714:14:1"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2750:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2750:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2749:9:1"
									},
									"scope": 847,
									"src": "2692:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "3174:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 471,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3207:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3213:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3207:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 470,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "3192:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3192:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 469,
												"id": 474,
												"nodeType": "Return",
												"src": "3185:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "3125:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3141:2:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 476,
												"src": "3165:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:9:1"
									},
									"scope": 847,
									"src": "3116:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 498,
										"nodeType": "Block",
										"src": "3308:153:1",
										"statements": [
											{
												"assignments": [
													484
												],
												"declarations": [
													{
														"constant": false,
														"id": 484,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "3327:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3319:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3319:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 488,
												"initialValue": {
													"arguments": [
														{
															"id": 486,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3357:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 485,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "3343:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3343:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3319:43:1"
											},
											{
												"assignments": [
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "3381:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 498,
														"src": "3373:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 489,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3373:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"arguments": [
														{
															"id": 493,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3412:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 491,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 484,
															"src": "3394:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3408:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1707,
														"src": "3394:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3373:52:1"
											},
											{
												"expression": {
													"id": 496,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "3443:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 482,
												"id": 497,
												"nodeType": "Return",
												"src": "3436:17:1"
											}
										]
									},
									"id": 499,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "3248:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3271:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3263:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:14:1"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 499,
												"src": "3299:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3299:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3298:9:1"
									},
									"scope": 847,
									"src": "3239:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3537:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 504,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3555:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3561:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3555:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 503,
												"id": 506,
												"nodeType": "Return",
												"src": "3548:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "3480:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3504:2:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "3528:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 501,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:9:1"
									},
									"scope": 847,
									"src": "3471:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 540,
										"nodeType": "Block",
										"src": "3660:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 515,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "3675:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3691:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3675:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "3671:77:1",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "3694:54:1",
													"statements": [
														{
															"expression": {
																"id": 518,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "3716:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 514,
															"id": 519,
															"nodeType": "Return",
															"src": "3709:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 536,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "3898:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 533,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3888:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 530,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "3872:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 527,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "3852:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 524,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 508,
																								"src": "3821:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 525,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3821:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 526,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3848:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1677,
																						"src": "3821:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 528,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3821:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3868:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1692,
																				"src": "3821:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 531,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3821:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3884:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1692,
																		"src": "3821:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3821:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3894:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1707,
																"src": "3821:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3821:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 522,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "3778:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 523,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3799:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "3778:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3778:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 514,
												"id": 539,
												"nodeType": "Return",
												"src": "3758:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "3595:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "3618:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3610:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:20:1"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "3651:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 512,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3651:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3650:9:1"
									},
									"scope": 847,
									"src": "3586:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4005:233:1",
										"statements": [
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "4024:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 580,
														"src": "4016:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4016:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 551,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4054:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 553,
															"indexExpression": {
																"id": 552,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4073:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4054:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 554,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4083:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4089:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4083:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 550,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "4031:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4031:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4016:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 575,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "4213:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 577,
															"indexExpression": {
																"id": 576,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "4221:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4213:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4203:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 566,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 222,
																						"src": "4165:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 568,
																					"indexExpression": {
																						"id": 567,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 543,
																						"src": "4188:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4165:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 563,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 549,
																							"src": "4155:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 562,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 541,
																						"src": "4140:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 564,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4140:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 565,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4161:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1677,
																				"src": "4140:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4140:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 558,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "4117:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 560,
																			"indexExpression": {
																				"id": 559,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 543,
																				"src": "4127:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4117:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4136:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1692,
																		"src": "4117:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4117:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4199:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1707,
																"src": "4117:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4117:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4209:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1662,
														"src": "4117:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4117:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 547,
												"id": 579,
												"nodeType": "Return",
												"src": "4110:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3951:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3966:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3958:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3957:17:1"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "3996:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:9:1"
									},
									"scope": 847,
									"src": "3942:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "4379:1285:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "4403:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4416:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4403:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 593,
																"name": "leftTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 583,
																"src": "4421:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 594,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "4433:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4421:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "4403:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 597,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4446:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4458:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4446:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4403:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 604,
												"nodeType": "IfStatement",
												"src": "4400:96:1",
												"trueBody": {
													"id": 603,
													"nodeType": "Block",
													"src": "4461:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 601,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4483:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 589,
															"id": 602,
															"nodeType": "Return",
															"src": "4476:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 605,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 583,
														"src": "4511:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 606,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4511:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 613,
												"nodeType": "IfStatement",
												"src": "4508:72:1",
												"trueBody": {
													"id": 612,
													"nodeType": "Block",
													"src": "4533:47:1",
													"statements": [
														{
															"expression": {
																"id": 610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 608,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "4548:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 609,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4559:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4548:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 611,
															"nodeType": "ExpressionStatement",
															"src": "4548:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "4600:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "4592:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 614,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4592:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 627,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 616,
																	"name": "rateInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "4616:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 617,
																					"name": "leftTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 583,
																					"src": "4632:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 618,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "4643:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4632:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 620,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4631:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 621,
																		"name": "rateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "4656:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4631:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4616:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 624,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4615:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 625,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "4672:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4615:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4592:92:1"
											},
											{
												"assignments": [
													629
												],
												"declarations": [
													{
														"constant": false,
														"id": 629,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "4703:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "4695:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 628,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4695:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 637,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 631,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "4730:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 630,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4716:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4716:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 633,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4742:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4716:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 635,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "4757:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4716:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4695:74:1"
											},
											{
												"assignments": [
													639
												],
												"declarations": [
													{
														"constant": false,
														"id": 639,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "4790:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "4782:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 638,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4782:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 646,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 640,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4807:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 641,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "4819:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4807:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 643,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4806:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 644,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "4832:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4806:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4782:62:1"
											},
											{
												"assignments": [
													648
												],
												"declarations": [
													{
														"constant": false,
														"id": 648,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "4863:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "4855:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 647,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4855:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 656,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 650,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "4891:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 649,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 411,
																"src": "4877:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4877:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 652,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "4904:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4877:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 654,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "4920:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4877:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4855:77:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 657,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "4948:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 658,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "4959:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4948:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 660,
														"name": "rightTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "4974:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4948:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 667,
												"nodeType": "IfStatement",
												"src": "4945:98:1",
												"trueBody": {
													"id": 666,
													"nodeType": "Block",
													"src": "4985:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 663,
																		"name": "leftTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 583,
																		"src": "5022:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 662,
																	"name": "_getRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 499,
																	"src": "5007:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5007:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 589,
															"id": 665,
															"nodeType": "Return",
															"src": "5000:31:1"
														}
													]
												}
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "5063:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5055:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5055:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 677,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5077:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 671,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 639,
																"src": "5089:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5077:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 673,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5105:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5077:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 675,
														"name": "leftInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "5116:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5077:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5055:73:1"
											},
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "5147:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5139:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 678,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5139:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 681,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5175:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 680,
														"name": "getRemainPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5161:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5161:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5139:45:1"
											},
											{
												"assignments": [
													685
												],
												"declarations": [
													{
														"constant": false,
														"id": 685,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "5204:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5196:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 684,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5196:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 687,
												"initialValue": {
													"hexValue": "30",
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5221:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5196:26:1"
											},
											{
												"assignments": [
													689
												],
												"declarations": [
													{
														"constant": false,
														"id": 689,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "5241:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5233:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 688,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5233:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 691,
												"initialValue": {
													"hexValue": "30",
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5254:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5233:22:1"
											},
											{
												"assignments": [
													693
												],
												"declarations": [
													{
														"constant": false,
														"id": 693,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "5274:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5266:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 692,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5266:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 695,
												"initialValue": {
													"id": 694,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 679,
													"src": "5282:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5266:27:1"
											},
											{
												"assignments": [
													697
												],
												"declarations": [
													{
														"constant": false,
														"id": 697,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "5312:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 744,
														"src": "5304:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 696,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5304:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 701,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 698,
														"name": "midInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "5320:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 699,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5334:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5320:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5304:42:1"
											},
											{
												"body": {
													"id": 730,
													"nodeType": "Block",
													"src": "5392:179:1",
													"statements": [
														{
															"expression": {
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 712,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "5407:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 717,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 693,
																			"src": "5420:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 714,
																			"name": "rateIntervalNumerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "5428:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5420:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 716,
																		"name": "rateIntervalDenominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "5452:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5420:55:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5407:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 719,
															"nodeType": "ExpressionStatement",
															"src": "5407:68:1"
														},
														{
															"expression": {
																"id": 724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 720,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "5490:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 721,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "5498:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 722,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 689,
																		"src": "5506:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5490:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 725,
															"nodeType": "ExpressionStatement",
															"src": "5490:26:1"
														},
														{
															"expression": {
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 726,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "5531:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 727,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 689,
																	"src": "5549:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5531:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 729,
															"nodeType": "ExpressionStatement",
															"src": "5531:28:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 706,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "5376:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 707,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "5380:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5376:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"initializationExpression": {
													"assignments": [
														703
													],
													"declarations": [
														{
															"constant": false,
															"id": 703,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5369:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 731,
															"src": "5361:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 702,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5361:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 705,
													"initialValue": {
														"hexValue": "30",
														"id": 704,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5373:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5361:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "5387:3:1",
														"subExpression": {
															"id": 709,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 703,
															"src": "5389:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 711,
													"nodeType": "ExpressionStatement",
													"src": "5387:3:1"
												},
												"nodeType": "ForStatement",
												"src": "5357:214:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 732,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 685,
																		"src": "5589:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 733,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 629,
																		"src": "5606:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5589:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 735,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 648,
																	"src": "5619:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5589:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 737,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5588:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "5635:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 739,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 583,
																	"src": "5647:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5635:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 741,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5634:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5588:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 589,
												"id": 743,
												"nodeType": "Return",
												"src": "5581:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "4290:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "4321:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4313:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "4339:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4331:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:37:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "4371:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4371:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4370:9:1"
									},
									"scope": 847,
									"src": "4281:1383:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "5776:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 761,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5795:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5804:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5795:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 764,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5807:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 760,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5787:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5787:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 766,
												"nodeType": "ExpressionStatement",
												"src": "5787:37:1"
											},
											{
												"expression": {
													"id": 772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 767,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "5835:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 770,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5867:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 768,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "5850:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5863:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "5850:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 771,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5850:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5835:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 773,
												"nodeType": "ExpressionStatement",
												"src": "5835:39:1"
											},
											{
												"expression": {
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 774,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "5885:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 776,
														"indexExpression": {
															"id": 775,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5895:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5885:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 781,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "5923:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 777,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "5903:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 779,
																"indexExpression": {
																	"id": 778,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 747,
																	"src": "5913:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5903:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5919:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "5903:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5903:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5885:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "5885:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 786,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 747,
															"src": "5953:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 787,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 749,
															"src": "5959:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 785,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "5946:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 789,
												"nodeType": "EmitStatement",
												"src": "5941:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 752,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 751,
												"name": "nonReentrant",
												"nameLocations": [
													"5728:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 886,
												"src": "5728:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:12:1"
										},
										{
											"id": 754,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 753,
												"name": "onlyAdmin",
												"nameLocations": [
													"5741:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "5741:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5741:9:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 756,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5764:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5768:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5764:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 758,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 755,
												"name": "updateReward",
												"nameLocations": [
													"5751:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "5751:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5751:24:1"
										}
									],
									"name": "stake",
									"nameLocation": "5683:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5697:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5689:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5711:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "5703:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5688:30:1"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5776:0:1"
									},
									"scope": 847,
									"src": "5674:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "6052:237:1",
										"statements": [
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6071:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 833,
														"src": "6063:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6063:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"baseExpression": {
														"id": 802,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "6080:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 805,
													"indexExpression": {
														"expression": {
															"id": 803,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6088:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6092:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6088:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6080:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6063:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "6114:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6123:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6114:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 832,
												"nodeType": "IfStatement",
												"src": "6110:172:1",
												"trueBody": {
													"id": 831,
													"nodeType": "Block",
													"src": "6126:156:1",
													"statements": [
														{
															"expression": {
																"id": 815,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 810,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "6141:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 813,
																	"indexExpression": {
																		"expression": {
																			"id": 811,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6149:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6153:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6149:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6141:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6163:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6141:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 816,
															"nodeType": "ExpressionStatement",
															"src": "6141:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 820,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6201:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6205:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6201:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 822,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "6213:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 817,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "6179:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$965",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6192:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 914,
																	"src": "6179:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6179:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 824,
															"nodeType": "ExpressionStatement",
															"src": "6179:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 826,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6251:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 827,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6255:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6251:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 828,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 801,
																		"src": "6263:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 825,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "6240:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6240:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 830,
															"nodeType": "EmitStatement",
															"src": "6235:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 794,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 793,
												"name": "nonReentrant",
												"nameLocations": [
													"6014:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 886,
												"src": "6014:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6014:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 796,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6040:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6044:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6040:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 798,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 795,
												"name": "updateReward",
												"nameLocations": [
													"6027:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "6027:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6027:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "5995:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6004:2:1"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6052:0:1"
									},
									"scope": 847,
									"src": "5986:303:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 840,
									"name": "Staked",
									"nameLocation": "6311:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6318:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6348:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "6340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6340:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6317:38:1"
									},
									"src": "6305:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 846,
									"name": "RewardPaid",
									"nameLocation": "6368:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6395:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "6379:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6379:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "6409:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "6401:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6378:38:1"
									},
									"src": "6362:55:1"
								}
							],
							"scope": 848,
							"src": "371:6051:1",
							"usedErrors": []
						}
					],
					"src": "0:6422:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							887
						]
					},
					"id": 888,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 849,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 850,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 887,
							"linearizedBaseContracts": [
								887
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 853,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 851,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 856,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 858,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 887,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 865,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 861,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 862,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 866,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 887,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 885,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 870,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 871,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 876,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 877,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 879,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 880,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 881,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 858,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 882,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 884,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 886,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 888,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2623:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							965
						]
					},
					"id": 966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 890,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 965,
							"linearizedBaseContracts": [
								965
							],
							"name": "IERC20",
							"nameLocation": "205:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "339:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:3"
									},
									"scope": 965,
									"src": "293:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:3"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:3"
									},
									"scope": 965,
									"src": "436:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "512:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 914,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "742:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "759:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "751:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:35:3"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 914,
												"src": "804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 911,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:3"
									},
									"scope": 965,
									"src": "733:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "818:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 924,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1103:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1121:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1113:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1128:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:32:3"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "1168:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:9:3"
									},
									"scope": 965,
									"src": "1094:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 925,
										"nodeType": "StructuredDocumentation",
										"src": "1185:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 934,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1855:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1871:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1880:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:3"
									},
									"returnParameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "1914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 931,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:6:3"
									},
									"scope": 965,
									"src": "1846:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 935,
										"nodeType": "StructuredDocumentation",
										"src": "1928:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2247:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2278:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2270:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2295:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2323:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:85:3"
									},
									"returnParameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2363:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 943,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:3"
									},
									"scope": 965,
									"src": "2238:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "2377:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 955,
									"name": "Transfer",
									"nameLocation": "2552:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "2603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:3"
									},
									"src": "2546:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "2626:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 964,
									"name": "Approval",
									"nameLocation": "2789:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 958,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2814:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2798:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2837:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2821:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2854:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2846:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:63:3"
									},
									"src": "2783:78:3"
								}
							],
							"scope": 966,
							"src": "195:2669:3",
							"usedErrors": []
						}
					],
					"src": "94:2772:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1486
						],
						"IERC20": [
							965
						],
						"SafeERC20": [
							1189
						]
					},
					"id": 1190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 967,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 968,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 966,
							"src": "130:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 969,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1190,
							"sourceUnit": 1487,
							"src": "155:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 970,
								"nodeType": "StructuredDocumentation",
								"src": "195:465:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1189,
							"linearizedBaseContracts": [
								1189
							],
							"name": "SafeERC20",
							"nameLocation": "670:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 973,
									"libraryName": {
										"id": 971,
										"name": "Address",
										"nameLocations": [
											"693:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "693:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "687:26:4",
									"typeName": {
										"id": 972,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "827:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 984,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 976,
															"src": "858:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 987,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "888:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$965",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 988,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "894:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 914,
																		"src": "888:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "903:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "888:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 990,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "913:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 985,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "865:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "869:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "865:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 983,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "838:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$965_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "838:86:4"
											}
										]
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "730:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "760:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "753:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 975,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 974,
														"name": "IERC20",
														"nameLocations": [
															"753:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "753:6:4"
													},
													"referencedDeclaration": 965,
													"src": "753:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "784:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "776:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:75:4"
									},
									"returnParameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:4"
									},
									"scope": 1189,
									"src": "721:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "1073:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1009,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 999,
															"src": "1104:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1012,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 999,
																			"src": "1134:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$965",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1013,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1140:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 946,
																		"src": "1134:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1014,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1153:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1134:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1015,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1001,
																	"src": "1163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1016,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1003,
																	"src": "1169:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1017,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "1173:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1010,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1111:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1115:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1111:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1008,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$965_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "1084:96:4"
											}
										]
									},
									"id": 1022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "949:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "983:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "976:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 998,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 997,
														"name": "IERC20",
														"nameLocations": [
															"976:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "976:6:4"
													},
													"referencedDeclaration": 965,
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1007:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "999:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1003,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1030:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "1022:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1002,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1022,
												"src": "1043:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:98:4"
									},
									"returnParameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:4"
									},
									"scope": 1189,
									"src": "940:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "1567:506:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1034,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1030,
																			"src": "1821:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1035,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1821:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1037,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1820:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1047,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1042,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1861:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1189",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1189",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1041,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1853:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1040,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1853:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1043,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1853:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1044,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1028,
																					"src": "1868:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1038,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1026,
																					"src": "1837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$965",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1843:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 924,
																				"src": "1837:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1837:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1046,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1880:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1837:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1048,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1836:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:166:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "1798:166:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1054,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "1995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1057,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1026,
																			"src": "2025:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$965",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1058,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2031:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 934,
																		"src": "2025:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2039:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2025:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1060,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1028,
																	"src": "2049:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1061,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1030,
																	"src": "2058:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1055,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2002:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2006:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2002:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1053,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "1975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$965_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1064,
												"nodeType": "ExpressionStatement",
												"src": "1975:90:4"
											}
										]
									},
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "1196:255:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1466:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1488:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1025,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1024,
														"name": "IERC20",
														"nameLocations": [
															"1488:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "1488:6:4"
													},
													"referencedDeclaration": 965,
													"src": "1488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "1537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:80:4"
									},
									"returnParameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:4"
									},
									"scope": 1189,
									"src": "1457:616:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "2201:197:4",
										"statements": [
											{
												"assignments": [
													1077
												],
												"declarations": [
													{
														"constant": false,
														"id": 1077,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2220:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "2212:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1076,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2212:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1088,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1082,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2259:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1189",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1189",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1081,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1080,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1084,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1071,
																"src": "2266:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1078,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1069,
																"src": "2235:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$965",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2241:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 924,
															"src": "2235:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2235:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1086,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1073,
														"src": "2277:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "2313:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1093,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1069,
																			"src": "2343:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$965",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2349:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 934,
																		"src": "2343:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1095,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2357:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2343:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1096,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1071,
																	"src": "2367:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1097,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "2376:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1091,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2320:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2324:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2320:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$965",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1089,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1188,
														"src": "2293:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$965_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2293:97:4"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2129:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2122:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1068,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1067,
														"name": "IERC20",
														"nameLocations": [
															"2122:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "2122:6:4"
													},
													"referencedDeclaration": 965,
													"src": "2122:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1071,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:80:4"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:4"
									},
									"scope": 1189,
									"src": "2081:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "2526:377:4",
										"statements": [
											{
												"id": 1148,
												"nodeType": "UncheckedBlock",
												"src": "2537:359:4",
												"statements": [
													{
														"assignments": [
															1113
														],
														"declarations": [
															{
																"constant": false,
																"id": 1113,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2570:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1148,
																"src": "2562:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1112,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1122,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1118,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2609:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1189",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1189",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2601:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1116,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2601:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2601:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1120,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1107,
																	"src": "2616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1114,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "2585:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$965",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2591:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 924,
																"src": "2585:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2562:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1124,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "2647:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1125,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1109,
																		"src": "2663:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2647:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2670:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1123,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2639:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1129,
														"nodeType": "ExpressionStatement",
														"src": "2639:75:4"
													},
													{
														"assignments": [
															1131
														],
														"declarations": [
															{
																"constant": false,
																"id": 1131,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2737:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1148,
																"src": "2729:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1130,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1135,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1132,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1113,
																"src": "2752:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1133,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "2767:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2729:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1137,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1105,
																	"src": "2807:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$965",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1140,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1105,
																					"src": "2837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$965",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1141,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2843:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 934,
																				"src": "2837:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1142,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2851:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2837:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1143,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "2861:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1144,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1131,
																			"src": "2870:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1138,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2814:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2818:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2814:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2814:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$965",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1136,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "2787:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$965_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1147,
														"nodeType": "ExpressionStatement",
														"src": "2787:97:4"
													}
												]
											}
										]
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2415:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2447:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1103,
														"name": "IERC20",
														"nameLocations": [
															"2447:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "2447:6:4"
													},
													"referencedDeclaration": 965,
													"src": "2447:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2478:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2470:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2504:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "2496:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:80:4"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:4"
									},
									"scope": 1189,
									"src": "2406:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "3364:646:4",
										"statements": [
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3731:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1187,
														"src": "3718:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1159,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3718:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1169,
												"initialValue": {
													"arguments": [
														{
															"id": 1166,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "3772:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3778:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1163,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "3752:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$965",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$965",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3744:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1161,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3744:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3744:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3759:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1280,
														"src": "3744:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3718:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1170,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "3828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3839:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3828:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3828:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1186,
												"nodeType": "IfStatement",
												"src": "3824:179:4",
												"trueBody": {
													"id": 1185,
													"nodeType": "Block",
													"src": "3851:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1177,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1160,
																				"src": "3925:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3938:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1178,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3938:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1180,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3937:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1175,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3914:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1176,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3918:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3914:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3914:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1182,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3946:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1174,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1184,
															"nodeType": "ExpressionStatement",
															"src": "3906:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "2911:377:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3303:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3330:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3323:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$965",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1153,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1152,
														"name": "IERC20",
														"nameLocations": [
															"3323:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 965,
														"src": "3323:6:4"
													},
													"referencedDeclaration": 965,
													"src": "3323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$965",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3337:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:33:4"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:0:4"
									},
									"scope": 1189,
									"src": "3294:716:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1190,
							"src": "662:3351:4",
							"usedErrors": []
						}
					],
					"src": "103:3912:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1486
						]
					},
					"id": 1487,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1192,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486
							],
							"name": "Address",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "863:321:5",
										"statements": [
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1208,
														"src": "1065:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1195,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1201,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:5",
														"valueSize": 1
													}
												],
												"id": 1203,
												"nodeType": "InlineAssembly",
												"src": "1088:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1204,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "1168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1207,
												"nodeType": "Return",
												"src": "1161:15:5"
											}
										]
									},
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "817:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:5"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "857:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:5"
									},
									"scope": 1486,
									"src": "797:387:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1242,
										"nodeType": "Block",
										"src": "2190:246:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1220,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1486",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1486",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1218,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2223:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1223,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "2234:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1217,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:5"
											},
											{
												"assignments": [
													1229,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1229,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1242,
														"src": "2288:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1236,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1230,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2306:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2316:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1232,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1214,
																"src": "2328:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1238,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1229,
															"src": "2358:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1237,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1241,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:5"
											}
										]
									},
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1243,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2138:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2165:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:5"
									},
									"returnParameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:5"
									},
									"scope": 1486,
									"src": "2119:317:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "3287:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1254,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "3318:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1255,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1248,
															"src": "3326:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1253,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1260,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "3305:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1252,
												"id": 1258,
												"nodeType": "Return",
												"src": "3298:67:5"
											}
										]
									},
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3220:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1247,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:5"
									},
									"returnParameters": {
										"id": 1252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "3273:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1250,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:5"
									},
									"scope": 1486,
									"src": "3198:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "3754:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1273,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "3794:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1265,
															"src": "3802:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1276,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "3811:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1272,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1300,
															1350
														],
														"referencedDeclaration": 1350,
														"src": "3772:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1271,
												"id": 1278,
												"nodeType": "Return",
												"src": "3765:59:5"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3635:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3660:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1264,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3688:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:5"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "3740:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1269,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:5"
									},
									"scope": 1486,
									"src": "3603:229:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "4354:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1293,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "4394:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "4402:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1295,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1287,
															"src": "4408:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1292,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1300,
															1350
														],
														"referencedDeclaration": 1350,
														"src": "4372:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1291,
												"id": 1298,
												"nodeType": "Return",
												"src": "4365:94:5"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "4248:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "4273:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "4301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:5"
									},
									"returnParameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "4340:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1289,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:5"
									},
									"scope": 1486,
									"src": "4207:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "4907:326:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1317,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1486",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1486",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1315,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4940:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1320,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "4951:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1324,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1327,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1303,
																	"src": "5029:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1326,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "5018:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:5"
											},
											{
												"assignments": [
													1333,
													1335
												],
												"declarations": [
													{
														"constant": false,
														"id": 1333,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "5084:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1332,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1335,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1349,
														"src": "5098:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1334,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1342,
												"initialValue": {
													"arguments": [
														{
															"id": 1340,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "5151:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1336,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1303,
																"src": "5125:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1338,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1307,
																"src": "5144:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1344,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "5191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1345,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "5200:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1346,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1309,
															"src": "5212:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1343,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "5174:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1313,
												"id": 1348,
												"nodeType": "Return",
												"src": "5167:58:5"
											}
										]
									},
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1303,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4764:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4789:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4817:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4841:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1308,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:5"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "4893:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:5"
									},
									"scope": 1486,
									"src": "4723:510:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "5518:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1361,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "5555:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1362,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "5563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1360,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1367,
															1402
														],
														"referencedDeclaration": 1402,
														"src": "5536:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1365,
												"nodeType": "Return",
												"src": "5529:80:5"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5446:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1352,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5462:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1354,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:5"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1367,
												"src": "5504:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:5"
									},
									"scope": 1486,
									"src": "5418:199:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "5971:233:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1381,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1370,
																	"src": "6001:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1380,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "5990:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:5"
											},
											{
												"assignments": [
													1387,
													1389
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "6063:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1386,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1389,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1401,
														"src": "6077:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1388,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1394,
												"initialValue": {
													"arguments": [
														{
															"id": 1392,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "6122:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1370,
															"src": "6104:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1396,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1387,
															"src": "6162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1397,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1389,
															"src": "6171:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1398,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "6183:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1395,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "6145:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1400,
												"nodeType": "Return",
												"src": "6138:58:5"
											}
										]
									},
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5847:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5872:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1371,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5900:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1373,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:5"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "5957:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1376,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:5"
									},
									"scope": 1486,
									"src": "5809:395:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1418,
										"nodeType": "Block",
										"src": "6488:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1413,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "6527:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1414,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "6535:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1412,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1419,
															1454
														],
														"referencedDeclaration": 1454,
														"src": "6506:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1411,
												"id": 1417,
												"nodeType": "Return",
												"src": "6499:84:5"
											}
										]
									},
									"documentation": {
										"id": 1403,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1419,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1407,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6437:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1406,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:5"
									},
									"returnParameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "6474:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1409,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:5"
									},
									"scope": 1486,
									"src": "6391:200:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1453,
										"nodeType": "Block",
										"src": "6944:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1433,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1422,
																	"src": "6974:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1432,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "6963:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1431,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1437,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:5"
											},
											{
												"assignments": [
													1439,
													1441
												],
												"declarations": [
													{
														"constant": false,
														"id": 1439,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "7038:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1438,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1441,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1453,
														"src": "7052:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1440,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1446,
												"initialValue": {
													"arguments": [
														{
															"id": 1444,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "7099:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1442,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1422,
															"src": "7079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7086:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1448,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "7139:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1449,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "7148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1450,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "7160:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1447,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "7122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1430,
												"id": 1452,
												"nodeType": "Return",
												"src": "7115:58:5"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6850:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1423,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:5"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "6930:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1428,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:5"
									},
									"scope": 1486,
									"src": "6785:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "7573:548:5",
										"statements": [
											{
												"condition": {
													"id": 1466,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1457,
													"src": "7588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1482,
													"nodeType": "Block",
													"src": "7647:467:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1470,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1459,
																		"src": "7733:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7744:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1480,
																"nodeType": "Block",
																"src": "8048:55:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1477,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1461,
																					"src": "8074:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1476,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1478,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1479,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:5"
																	}
																]
															},
															"id": 1481,
															"nodeType": "IfStatement",
															"src": "7729:374:5",
															"trueBody": {
																"id": 1475,
																"nodeType": "Block",
																"src": "7756:286:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1459,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1459,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1474,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:5"
																	}
																]
															}
														}
													]
												},
												"id": 1483,
												"nodeType": "IfStatement",
												"src": "7584:530:5",
												"trueBody": {
													"id": 1469,
													"nodeType": "Block",
													"src": "7597:44:5",
													"statements": [
														{
															"expression": {
																"id": 1467,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1459,
																"src": "7619:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1465,
															"id": 1468,
															"nodeType": "Return",
															"src": "7612:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7445:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7468:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7502:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:5"
									},
									"returnParameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "7559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:5"
									},
									"scope": 1486,
									"src": "7409:712:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1487,
							"src": "187:7937:5",
							"usedErrors": []
						}
					],
					"src": "89:8037:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1798
						]
					},
					"id": 1799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1488,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1489,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1798,
							"linearizedBaseContracts": [
								1798
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "723:146:6",
										"statements": [
											{
												"id": 1519,
												"nodeType": "UncheckedBlock",
												"src": "734:128:6",
												"statements": [
													{
														"assignments": [
															1502
														],
														"declarations": [
															{
																"constant": false,
																"id": 1502,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1519,
																"src": "759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1501,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1506,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1503,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1504,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1494,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1507,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1502,
																"src": "795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1508,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1492,
																"src": "799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1514,
														"nodeType": "IfStatement",
														"src": "791:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1512,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1500,
															"id": 1513,
															"nodeType": "Return",
															"src": "802:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1515,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1516,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "848:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1517,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1500,
														"id": 1518,
														"nodeType": "Return",
														"src": "834:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1490,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1492,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "663:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "674:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:6"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "708:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1496,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:6"
									},
									"scope": 1798,
									"src": "647:222:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1548,
										"nodeType": "Block",
										"src": "1098:118:6",
										"statements": [
											{
												"id": 1547,
												"nodeType": "UncheckedBlock",
												"src": "1109:100:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1533,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1526,
																"src": "1138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1534,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "1142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1540,
														"nodeType": "IfStatement",
														"src": "1134:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1536,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1153:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1538,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1152:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1532,
															"id": 1539,
															"nodeType": "Return",
															"src": "1145:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1541,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1544,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1542,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "1191:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1543,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "1195:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1191:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1545,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1184:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1532,
														"id": 1546,
														"nodeType": "Return",
														"src": "1177:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "877:139:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1549,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1031:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1038:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1049:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:6"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1083:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1528,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1549,
												"src": "1089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:15:6"
									},
									"scope": 1798,
									"src": "1022:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1590,
										"nodeType": "Block",
										"src": "1447:427:6",
										"statements": [
											{
												"id": 1589,
												"nodeType": "UncheckedBlock",
												"src": "1458:409:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1561,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1720:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1725:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1720:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1568,
														"nodeType": "IfStatement",
														"src": "1716:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1566,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1735:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1560,
															"id": 1567,
															"nodeType": "Return",
															"src": "1728:16:6"
														}
													},
													{
														"assignments": [
															1570
														],
														"declarations": [
															{
																"constant": false,
																"id": 1570,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1589,
																"src": "1759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1569,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1574,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1571,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "1771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1572,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "1795:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1576,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1552,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1578,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1554,
																"src": "1804:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1795:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1584,
														"nodeType": "IfStatement",
														"src": "1791:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1815:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1581,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1822:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1582,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1814:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1560,
															"id": 1583,
															"nodeType": "Return",
															"src": "1807:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1586,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1570,
																	"src": "1853:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1587,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1560,
														"id": 1588,
														"nodeType": "Return",
														"src": "1839:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "1224:141:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1380:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1395:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1387:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:6"
									},
									"returnParameters": {
										"id": 1560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1432:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1591,
												"src": "1438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:15:6"
									},
									"scope": 1798,
									"src": "1371:503:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1618,
										"nodeType": "Block",
										"src": "2106:119:6",
										"statements": [
											{
												"id": 1617,
												"nodeType": "UncheckedBlock",
												"src": "2117:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1603,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "2146:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2146:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1610,
														"nodeType": "IfStatement",
														"src": "2142:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1602,
															"id": 1609,
															"nodeType": "Return",
															"src": "2154:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1612,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1594,
																		"src": "2200:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1613,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1596,
																		"src": "2204:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1615,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2193:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1602,
														"id": 1616,
														"nodeType": "Return",
														"src": "2186:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1592,
										"nodeType": "StructuredDocumentation",
										"src": "1882:142:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2039:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2054:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2046:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2065:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2057:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:22:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2091:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1619,
												"src": "2097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:15:6"
									},
									"scope": 1798,
									"src": "2030:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "2467:119:6",
										"statements": [
											{
												"id": 1645,
												"nodeType": "UncheckedBlock",
												"src": "2478:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1631,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "2507:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1638,
														"nodeType": "IfStatement",
														"src": "2503:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2530:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1636,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1630,
															"id": 1637,
															"nodeType": "Return",
															"src": "2515:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1640,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1622,
																		"src": "2561:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1641,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1624,
																		"src": "2565:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2561:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1643,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1630,
														"id": 1644,
														"nodeType": "Return",
														"src": "2547:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1620,
										"nodeType": "StructuredDocumentation",
										"src": "2233:152:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2400:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2415:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2407:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2426:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2418:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:22:6"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2452:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1626,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2452:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "2458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:15:6"
									},
									"scope": 1798,
									"src": "2391:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1661,
										"nodeType": "Block",
										"src": "2900:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1657,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "2918:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1658,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "2922:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1656,
												"id": 1660,
												"nodeType": "Return",
												"src": "2911:12:6"
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "2594:233:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2842:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2854:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2846:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2865:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2857:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:22:6"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1662,
												"src": "2891:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:9:6"
									},
									"scope": 1798,
									"src": "2833:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "3281:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1672,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1665,
														"src": "3299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1673,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "3303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1671,
												"id": 1675,
												"nodeType": "Return",
												"src": "3292:12:6"
											}
										]
									},
									"documentation": {
										"id": 1663,
										"nodeType": "StructuredDocumentation",
										"src": "2939:269:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3223:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3235:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3227:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3246:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3238:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:22:6"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "3272:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:9:6"
									},
									"scope": 1798,
									"src": "3214:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "3638:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1687,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "3656:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1688,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1682,
														"src": "3660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1686,
												"id": 1690,
												"nodeType": "Return",
												"src": "3649:12:6"
											}
										]
									},
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "3320:245:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3580:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3603:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3595:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:22:6"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "3629:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:9:6"
									},
									"scope": 1798,
									"src": "3571:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1706,
										"nodeType": "Block",
										"src": "4037:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1702,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1695,
														"src": "4055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1703,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1697,
														"src": "4059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1701,
												"id": 1705,
												"nodeType": "Return",
												"src": "4048:12:6"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "3677:287:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3979:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1697,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "3994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:22:6"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "4028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:9:6"
									},
									"scope": 1798,
									"src": "3970:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1721,
										"nodeType": "Block",
										"src": "4602:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1710,
														"src": "4620:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1718,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "4624:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1716,
												"id": 1720,
												"nodeType": "Return",
												"src": "4613:12:6"
											}
										]
									},
									"documentation": {
										"id": 1708,
										"nodeType": "StructuredDocumentation",
										"src": "4076:453:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4544:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4556:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4548:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4567:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4559:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:22:6"
									},
									"returnParameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1722,
												"src": "4593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:6"
									},
									"scope": 1798,
									"src": "4535:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1746,
										"nodeType": "Block",
										"src": "5241:111:6",
										"statements": [
											{
												"id": 1745,
												"nodeType": "UncheckedBlock",
												"src": "5252:93:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1735,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1727,
																		"src": "5285:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1736,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1725,
																		"src": "5290:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5285:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1738,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1729,
																	"src": "5293:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1734,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5277:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1740,
														"nodeType": "ExpressionStatement",
														"src": "5277:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1741,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "5328:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1742,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "5332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5328:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1733,
														"id": 1744,
														"nodeType": "Return",
														"src": "5321:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1723,
										"nodeType": "StructuredDocumentation",
										"src": "4641:465:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5121:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1729,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5189:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5175:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1728,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5175:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:84:6"
									},
									"returnParameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "5232:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:9:6"
									},
									"scope": 1798,
									"src": "5112:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "5979:110:6",
										"statements": [
											{
												"id": 1770,
												"nodeType": "UncheckedBlock",
												"src": "5990:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1762,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1760,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1752,
																		"src": "6023:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6027:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6023:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1763,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "6030:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1759,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1765,
														"nodeType": "ExpressionStatement",
														"src": "6015:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1750,
																"src": "6065:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1767,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1752,
																"src": "6069:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6065:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1758,
														"id": 1769,
														"nodeType": "Return",
														"src": "6058:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "5360:484:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5881:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5873:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5901:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5893:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5913:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1753,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:84:6"
									},
									"returnParameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "5970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:9:6"
									},
									"scope": 1798,
									"src": "5850:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1796,
										"nodeType": "Block",
										"src": "6881:110:6",
										"statements": [
											{
												"id": 1795,
												"nodeType": "UncheckedBlock",
												"src": "6892:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1787,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1785,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "6925:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6929:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6925:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1788,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1779,
																	"src": "6932:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1784,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1790,
														"nodeType": "ExpressionStatement",
														"src": "6917:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1791,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "6967:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1792,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "6971:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1783,
														"id": 1794,
														"nodeType": "Return",
														"src": "6960:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "6097:649:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6761:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6783:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6775:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6795:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6829:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6815:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1778,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6815:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:84:6"
									},
									"returnParameters": {
										"id": 1783,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1797,
												"src": "6872:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1781,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:9:6"
									},
									"scope": 1798,
									"src": "6752:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1799,
							"src": "482:6512:6",
							"usedErrors": []
						}
					],
					"src": "95:6901:6"
				},
				"id": 6
			}
		}
	}
}